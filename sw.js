const e="MarkdownBlog",s=["./dist/imgs/sun.svg","./dist/imgs/moon.svg","./dist/imgs/rss.svg","./dist/imgs/homepage.svg","./dist/imgs/broken-image.svg","./dist/imgs/fab-switch.svg","./dist/imgs/fab-back-to-top.svg","./dist/imgs/fab-back-to-parent.svg","./dist/imgs/fab-zoom-in.svg","./dist/imgs/fab-zoom-out.svg","./dist/imgs/favicon.png"],t=[/\/dist\/libs\//];function n(e,n){const o="option"===n?t:s,i=function(){const e=location.href,s=e.indexOf("#");return-1!==s&&(e=e.substring(0,s)),e}();for(const s of o){if("string"==typeof s){return new URL(s,i).href===e}if(s instanceof RegExp)return s.test(e);console.error("Unexpected resource path: "+s)}return!1}self.addEventListener("install",(t=>{console.log("[Service Worker] Installing..."),t.waitUntil((async()=>{const t=await caches.open(e);console.log("[Service Worker] Caching all: app shell and content");for(const e of s)try{await t.add(e)}catch(s){console.log("[Service Worker] Cache error when requesting resource "+e),console.error(s)}})())})),self.addEventListener("activate",(s=>{s.waitUntil((async()=>{const s=await caches.open(e);(await s.keys()).filter((e=>!n(e.url,"necessary")&&!n(e.url,"necessary"))).forEach((e=>s.delete(e)))})()),console.log("[Service Worker] Activated")})),self.addEventListener("fetch",(s=>{s.respondWith(async function(){const t=await caches.open(e),o=await t.match(s.request.url);if(o)return o;{const e=await fetch(s.request.url);return n(s.request.url,"option")&&t.put(s.request.url,e.clone()),e}}())}));
//# sourceMappingURL=./dist/sw.map
