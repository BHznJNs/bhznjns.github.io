{"version":3,"file":"ocaml.min.js","sources":["../../src/libs/highlight-es/languages/ocaml.js"],"sourcesContent":["/*\r\nLanguage: OCaml\r\nAuthor: Mehdi Dogguy <mehdi@dogguy.org>\r\nContributors: Nicolas Braud-Santoni <nicolas.braud-santoni@ens-cachan.fr>, Mickael Delahaye <mickael.delahaye@gmail.com>\r\nDescription: OCaml language definition.\r\nWebsite: https://ocaml.org\r\nCategory: functional\r\n*/\r\n\r\nexport default function(hljs) {\r\n  /* missing support for heredoc-like string (OCaml 4.0.2+) */\r\n  return {\r\n    name: 'OCaml',\r\n    aliases: [ 'ml' ],\r\n    keywords: {\r\n      $pattern: '[a-z_]\\\\w*!?',\r\n      keyword:\r\n        'and as assert asr begin class constraint do done downto else end '\r\n        + 'exception external for fun function functor if in include '\r\n        + 'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method '\r\n        + 'mod module mutable new object of open! open or private rec sig struct '\r\n        + 'then to try type val! val virtual when while with '\r\n        /* camlp4 */\r\n        + 'parser value',\r\n      built_in:\r\n        /* built-in types */\r\n        'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit '\r\n        /* (some) types in Pervasives */\r\n        + 'in_channel out_channel ref',\r\n      literal:\r\n        'true false'\r\n    },\r\n    illegal: /\\/\\/|>>/,\r\n    contains: [\r\n      {\r\n        className: 'literal',\r\n        begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)',\r\n        relevance: 0\r\n      },\r\n      hljs.COMMENT(\r\n        '\\\\(\\\\*',\r\n        '\\\\*\\\\)',\r\n        { contains: [ 'self' ] }\r\n      ),\r\n      { /* type variable */\r\n        className: 'symbol',\r\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\r\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\r\n      },\r\n      { /* polymorphic variant */\r\n        className: 'type',\r\n        begin: '`[A-Z][\\\\w\\']*'\r\n      },\r\n      { /* module or constructor */\r\n        className: 'type',\r\n        begin: '\\\\b[A-Z][\\\\w\\']*',\r\n        relevance: 0\r\n      },\r\n      { /* don't color identifiers, but safely catch all identifiers with ' */\r\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*',\r\n        relevance: 0\r\n      },\r\n      hljs.inherit(hljs.APOS_STRING_MODE, {\r\n        className: 'string',\r\n        relevance: 0\r\n      }),\r\n      hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),\r\n      {\r\n        className: 'number',\r\n        begin:\r\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|'\r\n          + '0[oO][0-7_]+[Lln]?|'\r\n          + '0[bB][01_]+[Lln]?|'\r\n          + '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\r\n        relevance: 0\r\n      },\r\n      { begin: /->/ // relevance booster\r\n      }\r\n    ]\r\n  };\r\n}\r\n"],"names":["ocaml","hljs","name","aliases","keywords","$pattern","keyword","built_in","literal","illegal","contains","className","begin","relevance","COMMENT","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE"],"mappings":"AASe,SAAQA,EAACC,GAEtB,MAAO,CACLC,KAAM,QACNC,QAAS,CAAE,MACXC,SAAU,CACRC,SAAU,eACVC,QACE,sVAOFC,SAEE,qHAGFC,QACE,cAEJC,QAAS,UACTC,SAAU,CACR,CACEC,UAAW,UACXC,MAAO,yBACPC,UAAW,GAEbZ,EAAKa,QACH,SACA,SACA,CAAEJ,SAAU,CAAE,UAEhB,CACEC,UAAW,SACXC,MAAO,0BAGT,CACED,UAAW,OACXC,MAAO,iBAET,CACED,UAAW,OACXC,MAAO,kBACPC,UAAW,GAEb,CACED,MAAO,qBACPC,UAAW,GAEbZ,EAAKc,QAAQd,EAAKe,iBAAkB,CAClCL,UAAW,SACXE,UAAW,IAEbZ,EAAKc,QAAQd,EAAKgB,kBAAmB,CAAER,QAAS,OAChD,CACEE,UAAW,SACXC,MACE,2HAIFC,UAAW,GAEb,CAAED,MAAO,OAIf"}