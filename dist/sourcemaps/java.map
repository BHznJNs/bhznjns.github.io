{"version":3,"file":"java.min.js","sources":["../../src/libs/highlight-es/languages/java.js"],"sourcesContent":["/*\r\nLanguage: Java\r\nAuthor: Vsevolod Solovyov <vsevolod.solovyov@gmail.com>\r\nCategory: common, enterprise\r\nWebsite: https://www.java.com/\r\n*/\r\n\r\nimport { NUMERIC as NUMBER } from \"./lib/java-extra.js\";\r\n\r\n/**\r\n * Allows recursive regex expressions to a given depth\r\n *\r\n * ie: recurRegex(\"(abc~~~)\", /~~~/g, 2) becomes:\r\n * (abc(abc(abc)))\r\n *\r\n * @param {string} re\r\n * @param {RegExp} substitution (should be a g mode regex)\r\n * @param {number} depth\r\n * @returns {string}``\r\n */\r\nfunction recurRegex(re, substitution, depth) {\r\n  if (depth === -1) return \"\";\r\n\r\n  return re.replace(substitution, _ => {\r\n    return recurRegex(re, substitution, depth - 1);\r\n  });\r\n}\r\n\r\n/** @type LanguageFn */\r\nexport default function(hljs) {\r\n  const regex = hljs.regex;\r\n  const JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\r\n  const GENERIC_IDENT_RE = JAVA_IDENT_RE\r\n    + recurRegex('(?:<' + JAVA_IDENT_RE + '~~~(?:\\\\s*,\\\\s*' + JAVA_IDENT_RE + '~~~)*>)?', /~~~/g, 2);\r\n  const MAIN_KEYWORDS = [\r\n    'synchronized',\r\n    'abstract',\r\n    'private',\r\n    'var',\r\n    'static',\r\n    'if',\r\n    'const ',\r\n    'for',\r\n    'while',\r\n    'strictfp',\r\n    'finally',\r\n    'protected',\r\n    'import',\r\n    'native',\r\n    'final',\r\n    'void',\r\n    'enum',\r\n    'else',\r\n    'break',\r\n    'transient',\r\n    'catch',\r\n    'instanceof',\r\n    'volatile',\r\n    'case',\r\n    'assert',\r\n    'package',\r\n    'default',\r\n    'public',\r\n    'try',\r\n    'switch',\r\n    'continue',\r\n    'throws',\r\n    'protected',\r\n    'public',\r\n    'private',\r\n    'module',\r\n    'requires',\r\n    'exports',\r\n    'do',\r\n    'sealed',\r\n    'yield',\r\n    'permits'\r\n  ];\r\n\r\n  const BUILT_INS = [\r\n    'super',\r\n    'this'\r\n  ];\r\n\r\n  const LITERALS = [\r\n    'false',\r\n    'true',\r\n    'null'\r\n  ];\r\n\r\n  const TYPES = [\r\n    'char',\r\n    'boolean',\r\n    'long',\r\n    'float',\r\n    'int',\r\n    'byte',\r\n    'short',\r\n    'double'\r\n  ];\r\n\r\n  const KEYWORDS = {\r\n    keyword: MAIN_KEYWORDS,\r\n    literal: LITERALS,\r\n    type: TYPES,\r\n    built_in: BUILT_INS\r\n  };\r\n\r\n  const ANNOTATION = {\r\n    className: 'meta',\r\n    begin: '@' + JAVA_IDENT_RE,\r\n    contains: [\r\n      {\r\n        begin: /\\(/,\r\n        end: /\\)/,\r\n        contains: [ \"self\" ] // allow nested () inside our annotation\r\n      }\r\n    ]\r\n  };\r\n  const PARAMS = {\r\n    className: 'params',\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    keywords: KEYWORDS,\r\n    relevance: 0,\r\n    contains: [ hljs.C_BLOCK_COMMENT_MODE ],\r\n    endsParent: true\r\n  };\r\n\r\n  return {\r\n    name: 'Java',\r\n    aliases: [ 'jsp' ],\r\n    keywords: KEYWORDS,\r\n    illegal: /<\\/|#/,\r\n    contains: [\r\n      hljs.COMMENT(\r\n        '/\\\\*\\\\*',\r\n        '\\\\*/',\r\n        {\r\n          relevance: 0,\r\n          contains: [\r\n            {\r\n              // eat up @'s in emails to prevent them to be recognized as doctags\r\n              begin: /\\w+@/,\r\n              relevance: 0\r\n            },\r\n            {\r\n              className: 'doctag',\r\n              begin: '@[A-Za-z]+'\r\n            }\r\n          ]\r\n        }\r\n      ),\r\n      // relevance boost\r\n      {\r\n        begin: /import java\\.[a-z]+\\./,\r\n        keywords: \"import\",\r\n        relevance: 2\r\n      },\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      {\r\n        begin: /\"\"\"/,\r\n        end: /\"\"\"/,\r\n        className: \"string\",\r\n        contains: [ hljs.BACKSLASH_ESCAPE ]\r\n      },\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      {\r\n        match: [\r\n          /\\b(?:class|interface|enum|extends|implements|new)/,\r\n          /\\s+/,\r\n          JAVA_IDENT_RE\r\n        ],\r\n        className: {\r\n          1: \"keyword\",\r\n          3: \"title.class\"\r\n        }\r\n      },\r\n      {\r\n        // Exceptions for hyphenated keywords\r\n        match: /non-sealed/,\r\n        scope: \"keyword\"\r\n      },\r\n      {\r\n        begin: [\r\n          regex.concat(/(?!else)/, JAVA_IDENT_RE),\r\n          /\\s+/,\r\n          JAVA_IDENT_RE,\r\n          /\\s+/,\r\n          /=(?!=)/\r\n        ],\r\n        className: {\r\n          1: \"type\",\r\n          3: \"variable\",\r\n          5: \"operator\"\r\n        }\r\n      },\r\n      {\r\n        begin: [\r\n          /record/,\r\n          /\\s+/,\r\n          JAVA_IDENT_RE\r\n        ],\r\n        className: {\r\n          1: \"keyword\",\r\n          3: \"title.class\"\r\n        },\r\n        contains: [\r\n          PARAMS,\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE\r\n        ]\r\n      },\r\n      {\r\n        // Expression keywords prevent 'keyword Name(...)' from being\r\n        // recognized as a function definition\r\n        beginKeywords: 'new throw return else',\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: [\r\n          '(?:' + GENERIC_IDENT_RE + '\\\\s+)',\r\n          hljs.UNDERSCORE_IDENT_RE,\r\n          /\\s*(?=\\()/\r\n        ],\r\n        className: { 2: \"title.function\" },\r\n        keywords: KEYWORDS,\r\n        contains: [\r\n          {\r\n            className: 'params',\r\n            begin: /\\(/,\r\n            end: /\\)/,\r\n            keywords: KEYWORDS,\r\n            relevance: 0,\r\n            contains: [\r\n              ANNOTATION,\r\n              hljs.APOS_STRING_MODE,\r\n              hljs.QUOTE_STRING_MODE,\r\n              NUMBER,\r\n              hljs.C_BLOCK_COMMENT_MODE\r\n            ]\r\n          },\r\n          hljs.C_LINE_COMMENT_MODE,\r\n          hljs.C_BLOCK_COMMENT_MODE\r\n        ]\r\n      },\r\n      NUMBER,\r\n      ANNOTATION\r\n    ]\r\n  };\r\n}\r\n"],"names":["recurRegex","re","substitution","depth","replace","_","java","hljs","regex","JAVA_IDENT_RE","GENERIC_IDENT_RE","KEYWORDS","keyword","literal","type","built_in","ANNOTATION","className","begin","contains","end","PARAMS","keywords","relevance","C_BLOCK_COMMENT_MODE","endsParent","name","aliases","illegal","COMMENT","C_LINE_COMMENT_MODE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","match","scope","concat","beginKeywords","UNDERSCORE_IDENT_RE","NUMBER"],"mappings":"wCAoBA,SAASA,EAAWC,EAAIC,EAAcC,GACpC,OAAe,IAAXA,EAAqB,GAElBF,EAAGG,QAAQF,GAAcG,GACvBL,EAAWC,EAAIC,EAAcC,EAAQ,IAEhD,CAGe,SAAQG,EAACC,GACtB,MAAMC,EAAQD,EAAKC,MACbC,EAAgB,iCAChBC,EAAmBD,EACrBT,EAAW,OAASS,EAAgB,kBAAoBA,EAAgB,WAAY,OAAQ,GAoE1FE,EAAW,CACfC,QApEoB,CACpB,eACA,WACA,UACA,MACA,SACA,KACA,SACA,MACA,QACA,WACA,UACA,YACA,SACA,SACA,QACA,OACA,OACA,OACA,QACA,YACA,QACA,aACA,WACA,OACA,SACA,UACA,UACA,SACA,MACA,SACA,WACA,SACA,YACA,SACA,UACA,SACA,WACA,UACA,KACA,SACA,QACA,WA2BAC,QAnBe,CACf,QACA,OACA,QAiBAC,KAdY,CACZ,OACA,UACA,OACA,QACA,MACA,OACA,QACA,UAOAC,SA1BgB,CAChB,QACA,SA2BIC,EAAa,CACjBC,UAAW,OACXC,MAAO,IAAMT,EACbU,SAAU,CACR,CACED,MAAO,KACPE,IAAK,KACLD,SAAU,CAAE,WAIZE,EAAS,CACbJ,UAAW,SACXC,MAAO,KACPE,IAAK,KACLE,SAAUX,EACVY,UAAW,EACXJ,SAAU,CAAEZ,EAAKiB,sBACjBC,YAAY,GAGd,MAAO,CACLC,KAAM,OACNC,QAAS,CAAE,OACXL,SAAUX,EACViB,QAAS,QACTT,SAAU,CACRZ,EAAKsB,QACH,UACA,OACA,CACEN,UAAW,EACXJ,SAAU,CACR,CAEED,MAAO,OACPK,UAAW,GAEb,CACEN,UAAW,SACXC,MAAO,iBAMf,CACEA,MAAO,wBACPI,SAAU,SACVC,UAAW,GAEbhB,EAAKuB,oBACLvB,EAAKiB,qBACL,CACEN,MAAO,MACPE,IAAK,MACLH,UAAW,SACXE,SAAU,CAAEZ,EAAKwB,mBAEnBxB,EAAKyB,iBACLzB,EAAK0B,kBACL,CACEC,MAAO,CACL,oDACA,MACAzB,GAEFQ,UAAW,CACT,EAAG,UACH,EAAG,gBAGP,CAEEiB,MAAO,aACPC,MAAO,WAET,CACEjB,MAAO,CACLV,EAAM4B,OAAO,WAAY3B,GACzB,MACAA,EACA,MACA,UAEFQ,UAAW,CACT,EAAG,OACH,EAAG,WACH,EAAG,aAGP,CACEC,MAAO,CACL,SACA,MACAT,GAEFQ,UAAW,CACT,EAAG,UACH,EAAG,eAELE,SAAU,CACRE,EACAd,EAAKuB,oBACLvB,EAAKiB,uBAGT,CAGEa,cAAe,wBACfd,UAAW,GAEb,CACEL,MAAO,CACL,MAAQR,EAAmB,QAC3BH,EAAK+B,oBACL,aAEFrB,UAAW,CAAE,EAAG,kBAChBK,SAAUX,EACVQ,SAAU,CACR,CACEF,UAAW,SACXC,MAAO,KACPE,IAAK,KACLE,SAAUX,EACVY,UAAW,EACXJ,SAAU,CACRH,EACAT,EAAKyB,iBACLzB,EAAK0B,kBACLM,EACAhC,EAAKiB,uBAGTjB,EAAKuB,oBACLvB,EAAKiB,uBAGTe,EACAvB,GAGN"}