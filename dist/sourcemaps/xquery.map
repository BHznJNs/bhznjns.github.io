{"version":3,"file":"xquery.min.js","sources":["../../src/libs/highlight-es/languages/xquery.js"],"sourcesContent":["/*\r\nLanguage: XQuery\r\nAuthor: Dirk Kirsten <dk@basex.org>\r\nContributor: Duncan Paterson\r\nDescription: Supports XQuery 3.1 including XQuery Update 3, so also XPath (as it is a superset)\r\nRefactored to process xml constructor syntax and function-bodies. Added missing data-types, xpath operands, inbuilt functions, and query prologs\r\nWebsite: https://www.w3.org/XML/Query/\r\nCategory: functional\r\nAudit: 2020\r\n*/\r\n\r\n/** @type LanguageFn */\r\nexport default function(_hljs) {\r\n  // see https://www.w3.org/TR/xquery/#id-terminal-delimitation\r\n  const KEYWORDS = [\r\n    \"module\",\r\n    \"schema\",\r\n    \"namespace\",\r\n    \"boundary-space\",\r\n    \"preserve\",\r\n    \"no-preserve\",\r\n    \"strip\",\r\n    \"default\",\r\n    \"collation\",\r\n    \"base-uri\",\r\n    \"ordering\",\r\n    \"context\",\r\n    \"decimal-format\",\r\n    \"decimal-separator\",\r\n    \"copy-namespaces\",\r\n    \"empty-sequence\",\r\n    \"except\",\r\n    \"exponent-separator\",\r\n    \"external\",\r\n    \"grouping-separator\",\r\n    \"inherit\",\r\n    \"no-inherit\",\r\n    \"lax\",\r\n    \"minus-sign\",\r\n    \"per-mille\",\r\n    \"percent\",\r\n    \"schema-attribute\",\r\n    \"schema-element\",\r\n    \"strict\",\r\n    \"unordered\",\r\n    \"zero-digit\",\r\n    \"declare\",\r\n    \"import\",\r\n    \"option\",\r\n    \"function\",\r\n    \"validate\",\r\n    \"variable\",\r\n    \"for\",\r\n    \"at\",\r\n    \"in\",\r\n    \"let\",\r\n    \"where\",\r\n    \"order\",\r\n    \"group\",\r\n    \"by\",\r\n    \"return\",\r\n    \"if\",\r\n    \"then\",\r\n    \"else\",\r\n    \"tumbling\",\r\n    \"sliding\",\r\n    \"window\",\r\n    \"start\",\r\n    \"when\",\r\n    \"only\",\r\n    \"end\",\r\n    \"previous\",\r\n    \"next\",\r\n    \"stable\",\r\n    \"ascending\",\r\n    \"descending\",\r\n    \"allowing\",\r\n    \"empty\",\r\n    \"greatest\",\r\n    \"least\",\r\n    \"some\",\r\n    \"every\",\r\n    \"satisfies\",\r\n    \"switch\",\r\n    \"case\",\r\n    \"typeswitch\",\r\n    \"try\",\r\n    \"catch\",\r\n    \"and\",\r\n    \"or\",\r\n    \"to\",\r\n    \"union\",\r\n    \"intersect\",\r\n    \"instance\",\r\n    \"of\",\r\n    \"treat\",\r\n    \"as\",\r\n    \"castable\",\r\n    \"cast\",\r\n    \"map\",\r\n    \"array\",\r\n    \"delete\",\r\n    \"insert\",\r\n    \"into\",\r\n    \"replace\",\r\n    \"value\",\r\n    \"rename\",\r\n    \"copy\",\r\n    \"modify\",\r\n    \"update\"\r\n  ];\r\n\r\n  // Node Types (sorted by inheritance)\r\n  // atomic types (sorted by inheritance)\r\n  const TYPES = [\r\n    \"item\",\r\n    \"document-node\",\r\n    \"node\",\r\n    \"attribute\",\r\n    \"document\",\r\n    \"element\",\r\n    \"comment\",\r\n    \"namespace\",\r\n    \"namespace-node\",\r\n    \"processing-instruction\",\r\n    \"text\",\r\n    \"construction\",\r\n    \"xs:anyAtomicType\",\r\n    \"xs:untypedAtomic\",\r\n    \"xs:duration\",\r\n    \"xs:time\",\r\n    \"xs:decimal\",\r\n    \"xs:float\",\r\n    \"xs:double\",\r\n    \"xs:gYearMonth\",\r\n    \"xs:gYear\",\r\n    \"xs:gMonthDay\",\r\n    \"xs:gMonth\",\r\n    \"xs:gDay\",\r\n    \"xs:boolean\",\r\n    \"xs:base64Binary\",\r\n    \"xs:hexBinary\",\r\n    \"xs:anyURI\",\r\n    \"xs:QName\",\r\n    \"xs:NOTATION\",\r\n    \"xs:dateTime\",\r\n    \"xs:dateTimeStamp\",\r\n    \"xs:date\",\r\n    \"xs:string\",\r\n    \"xs:normalizedString\",\r\n    \"xs:token\",\r\n    \"xs:language\",\r\n    \"xs:NMTOKEN\",\r\n    \"xs:Name\",\r\n    \"xs:NCName\",\r\n    \"xs:ID\",\r\n    \"xs:IDREF\",\r\n    \"xs:ENTITY\",\r\n    \"xs:integer\",\r\n    \"xs:nonPositiveInteger\",\r\n    \"xs:negativeInteger\",\r\n    \"xs:long\",\r\n    \"xs:int\",\r\n    \"xs:short\",\r\n    \"xs:byte\",\r\n    \"xs:nonNegativeInteger\",\r\n    \"xs:unisignedLong\",\r\n    \"xs:unsignedInt\",\r\n    \"xs:unsignedShort\",\r\n    \"xs:unsignedByte\",\r\n    \"xs:positiveInteger\",\r\n    \"xs:yearMonthDuration\",\r\n    \"xs:dayTimeDuration\"\r\n  ];\r\n\r\n  const LITERALS = [\r\n    \"eq\",\r\n    \"ne\",\r\n    \"lt\",\r\n    \"le\",\r\n    \"gt\",\r\n    \"ge\",\r\n    \"is\",\r\n    \"self::\",\r\n    \"child::\",\r\n    \"descendant::\",\r\n    \"descendant-or-self::\",\r\n    \"attribute::\",\r\n    \"following::\",\r\n    \"following-sibling::\",\r\n    \"parent::\",\r\n    \"ancestor::\",\r\n    \"ancestor-or-self::\",\r\n    \"preceding::\",\r\n    \"preceding-sibling::\",\r\n    \"NaN\"\r\n  ];\r\n\r\n  // functions (TODO: find regex for op: without breaking build)\r\n  const BUILT_IN = {\r\n    className: 'built_in',\r\n    variants: [\r\n      {\r\n        begin: /\\barray:/,\r\n        end: /(?:append|filter|flatten|fold-(?:left|right)|for-each(?:-pair)?|get|head|insert-before|join|put|remove|reverse|size|sort|subarray|tail)\\b/\r\n      },\r\n      {\r\n        begin: /\\bmap:/,\r\n        end: /(?:contains|entry|find|for-each|get|keys|merge|put|remove|size)\\b/\r\n      },\r\n      {\r\n        begin: /\\bmath:/,\r\n        end: /(?:a(?:cos|sin|tan[2]?)|cos|exp(?:10)?|log(?:10)?|pi|pow|sin|sqrt|tan)\\b/\r\n      },\r\n      {\r\n        begin: /\\bop:/,\r\n        end: /\\(/,\r\n        excludeEnd: true\r\n      },\r\n      {\r\n        begin: /\\bfn:/,\r\n        end: /\\(/,\r\n        excludeEnd: true\r\n      },\r\n      // do not highlight inbuilt strings as variable or xml element names\r\n      { begin: /[^</$:'\"-]\\b(?:abs|accumulator-(?:after|before)|adjust-(?:date(?:Time)?|time)-to-timezone|analyze-string|apply|available-(?:environment-variables|system-properties)|avg|base-uri|boolean|ceiling|codepoints?-(?:equal|to-string)|collation-key|collection|compare|concat|contains(?:-token)?|copy-of|count|current(?:-)?(?:date(?:Time)?|time|group(?:ing-key)?|output-uri|merge-(?:group|key))?data|dateTime|days?-from-(?:date(?:Time)?|duration)|deep-equal|default-(?:collation|language)|distinct-values|document(?:-uri)?|doc(?:-available)?|element-(?:available|with-id)|empty|encode-for-uri|ends-with|environment-variable|error|escape-html-uri|exactly-one|exists|false|filter|floor|fold-(?:left|right)|for-each(?:-pair)?|format-(?:date(?:Time)?|time|integer|number)|function-(?:arity|available|lookup|name)|generate-id|has-children|head|hours-from-(?:dateTime|duration|time)|id(?:ref)?|implicit-timezone|in-scope-prefixes|index-of|innermost|insert-before|iri-to-uri|json-(?:doc|to-xml)|key|lang|last|load-xquery-module|local-name(?:-from-QName)?|(?:lower|upper)-case|matches|max|minutes-from-(?:dateTime|duration|time)|min|months?-from-(?:date(?:Time)?|duration)|name(?:space-uri-?(?:for-prefix|from-QName)?)?|nilled|node-name|normalize-(?:space|unicode)|not|number|one-or-more|outermost|parse-(?:ietf-date|json)|path|position|(?:prefix-from-)?QName|random-number-generator|regex-group|remove|replace|resolve-(?:QName|uri)|reverse|root|round(?:-half-to-even)?|seconds-from-(?:dateTime|duration|time)|snapshot|sort|starts-with|static-base-uri|stream-available|string-?(?:join|length|to-codepoints)?|subsequence|substring-?(?:after|before)?|sum|system-property|tail|timezone-from-(?:date(?:Time)?|time)|tokenize|trace|trans(?:form|late)|true|type-available|unordered|unparsed-(?:entity|text)?-?(?:public-id|uri|available|lines)?|uri-collection|xml-to-json|years?-from-(?:date(?:Time)?|duration)|zero-or-one)\\b/ },\r\n      {\r\n        begin: /\\blocal:/,\r\n        end: /\\(/,\r\n        excludeEnd: true\r\n      },\r\n      {\r\n        begin: /\\bzip:/,\r\n        end: /(?:zip-file|(?:xml|html|text|binary)-entry| (?:update-)?entries)\\b/\r\n      },\r\n      {\r\n        begin: /\\b(?:util|db|functx|app|xdmp|xmldb):/,\r\n        end: /\\(/,\r\n        excludeEnd: true\r\n      }\r\n    ]\r\n  };\r\n\r\n  const TITLE = {\r\n    className: 'title',\r\n    begin: /\\bxquery version \"[13]\\.[01]\"\\s?(?:encoding \".+\")?/,\r\n    end: /;/\r\n  };\r\n\r\n  const VAR = {\r\n    className: 'variable',\r\n    begin: /[$][\\w\\-:]+/\r\n  };\r\n\r\n  const NUMBER = {\r\n    className: 'number',\r\n    begin: /(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b/,\r\n    relevance: 0\r\n  };\r\n\r\n  const STRING = {\r\n    className: 'string',\r\n    variants: [\r\n      {\r\n        begin: /\"/,\r\n        end: /\"/,\r\n        contains: [\r\n          {\r\n            begin: /\"\"/,\r\n            relevance: 0\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        begin: /'/,\r\n        end: /'/,\r\n        contains: [\r\n          {\r\n            begin: /''/,\r\n            relevance: 0\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const ANNOTATION = {\r\n    className: 'meta',\r\n    begin: /%[\\w\\-:]+/\r\n  };\r\n\r\n  const COMMENT = {\r\n    className: 'comment',\r\n    begin: /\\(:/,\r\n    end: /:\\)/,\r\n    relevance: 10,\r\n    contains: [\r\n      {\r\n        className: 'doctag',\r\n        begin: /@\\w+/\r\n      }\r\n    ]\r\n  };\r\n\r\n  // see https://www.w3.org/TR/xquery/#id-computedConstructors\r\n  // mocha: computed_inbuilt\r\n  // see https://www.regexpal.com/?fam=99749\r\n  const COMPUTED = {\r\n    beginKeywords: 'element attribute comment document processing-instruction',\r\n    end: /\\{/,\r\n    excludeEnd: true\r\n  };\r\n\r\n  // mocha: direct_method\r\n  const DIRECT = {\r\n    begin: /<([\\w._:-]+)(\\s+\\S*=('|\").*('|\"))?>/,\r\n    end: /(\\/[\\w._:-]+>)/,\r\n    subLanguage: 'xml',\r\n    contains: [\r\n      {\r\n        begin: /\\{/,\r\n        end: /\\}/,\r\n        subLanguage: 'xquery'\r\n      },\r\n      'self'\r\n    ]\r\n  };\r\n\r\n  const CONTAINS = [\r\n    VAR,\r\n    BUILT_IN,\r\n    STRING,\r\n    NUMBER,\r\n    COMMENT,\r\n    ANNOTATION,\r\n    TITLE,\r\n    COMPUTED,\r\n    DIRECT\r\n  ];\r\n\r\n  const METHOD = {\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    contains: CONTAINS\r\n  };\r\n\r\n  return {\r\n    name: 'XQuery',\r\n    aliases: [\r\n      'xpath',\r\n      'xq',\r\n      'xqm'\r\n    ],\r\n    case_insensitive: false,\r\n    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\r\n    keywords: {\r\n      $pattern: /[a-zA-Z$][a-zA-Z0-9_:-]*/,\r\n      keyword: KEYWORDS,\r\n      type: TYPES,\r\n      literal: LITERALS\r\n    },\r\n    contains: CONTAINS\r\n  };\r\n}\r\n"],"names":["xquery","_hljs","name","aliases","case_insensitive","illegal","keywords","$pattern","keyword","type","literal","contains","className","begin","variants","end","excludeEnd","relevance","beginKeywords","subLanguage"],"mappings":"AAYe,SAAQA,EAACC,GA8UtB,MAAO,CACLC,KAAM,SACNC,QAAS,CACP,QACA,KACA,OAEFC,kBAAkB,EAClBC,QAAS,0CACTC,SAAU,CACRC,SAAU,2BACVC,QAvVa,CACf,SACA,SACA,YACA,iBACA,WACA,cACA,QACA,UACA,YACA,WACA,WACA,UACA,iBACA,oBACA,kBACA,iBACA,SACA,qBACA,WACA,qBACA,UACA,aACA,MACA,aACA,YACA,UACA,mBACA,iBACA,SACA,YACA,aACA,UACA,SACA,SACA,WACA,WACA,WACA,MACA,KACA,KACA,MACA,QACA,QACA,QACA,KACA,SACA,KACA,OACA,OACA,WACA,UACA,SACA,QACA,OACA,OACA,MACA,WACA,OACA,SACA,YACA,aACA,WACA,QACA,WACA,QACA,OACA,QACA,YACA,SACA,OACA,aACA,MACA,QACA,MACA,KACA,KACA,QACA,YACA,WACA,KACA,QACA,KACA,WACA,OACA,MACA,QACA,SACA,SACA,OACA,UACA,QACA,SACA,OACA,SACA,UAyPEC,KApPU,CACZ,OACA,gBACA,OACA,YACA,WACA,UACA,UACA,YACA,iBACA,yBACA,OACA,eACA,mBACA,mBACA,cACA,UACA,aACA,WACA,YACA,gBACA,WACA,eACA,YACA,UACA,aACA,kBACA,eACA,YACA,WACA,cACA,cACA,mBACA,UACA,YACA,sBACA,WACA,cACA,aACA,UACA,YACA,QACA,WACA,YACA,aACA,wBACA,qBACA,UACA,SACA,WACA,UACA,wBACA,mBACA,iBACA,mBACA,kBACA,qBACA,uBACA,sBA2LEC,QAxLa,CACf,KACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,UACA,eACA,uBACA,cACA,cACA,sBACA,WACA,aACA,qBACA,cACA,sBACA,QAsKAC,SAjCe,CA/EL,CACVC,UAAW,WACXC,MAAO,eApDQ,CACfD,UAAW,WACXE,SAAU,CACR,CACED,MAAO,WACPE,IAAK,6IAEP,CACEF,MAAO,SACPE,IAAK,qEAEP,CACEF,MAAO,UACPE,IAAK,4EAEP,CACEF,MAAO,QACPE,IAAK,KACLC,YAAY,GAEd,CACEH,MAAO,QACPE,IAAK,KACLC,YAAY,GAGd,CAAEH,MAAO,+2DACT,CACEA,MAAO,WACPE,IAAK,KACLC,YAAY,GAEd,CACEH,MAAO,SACPE,IAAK,sEAEP,CACEF,MAAO,uCACPE,IAAK,KACLC,YAAY,KAsBH,CACbJ,UAAW,SACXE,SAAU,CACR,CACED,MAAO,IACPE,IAAK,IACLJ,SAAU,CACR,CACEE,MAAO,KACPI,UAAW,KAIjB,CACEJ,MAAO,IACPE,IAAK,IACLJ,SAAU,CACR,CACEE,MAAO,KACPI,UAAW,OAzBN,CACbL,UAAW,SACXC,MAAO,uEACPI,UAAW,GAkCG,CACdL,UAAW,UACXC,MAAO,MACPE,IAAK,MACLE,UAAW,GACXN,SAAU,CACR,CACEC,UAAW,SACXC,MAAO,UAbM,CACjBD,UAAW,OACXC,MAAO,aA7CK,CACZD,UAAW,QACXC,MAAO,qDACPE,IAAK,KA6DU,CACfG,cAAe,4DACfH,IAAK,KACLC,YAAY,GAIC,CACbH,MAAO,sCACPE,IAAK,iBACLI,YAAa,MACbR,SAAU,CACR,CACEE,MAAO,KACPE,IAAK,KACLI,YAAa,UAEf,UAuCN"}