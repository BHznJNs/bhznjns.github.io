{"version":3,"file":"javascript.min.js","sources":["../../src/libs/highlight-es/languages/lib/ecmascript.js","../../src/libs/highlight-es/languages/javascript.js"],"sourcesContent":["export const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\r\nconst KEYWORDS = [\r\n  \"as\", // for exports\r\n  \"in\",\r\n  \"of\",\r\n  \"if\",\r\n  \"for\",\r\n  \"while\",\r\n  \"finally\",\r\n  \"var\",\r\n  \"new\",\r\n  \"function\",\r\n  \"do\",\r\n  \"return\",\r\n  \"void\",\r\n  \"else\",\r\n  \"break\",\r\n  \"catch\",\r\n  \"instanceof\",\r\n  \"with\",\r\n  \"throw\",\r\n  \"case\",\r\n  \"default\",\r\n  \"try\",\r\n  \"switch\",\r\n  \"continue\",\r\n  \"typeof\",\r\n  \"delete\",\r\n  \"let\",\r\n  \"yield\",\r\n  \"const\",\r\n  \"class\",\r\n  // JS handles these with a special rule\r\n  // \"get\",\r\n  // \"set\",\r\n  \"debugger\",\r\n  \"async\",\r\n  \"await\",\r\n  \"static\",\r\n  \"import\",\r\n  \"from\",\r\n  \"export\",\r\n  \"extends\"\r\n];\r\nconst LITERALS = [\r\n  \"true\",\r\n  \"false\",\r\n  \"null\",\r\n  \"undefined\",\r\n  \"NaN\",\r\n  \"Infinity\"\r\n];\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\r\nexport const TYPES = [\r\n  // Fundamental objects\r\n  \"Object\",\r\n  \"Function\",\r\n  \"Boolean\",\r\n  \"Symbol\",\r\n  // numbers and dates\r\n  \"Math\",\r\n  \"Date\",\r\n  \"Number\",\r\n  \"BigInt\",\r\n  // text\r\n  \"String\",\r\n  \"RegExp\",\r\n  // Indexed collections\r\n  \"Array\",\r\n  \"Float32Array\",\r\n  \"Float64Array\",\r\n  \"Int8Array\",\r\n  \"Uint8Array\",\r\n  \"Uint8ClampedArray\",\r\n  \"Int16Array\",\r\n  \"Int32Array\",\r\n  \"Uint16Array\",\r\n  \"Uint32Array\",\r\n  \"BigInt64Array\",\r\n  \"BigUint64Array\",\r\n  // Keyed collections\r\n  \"Set\",\r\n  \"Map\",\r\n  \"WeakSet\",\r\n  \"WeakMap\",\r\n  // Structured data\r\n  \"ArrayBuffer\",\r\n  \"SharedArrayBuffer\",\r\n  \"Atomics\",\r\n  \"DataView\",\r\n  \"JSON\",\r\n  // Control abstraction objects\r\n  \"Promise\",\r\n  \"Generator\",\r\n  \"GeneratorFunction\",\r\n  \"AsyncFunction\",\r\n  // Reflection\r\n  \"Reflect\",\r\n  \"Proxy\",\r\n  // Internationalization\r\n  \"Intl\",\r\n  // WebAssembly\r\n  \"WebAssembly\"\r\n];\r\n\r\nexport const ERROR_TYPES = [\r\n  \"Error\",\r\n  \"EvalError\",\r\n  \"InternalError\",\r\n  \"RangeError\",\r\n  \"ReferenceError\",\r\n  \"SyntaxError\",\r\n  \"TypeError\",\r\n  \"URIError\"\r\n];\r\n\r\nexport const BUILT_IN_GLOBALS = [\r\n  \"setInterval\",\r\n  \"setTimeout\",\r\n  \"clearInterval\",\r\n  \"clearTimeout\",\r\n\r\n  \"require\",\r\n  \"exports\",\r\n\r\n  \"eval\",\r\n  \"isFinite\",\r\n  \"isNaN\",\r\n  \"parseFloat\",\r\n  \"parseInt\",\r\n  \"decodeURI\",\r\n  \"decodeURIComponent\",\r\n  \"encodeURI\",\r\n  \"encodeURIComponent\",\r\n  \"escape\",\r\n  \"unescape\"\r\n];\r\n\r\nexport const BUILT_IN_VARIABLES = [\r\n  \"arguments\",\r\n  \"this\",\r\n  \"super\",\r\n  \"console\",\r\n  \"window\",\r\n  \"document\",\r\n  \"localStorage\",\r\n  \"sessionStorage\",\r\n  \"module\",\r\n  \"global\" // Node.js\r\n];\r\n\r\nconst BUILT_INS = [].concat(\r\n  BUILT_IN_GLOBALS,\r\n  TYPES,\r\n  ERROR_TYPES\r\n);\r\n\r\nexport { LITERALS, BUILT_INS, KEYWORDS };\r\n","/*\r\nLanguage: JavaScript\r\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\r\nCategory: common, scripting, web\r\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\r\n*/\r\n\r\nimport * as ECMAScript from './lib/ecmascript.js';\r\n\r\n/** @type LanguageFn */\r\nexport default function(hljs) {\r\n  const regex = hljs.regex;\r\n  /**\r\n   * Takes a string like \"<Booger\" and checks to see\r\n   * if we can find a matching \"</Booger\" later in the\r\n   * content.\r\n   * @param {RegExpMatchArray} match\r\n   * @param {{after:number}} param1\r\n   */\r\n  const hasClosingTag = (match, { after }) => {\r\n    const tag = \"</\" + match[0].slice(1);\r\n    const pos = match.input.indexOf(tag, after);\r\n    return pos !== -1;\r\n  };\r\n\r\n  const IDENT_RE = ECMAScript.IDENT_RE;\r\n  const FRAGMENT = {\r\n    begin: '<>',\r\n    end: '</>'\r\n  };\r\n  // to avoid some special cases inside isTrulyOpeningTag\r\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\._:-]+\\s*\\/>/;\r\n  const XML_TAG = {\r\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\r\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\r\n    /**\r\n     * @param {RegExpMatchArray} match\r\n     * @param {CallbackResponse} response\r\n     */\r\n    isTrulyOpeningTag: (match, response) => {\r\n      const afterMatchIndex = match[0].length + match.index;\r\n      const nextChar = match.input[afterMatchIndex];\r\n      if (\r\n        // HTML should not include another raw `<` inside a tag\r\n        // nested type?\r\n        // `<Array<Array<number>>`, etc.\r\n        nextChar === \"<\" ||\r\n        // the , gives away that this is not HTML\r\n        // `<T, A extends keyof T, V>`\r\n        nextChar === \",\"\r\n        ) {\r\n        response.ignoreMatch();\r\n        return;\r\n      }\r\n\r\n      // `<something>`\r\n      // Quite possibly a tag, lets look for a matching closing tag...\r\n      if (nextChar === \">\") {\r\n        // if we cannot find a matching closing tag, then we\r\n        // will ignore it\r\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\r\n          response.ignoreMatch();\r\n        }\r\n      }\r\n\r\n      // `<blah />` (self-closing)\r\n      // handled by simpleSelfClosing rule\r\n\r\n      let m;\r\n      const afterMatch = match.input.substring(afterMatchIndex);\r\n\r\n      // some more template typing stuff\r\n      //  <T = any>(key?: string) => Modify<\r\n      if ((m = afterMatch.match(/^\\s*=/))) {\r\n        response.ignoreMatch();\r\n        return;\r\n      }\r\n\r\n      // `<From extends string>`\r\n      // technically this could be HTML, but it smells like a type\r\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\r\n      if ((m = afterMatch.match(/^\\s+extends\\s+/))) {\r\n        if (m.index === 0) {\r\n          response.ignoreMatch();\r\n          // eslint-disable-next-line no-useless-return\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const KEYWORDS = {\r\n    $pattern: ECMAScript.IDENT_RE,\r\n    keyword: ECMAScript.KEYWORDS,\r\n    literal: ECMAScript.LITERALS,\r\n    built_in: ECMAScript.BUILT_INS,\r\n    \"variable.language\": ECMAScript.BUILT_IN_VARIABLES\r\n  };\r\n\r\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\r\n  const decimalDigits = '[0-9](_?[0-9])*';\r\n  const frac = `\\\\.(${decimalDigits})`;\r\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\r\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\r\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\r\n  const NUMBER = {\r\n    className: 'number',\r\n    variants: [\r\n      // DecimalLiteral\r\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\r\n        `[eE][+-]?(${decimalDigits})\\\\b` },\r\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\r\n\r\n      // DecimalBigIntegerLiteral\r\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\r\n\r\n      // NonDecimalIntegerLiteral\r\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\r\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\r\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\r\n\r\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\r\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\r\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\r\n    ],\r\n    relevance: 0\r\n  };\r\n\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: '\\\\$\\\\{',\r\n    end: '\\\\}',\r\n    keywords: KEYWORDS,\r\n    contains: [] // defined later\r\n  };\r\n  const HTML_TEMPLATE = {\r\n    begin: 'html`',\r\n    end: '',\r\n    starts: {\r\n      end: '`',\r\n      returnEnd: false,\r\n      contains: [\r\n        hljs.BACKSLASH_ESCAPE,\r\n        SUBST\r\n      ],\r\n      subLanguage: 'xml'\r\n    }\r\n  };\r\n  const CSS_TEMPLATE = {\r\n    begin: 'css`',\r\n    end: '',\r\n    starts: {\r\n      end: '`',\r\n      returnEnd: false,\r\n      contains: [\r\n        hljs.BACKSLASH_ESCAPE,\r\n        SUBST\r\n      ],\r\n      subLanguage: 'css'\r\n    }\r\n  };\r\n  const GRAPHQL_TEMPLATE = {\r\n    begin: 'gql`',\r\n    end: '',\r\n    starts: {\r\n      end: '`',\r\n      returnEnd: false,\r\n      contains: [\r\n        hljs.BACKSLASH_ESCAPE,\r\n        SUBST\r\n      ],\r\n      subLanguage: 'graphql'\r\n    }\r\n  };\r\n  const TEMPLATE_STRING = {\r\n    className: 'string',\r\n    begin: '`',\r\n    end: '`',\r\n    contains: [\r\n      hljs.BACKSLASH_ESCAPE,\r\n      SUBST\r\n    ]\r\n  };\r\n  const JSDOC_COMMENT = hljs.COMMENT(\r\n    /\\/\\*\\*(?!\\/)/,\r\n    '\\\\*/',\r\n    {\r\n      relevance: 0,\r\n      contains: [\r\n        {\r\n          begin: '(?=@[A-Za-z]+)',\r\n          relevance: 0,\r\n          contains: [\r\n            {\r\n              className: 'doctag',\r\n              begin: '@[A-Za-z]+'\r\n            },\r\n            {\r\n              className: 'type',\r\n              begin: '\\\\{',\r\n              end: '\\\\}',\r\n              excludeEnd: true,\r\n              excludeBegin: true,\r\n              relevance: 0\r\n            },\r\n            {\r\n              className: 'variable',\r\n              begin: IDENT_RE + '(?=\\\\s*(-)|$)',\r\n              endsParent: true,\r\n              relevance: 0\r\n            },\r\n            // eat spaces (not newlines) so we can find\r\n            // types or variables\r\n            {\r\n              begin: /(?=[^\\n])\\s/,\r\n              relevance: 0\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  );\r\n  const COMMENT = {\r\n    className: \"comment\",\r\n    variants: [\r\n      JSDOC_COMMENT,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      hljs.C_LINE_COMMENT_MODE\r\n    ]\r\n  };\r\n  const SUBST_INTERNALS = [\r\n    hljs.APOS_STRING_MODE,\r\n    hljs.QUOTE_STRING_MODE,\r\n    HTML_TEMPLATE,\r\n    CSS_TEMPLATE,\r\n    GRAPHQL_TEMPLATE,\r\n    TEMPLATE_STRING,\r\n    // Skip numbers when they are part of a variable name\r\n    { match: /\\$\\d+/ },\r\n    NUMBER,\r\n    // This is intentional:\r\n    // See https://github.com/highlightjs/highlight.js/issues/3288\r\n    // hljs.REGEXP_MODE\r\n  ];\r\n  SUBST.contains = SUBST_INTERNALS\r\n    .concat({\r\n      // we need to pair up {} inside our subst to prevent\r\n      // it from ending too early by matching another }\r\n      begin: /\\{/,\r\n      end: /\\}/,\r\n      keywords: KEYWORDS,\r\n      contains: [\r\n        \"self\"\r\n      ].concat(SUBST_INTERNALS)\r\n    });\r\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\r\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\r\n    // eat recursive parens in sub expressions\r\n    {\r\n      begin: /(\\s*)\\(/,\r\n      end: /\\)/,\r\n      keywords: KEYWORDS,\r\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\r\n    }\r\n  ]);\r\n  const PARAMS = {\r\n    className: 'params',\r\n    // convert this to negative lookbehind in v12\r\n    begin: /(\\s*)\\(/, // to match the parms with \r\n    end: /\\)/,\r\n    excludeBegin: true,\r\n    excludeEnd: true,\r\n    keywords: KEYWORDS,\r\n    contains: PARAMS_CONTAINS\r\n  };\r\n\r\n  // ES6 classes\r\n  const CLASS_OR_EXTENDS = {\r\n    variants: [\r\n      // class Car extends vehicle\r\n      {\r\n        match: [\r\n          /class/,\r\n          /\\s+/,\r\n          IDENT_RE,\r\n          /\\s+/,\r\n          /extends/,\r\n          /\\s+/,\r\n          regex.concat(IDENT_RE, \"(\", regex.concat(/\\./, IDENT_RE), \")*\")\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"title.class\",\r\n          5: \"keyword\",\r\n          7: \"title.class.inherited\"\r\n        }\r\n      },\r\n      // class Car\r\n      {\r\n        match: [\r\n          /class/,\r\n          /\\s+/,\r\n          IDENT_RE\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"title.class\"\r\n        }\r\n      },\r\n\r\n    ]\r\n  };\r\n\r\n  const CLASS_REFERENCE = {\r\n    relevance: 0,\r\n    match:\r\n    regex.either(\r\n      // Hard coded exceptions\r\n      /\\bJSON/,\r\n      // Float32Array, OutT\r\n      /\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*/,\r\n      // CSSFactory, CSSFactoryT\r\n      /\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*/,\r\n      // FPs, FPsT\r\n      /\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*/,\r\n      // P\r\n      // single letters are not highlighted\r\n      // BLAH\r\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\r\n    ),\r\n    className: \"title.class\",\r\n    keywords: {\r\n      _: [\r\n        // se we still get relevance credit for JS library classes\r\n        ...ECMAScript.TYPES,\r\n        ...ECMAScript.ERROR_TYPES\r\n      ]\r\n    }\r\n  };\r\n\r\n  const USE_STRICT = {\r\n    label: \"use_strict\",\r\n    className: 'meta',\r\n    relevance: 10,\r\n    begin: /^\\s*['\"]use (strict|asm)['\"]/\r\n  };\r\n\r\n  const FUNCTION_DEFINITION = {\r\n    variants: [\r\n      {\r\n        match: [\r\n          /function/,\r\n          /\\s+/,\r\n          IDENT_RE,\r\n          /(?=\\s*\\()/\r\n        ]\r\n      },\r\n      // anonymous function\r\n      {\r\n        match: [\r\n          /function/,\r\n          /\\s*(?=\\()/\r\n        ]\r\n      }\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    label: \"func.def\",\r\n    contains: [ PARAMS ],\r\n    illegal: /%/\r\n  };\r\n\r\n  const UPPER_CASE_CONSTANT = {\r\n    relevance: 0,\r\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\r\n    className: \"variable.constant\"\r\n  };\r\n\r\n  function noneOf(list) {\r\n    return regex.concat(\"(?!\", list.join(\"|\"), \")\");\r\n  }\r\n\r\n  const FUNCTION_CALL = {\r\n    match: regex.concat(\r\n      /\\b/,\r\n      noneOf([\r\n        ...ECMAScript.BUILT_IN_GLOBALS,\r\n        \"super\",\r\n        \"import\"\r\n      ].map(x => `${x}\\\\s*\\\\(`)),\r\n      IDENT_RE, regex.lookahead(/\\s*\\(/)),\r\n    className: \"title.function\",\r\n    relevance: 0\r\n  };\r\n\r\n  const PROPERTY_ACCESS = {\r\n    begin: regex.concat(/\\./, regex.lookahead(\r\n      regex.concat(IDENT_RE, /(?![0-9A-Za-z$_(])/)\r\n    )),\r\n    end: IDENT_RE,\r\n    excludeBegin: true,\r\n    keywords: \"prototype\",\r\n    className: \"property\",\r\n    relevance: 0\r\n  };\r\n\r\n  const GETTER_OR_SETTER = {\r\n    match: [\r\n      /get|set/,\r\n      /\\s+/,\r\n      IDENT_RE,\r\n      /(?=\\()/\r\n    ],\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    contains: [\r\n      { // eat to avoid empty params\r\n        begin: /\\(\\)/\r\n      },\r\n      PARAMS\r\n    ]\r\n  };\r\n\r\n  const FUNC_LEAD_IN_RE = '(\\\\(' +\r\n    '[^()]*(\\\\(' +\r\n    '[^()]*(\\\\(' +\r\n    '[^()]*' +\r\n    '\\\\)[^()]*)*' +\r\n    '\\\\)[^()]*)*' +\r\n    '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>';\r\n\r\n  const FUNCTION_VARIABLE = {\r\n    match: [\r\n      /const|var|let/, /\\s+/,\r\n      IDENT_RE, /\\s*/,\r\n      /=\\s*/,\r\n      /(async\\s*)?/, // async is optional\r\n      regex.lookahead(FUNC_LEAD_IN_RE)\r\n    ],\r\n    keywords: \"async\",\r\n    className: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    contains: [\r\n      PARAMS\r\n    ]\r\n  };\r\n\r\n  return {\r\n    name: 'JavaScript',\r\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\r\n    keywords: KEYWORDS,\r\n    // this will be extended by TypeScript\r\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\r\n    illegal: /#(?![$_A-z])/,\r\n    contains: [\r\n      hljs.SHEBANG({\r\n        label: \"shebang\",\r\n        binary: \"node\",\r\n        relevance: 5\r\n      }),\r\n      USE_STRICT,\r\n      hljs.APOS_STRING_MODE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      HTML_TEMPLATE,\r\n      CSS_TEMPLATE,\r\n      GRAPHQL_TEMPLATE,\r\n      TEMPLATE_STRING,\r\n      COMMENT,\r\n      // Skip numbers when they are part of a variable name\r\n      { match: /\\$\\d+/ },\r\n      NUMBER,\r\n      CLASS_REFERENCE,\r\n      {\r\n        className: 'attr',\r\n        begin: IDENT_RE + regex.lookahead(':'),\r\n        relevance: 0\r\n      },\r\n      FUNCTION_VARIABLE,\r\n      { // \"value\" container\r\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\r\n        keywords: 'return throw case',\r\n        relevance: 0,\r\n        contains: [\r\n          COMMENT,\r\n          hljs.REGEXP_MODE,\r\n          {\r\n            className: 'function',\r\n            // we have to count the parens to make sure we actually have the\r\n            // correct bounding ( ) before the =>.  There could be any number of\r\n            // sub-expressions inside also surrounded by parens.\r\n            begin: FUNC_LEAD_IN_RE,\r\n            returnBegin: true,\r\n            end: '\\\\s*=>',\r\n            contains: [\r\n              {\r\n                className: 'params',\r\n                variants: [\r\n                  {\r\n                    begin: hljs.UNDERSCORE_IDENT_RE,\r\n                    relevance: 0\r\n                  },\r\n                  {\r\n                    className: null,\r\n                    begin: /\\(\\s*\\)/,\r\n                    skip: true\r\n                  },\r\n                  {\r\n                    begin: /(\\s*)\\(/,\r\n                    end: /\\)/,\r\n                    excludeBegin: true,\r\n                    excludeEnd: true,\r\n                    keywords: KEYWORDS,\r\n                    contains: PARAMS_CONTAINS\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          { // could be a comma delimited list of params to a function call\r\n            begin: /,/,\r\n            relevance: 0\r\n          },\r\n          {\r\n            match: /\\s+/,\r\n            relevance: 0\r\n          },\r\n          { // JSX\r\n            variants: [\r\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\r\n              { match: XML_SELF_CLOSING },\r\n              {\r\n                begin: XML_TAG.begin,\r\n                // we carefully check the opening tag to see if it truly\r\n                // is a tag and not a false positive\r\n                'on:begin': XML_TAG.isTrulyOpeningTag,\r\n                end: XML_TAG.end\r\n              }\r\n            ],\r\n            subLanguage: 'xml',\r\n            contains: [\r\n              {\r\n                begin: XML_TAG.begin,\r\n                end: XML_TAG.end,\r\n                skip: true,\r\n                contains: ['self']\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n      },\r\n      FUNCTION_DEFINITION,\r\n      {\r\n        // prevent this from getting swallowed up by function\r\n        // since they appear \"function like\"\r\n        beginKeywords: \"while if switch catch for\"\r\n      },\r\n      {\r\n        // we have to count the parens to make sure we actually have the correct\r\n        // bounding ( ).  There could be any number of sub-expressions inside\r\n        // also surrounded by parens.\r\n        begin: '\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\r\n          '\\\\(' + // first parens\r\n          '[^()]*(\\\\(' +\r\n            '[^()]*(\\\\(' +\r\n              '[^()]*' +\r\n            '\\\\)[^()]*)*' +\r\n          '\\\\)[^()]*)*' +\r\n          '\\\\)\\\\s*\\\\{', // end parens\r\n        returnBegin:true,\r\n        label: \"func.def\",\r\n        contains: [\r\n          PARAMS,\r\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE, className: \"title.function\" })\r\n        ]\r\n      },\r\n      // catch ... so it won't trigger the property rule below\r\n      {\r\n        match: /\\.\\.\\./,\r\n        relevance: 0\r\n      },\r\n      PROPERTY_ACCESS,\r\n      // hack: prevents detection of keywords in some circumstances\r\n      // .keyword()\r\n      // $keyword = x\r\n      {\r\n        match: '\\\\$' + IDENT_RE,\r\n        relevance: 0\r\n      },\r\n      {\r\n        match: [ /\\bconstructor(?=\\s*\\()/ ],\r\n        className: { 1: \"title.function\" },\r\n        contains: [ PARAMS ]\r\n      },\r\n      FUNCTION_CALL,\r\n      UPPER_CASE_CONSTANT,\r\n      CLASS_OR_EXTENDS,\r\n      GETTER_OR_SETTER,\r\n      {\r\n        match: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\r\n      }\r\n    ]\r\n  };\r\n}\r\n"],"names":["IDENT_RE","KEYWORDS","LITERALS","TYPES","ERROR_TYPES","BUILT_IN_GLOBALS","BUILT_IN_VARIABLES","BUILT_INS","concat","javascript","hljs","regex","ECMAScript.IDENT_RE","FRAGMENT","XML_TAG","begin","end","isTrulyOpeningTag","match","response","afterMatchIndex","length","index","nextChar","input","ignoreMatch","m","after","tag","slice","indexOf","hasClosingTag","afterMatch","substring","$pattern","keyword","ECMAScript.KEYWORDS","literal","ECMAScript.LITERALS","built_in","ECMAScript.BUILT_INS","ECMAScript.BUILT_IN_VARIABLES","decimalDigits","frac","decimalInteger","NUMBER","className","variants","relevance","SUBST","keywords","contains","HTML_TEMPLATE","starts","returnEnd","BACKSLASH_ESCAPE","subLanguage","CSS_TEMPLATE","GRAPHQL_TEMPLATE","TEMPLATE_STRING","COMMENT","excludeEnd","excludeBegin","endsParent","C_BLOCK_COMMENT_MODE","C_LINE_COMMENT_MODE","SUBST_INTERNALS","APOS_STRING_MODE","QUOTE_STRING_MODE","SUBST_AND_COMMENTS","PARAMS_CONTAINS","PARAMS","CLASS_OR_EXTENDS","scope","CLASS_REFERENCE","either","_","ECMAScript.TYPES","ECMAScript.ERROR_TYPES","FUNCTION_DEFINITION","label","illegal","FUNCTION_CALL","list","ECMAScript.BUILT_IN_GLOBALS","map","x","join","lookahead","PROPERTY_ACCESS","GETTER_OR_SETTER","FUNC_LEAD_IN_RE","UNDERSCORE_IDENT_RE","FUNCTION_VARIABLE","name","aliases","exports","SHEBANG","binary","RE_STARTERS_RE","REGEXP_MODE","returnBegin","skip","beginKeywords","inherit","TITLE_MODE"],"mappings":"AAAY,MAACA,EAAW,2BAClBC,EAAW,CACf,KACA,KACA,KACA,KACA,MACA,QACA,UACA,MACA,MACA,WACA,KACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,WAEIC,EAAW,CACf,OACA,QACA,OACA,YACA,MACA,YAIWC,EAAQ,CAEnB,SACA,WACA,UACA,SAEA,OACA,OACA,SACA,SAEA,SACA,SAEA,QACA,eACA,eACA,YACA,aACA,oBACA,aACA,aACA,cACA,cACA,gBACA,iBAEA,MACA,MACA,UACA,UAEA,cACA,oBACA,UACA,WACA,OAEA,UACA,YACA,oBACA,gBAEA,UACA,QAEA,OAEA,eAGWC,EAAc,CACzB,QACA,YACA,gBACA,aACA,iBACA,cACA,YACA,YAGWC,EAAmB,CAC9B,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,YAGWC,EAAqB,CAChC,YACA,OACA,QACA,UACA,SACA,WACA,eACA,iBACA,SACA,UAGIC,EAAY,GAAGC,OACnBH,EACAF,EACAC,GCjJa,SAAQK,EAACC,GACtB,MAAMC,EAAQD,EAAKC,MAcbX,EAAWY,EACXC,EACG,KADHA,EAEC,MAIDC,EAAU,CACdC,MAAO,sBACPC,IAAK,4BAKLC,kBAAmB,CAACC,EAAOC,KACzB,MAAMC,EAAkBF,EAAM,GAAGG,OAASH,EAAMI,MAC1CC,EAAWL,EAAMM,MAAMJ,GAC7B,GAIe,MAAbG,GAGa,MAAbA,EAGA,YADAJ,EAASM,cAiBX,IAAIC,EAXa,MAAbH,IAtCc,EAACL,GAASS,YAC9B,MAAMC,EAAM,KAAOV,EAAM,GAAGW,MAAM,GAElC,OAAgB,IADJX,EAAMM,MAAMM,QAAQF,EAAKD,EACpB,EAsCRI,CAAcb,EAAO,CAAES,MAAOP,KACjCD,EAASM,eAQb,MAAMO,EAAad,EAAMM,MAAMS,UAAUb,KAIpCM,EAAIM,EAAWd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"}