{"version":3,"file":"php.min.js","sources":["../../src/libs/highlight-es/languages/php.js"],"sourcesContent":["/*\r\nLanguage: PHP\r\nAuthor: Victor Karamzin <Victor.Karamzin@enterra-inc.com>\r\nContributors: Evgeny Stepanischev <imbolk@gmail.com>, Ivan Sagalaev <maniac@softwaremaniacs.org>\r\nWebsite: https://www.php.net\r\nCategory: common\r\n*/\r\n\r\n/**\r\n * @param {HLJSApi} hljs\r\n * @returns {LanguageDetail}\r\n * */\r\nexport default function(hljs) {\r\n  const regex = hljs.regex;\r\n  // negative look-ahead tries to avoid matching patterns that are not\r\n  // Perl at all like $ident$, @ident@, etc.\r\n  const NOT_PERL_ETC = /(?![A-Za-z0-9])(?![$])/;\r\n  const IDENT_RE = regex.concat(\r\n    /[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/,\r\n    NOT_PERL_ETC);\r\n  // Will not detect camelCase classes\r\n  const PASCAL_CASE_CLASS_NAME_RE = regex.concat(\r\n    /(\\\\?[A-Z][a-z0-9_\\x7f-\\xff]+|\\\\?[A-Z]+(?=[A-Z][a-z0-9_\\x7f-\\xff])){1,}/,\r\n    NOT_PERL_ETC);\r\n  const VARIABLE = {\r\n    scope: 'variable',\r\n    match: '\\\\$+' + IDENT_RE,\r\n  };\r\n  const PREPROCESSOR = {\r\n    scope: 'meta',\r\n    variants: [\r\n      { begin: /<\\?php/, relevance: 10 }, // boost for obvious PHP\r\n      { begin: /<\\?=/ },\r\n      // less relevant per PSR-1 which says not to use short-tags\r\n      { begin: /<\\?/, relevance: 0.1 },\r\n      { begin: /\\?>/ } // end php tag\r\n    ]\r\n  };\r\n  const SUBST = {\r\n    scope: 'subst',\r\n    variants: [\r\n      { begin: /\\$\\w+/ },\r\n      {\r\n        begin: /\\{\\$/,\r\n        end: /\\}/\r\n      }\r\n    ]\r\n  };\r\n  const SINGLE_QUOTED = hljs.inherit(hljs.APOS_STRING_MODE, { illegal: null, });\r\n  const DOUBLE_QUOTED = hljs.inherit(hljs.QUOTE_STRING_MODE, {\r\n    illegal: null,\r\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\r\n  });\r\n\r\n  const HEREDOC = {\r\n    begin: /<<<[ \\t]*(?:(\\w+)|\"(\\w+)\")\\n/,\r\n    end: /[ \\t]*(\\w+)\\b/,\r\n    contains: hljs.QUOTE_STRING_MODE.contains.concat(SUBST),\r\n    'on:begin': (m, resp) => { resp.data._beginMatch = m[1] || m[2]; },\r\n    'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); },\r\n  };\r\n\r\n  const NOWDOC = hljs.END_SAME_AS_BEGIN({\r\n    begin: /<<<[ \\t]*'(\\w+)'\\n/,\r\n    end: /[ \\t]*(\\w+)\\b/,\r\n  });\r\n  // list of valid whitespaces because non-breaking space might be part of a IDENT_RE\r\n  const WHITESPACE = '[ \\t\\n]';\r\n  const STRING = {\r\n    scope: 'string',\r\n    variants: [\r\n      DOUBLE_QUOTED,\r\n      SINGLE_QUOTED,\r\n      HEREDOC,\r\n      NOWDOC\r\n    ]\r\n  };\r\n  const NUMBER = {\r\n    scope: 'number',\r\n    variants: [\r\n      { begin: `\\\\b0[bB][01]+(?:_[01]+)*\\\\b` }, // Binary w/ underscore support\r\n      { begin: `\\\\b0[oO][0-7]+(?:_[0-7]+)*\\\\b` }, // Octals w/ underscore support\r\n      { begin: `\\\\b0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*\\\\b` }, // Hex w/ underscore support\r\n      // Decimals w/ underscore support, with optional fragments and scientific exponent (e) suffix.\r\n      { begin: `(?:\\\\b\\\\d+(?:_\\\\d+)*(\\\\.(?:\\\\d+(?:_\\\\d+)*))?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?` }\r\n    ],\r\n    relevance: 0\r\n  };\r\n  const LITERALS = [\r\n    \"false\",\r\n    \"null\",\r\n    \"true\"\r\n  ];\r\n  const KWS = [\r\n    // Magic constants:\r\n    // <https://www.php.net/manual/en/language.constants.predefined.php>\r\n    \"__CLASS__\",\r\n    \"__DIR__\",\r\n    \"__FILE__\",\r\n    \"__FUNCTION__\",\r\n    \"__COMPILER_HALT_OFFSET__\",\r\n    \"__LINE__\",\r\n    \"__METHOD__\",\r\n    \"__NAMESPACE__\",\r\n    \"__TRAIT__\",\r\n    // Function that look like language construct or language construct that look like function:\r\n    // List of keywords that may not require parenthesis\r\n    \"die\",\r\n    \"echo\",\r\n    \"exit\",\r\n    \"include\",\r\n    \"include_once\",\r\n    \"print\",\r\n    \"require\",\r\n    \"require_once\",\r\n    // These are not language construct (function) but operate on the currently-executing function and can access the current symbol table\r\n    // 'compact extract func_get_arg func_get_args func_num_args get_called_class get_parent_class ' +\r\n    // Other keywords:\r\n    // <https://www.php.net/manual/en/reserved.php>\r\n    // <https://www.php.net/manual/en/language.types.type-juggling.php>\r\n    \"array\",\r\n    \"abstract\",\r\n    \"and\",\r\n    \"as\",\r\n    \"binary\",\r\n    \"bool\",\r\n    \"boolean\",\r\n    \"break\",\r\n    \"callable\",\r\n    \"case\",\r\n    \"catch\",\r\n    \"class\",\r\n    \"clone\",\r\n    \"const\",\r\n    \"continue\",\r\n    \"declare\",\r\n    \"default\",\r\n    \"do\",\r\n    \"double\",\r\n    \"else\",\r\n    \"elseif\",\r\n    \"empty\",\r\n    \"enddeclare\",\r\n    \"endfor\",\r\n    \"endforeach\",\r\n    \"endif\",\r\n    \"endswitch\",\r\n    \"endwhile\",\r\n    \"enum\",\r\n    \"eval\",\r\n    \"extends\",\r\n    \"final\",\r\n    \"finally\",\r\n    \"float\",\r\n    \"for\",\r\n    \"foreach\",\r\n    \"from\",\r\n    \"global\",\r\n    \"goto\",\r\n    \"if\",\r\n    \"implements\",\r\n    \"instanceof\",\r\n    \"insteadof\",\r\n    \"int\",\r\n    \"integer\",\r\n    \"interface\",\r\n    \"isset\",\r\n    \"iterable\",\r\n    \"list\",\r\n    \"match|0\",\r\n    \"mixed\",\r\n    \"new\",\r\n    \"never\",\r\n    \"object\",\r\n    \"or\",\r\n    \"private\",\r\n    \"protected\",\r\n    \"public\",\r\n    \"readonly\",\r\n    \"real\",\r\n    \"return\",\r\n    \"string\",\r\n    \"switch\",\r\n    \"throw\",\r\n    \"trait\",\r\n    \"try\",\r\n    \"unset\",\r\n    \"use\",\r\n    \"var\",\r\n    \"void\",\r\n    \"while\",\r\n    \"xor\",\r\n    \"yield\"\r\n  ];\r\n\r\n  const BUILT_INS = [\r\n    // Standard PHP library:\r\n    // <https://www.php.net/manual/en/book.spl.php>\r\n    \"Error|0\",\r\n    \"AppendIterator\",\r\n    \"ArgumentCountError\",\r\n    \"ArithmeticError\",\r\n    \"ArrayIterator\",\r\n    \"ArrayObject\",\r\n    \"AssertionError\",\r\n    \"BadFunctionCallException\",\r\n    \"BadMethodCallException\",\r\n    \"CachingIterator\",\r\n    \"CallbackFilterIterator\",\r\n    \"CompileError\",\r\n    \"Countable\",\r\n    \"DirectoryIterator\",\r\n    \"DivisionByZeroError\",\r\n    \"DomainException\",\r\n    \"EmptyIterator\",\r\n    \"ErrorException\",\r\n    \"Exception\",\r\n    \"FilesystemIterator\",\r\n    \"FilterIterator\",\r\n    \"GlobIterator\",\r\n    \"InfiniteIterator\",\r\n    \"InvalidArgumentException\",\r\n    \"IteratorIterator\",\r\n    \"LengthException\",\r\n    \"LimitIterator\",\r\n    \"LogicException\",\r\n    \"MultipleIterator\",\r\n    \"NoRewindIterator\",\r\n    \"OutOfBoundsException\",\r\n    \"OutOfRangeException\",\r\n    \"OuterIterator\",\r\n    \"OverflowException\",\r\n    \"ParentIterator\",\r\n    \"ParseError\",\r\n    \"RangeException\",\r\n    \"RecursiveArrayIterator\",\r\n    \"RecursiveCachingIterator\",\r\n    \"RecursiveCallbackFilterIterator\",\r\n    \"RecursiveDirectoryIterator\",\r\n    \"RecursiveFilterIterator\",\r\n    \"RecursiveIterator\",\r\n    \"RecursiveIteratorIterator\",\r\n    \"RecursiveRegexIterator\",\r\n    \"RecursiveTreeIterator\",\r\n    \"RegexIterator\",\r\n    \"RuntimeException\",\r\n    \"SeekableIterator\",\r\n    \"SplDoublyLinkedList\",\r\n    \"SplFileInfo\",\r\n    \"SplFileObject\",\r\n    \"SplFixedArray\",\r\n    \"SplHeap\",\r\n    \"SplMaxHeap\",\r\n    \"SplMinHeap\",\r\n    \"SplObjectStorage\",\r\n    \"SplObserver\",\r\n    \"SplPriorityQueue\",\r\n    \"SplQueue\",\r\n    \"SplStack\",\r\n    \"SplSubject\",\r\n    \"SplTempFileObject\",\r\n    \"TypeError\",\r\n    \"UnderflowException\",\r\n    \"UnexpectedValueException\",\r\n    \"UnhandledMatchError\",\r\n    // Reserved interfaces:\r\n    // <https://www.php.net/manual/en/reserved.interfaces.php>\r\n    \"ArrayAccess\",\r\n    \"BackedEnum\",\r\n    \"Closure\",\r\n    \"Fiber\",\r\n    \"Generator\",\r\n    \"Iterator\",\r\n    \"IteratorAggregate\",\r\n    \"Serializable\",\r\n    \"Stringable\",\r\n    \"Throwable\",\r\n    \"Traversable\",\r\n    \"UnitEnum\",\r\n    \"WeakReference\",\r\n    \"WeakMap\",\r\n    // Reserved classes:\r\n    // <https://www.php.net/manual/en/reserved.classes.php>\r\n    \"Directory\",\r\n    \"__PHP_Incomplete_Class\",\r\n    \"parent\",\r\n    \"php_user_filter\",\r\n    \"self\",\r\n    \"static\",\r\n    \"stdClass\"\r\n  ];\r\n\r\n  /** Dual-case keywords\r\n   *\r\n   * [\"then\",\"FILE\"] =>\r\n   *     [\"then\", \"THEN\", \"FILE\", \"file\"]\r\n   *\r\n   * @param {string[]} items */\r\n  const dualCase = (items) => {\r\n    /** @type string[] */\r\n    const result = [];\r\n    items.forEach(item => {\r\n      result.push(item);\r\n      if (item.toLowerCase() === item) {\r\n        result.push(item.toUpperCase());\r\n      } else {\r\n        result.push(item.toLowerCase());\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const KEYWORDS = {\r\n    keyword: KWS,\r\n    literal: dualCase(LITERALS),\r\n    built_in: BUILT_INS,\r\n  };\r\n\r\n  /**\r\n   * @param {string[]} items */\r\n  const normalizeKeywords = (items) => {\r\n    return items.map(item => {\r\n      return item.replace(/\\|\\d+$/, \"\");\r\n    });\r\n  };\r\n\r\n  const CONSTRUCTOR_CALL = { variants: [\r\n    {\r\n      match: [\r\n        /new/,\r\n        regex.concat(WHITESPACE, \"+\"),\r\n        // to prevent built ins from being confused as the class constructor call\r\n        regex.concat(\"(?!\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n      ],\r\n      scope: {\r\n        1: \"keyword\",\r\n        4: \"title.class\",\r\n      },\r\n    }\r\n  ] };\r\n\r\n  const CONSTANT_REFERENCE = regex.concat(IDENT_RE, \"\\\\b(?!\\\\()\");\r\n\r\n  const LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON = { variants: [\r\n    {\r\n      match: [\r\n        regex.concat(\r\n          /::/,\r\n          regex.lookahead(/(?!class\\b)/)\r\n        ),\r\n        CONSTANT_REFERENCE,\r\n      ],\r\n      scope: { 2: \"variable.constant\", },\r\n    },\r\n    {\r\n      match: [\r\n        /::/,\r\n        /class/,\r\n      ],\r\n      scope: { 2: \"variable.language\", },\r\n    },\r\n    {\r\n      match: [\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n        regex.concat(\r\n          /::/,\r\n          regex.lookahead(/(?!class\\b)/)\r\n        ),\r\n        CONSTANT_REFERENCE,\r\n      ],\r\n      scope: {\r\n        1: \"title.class\",\r\n        3: \"variable.constant\",\r\n      },\r\n    },\r\n    {\r\n      match: [\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n        regex.concat(\r\n          \"::\",\r\n          regex.lookahead(/(?!class\\b)/)\r\n        ),\r\n      ],\r\n      scope: { 1: \"title.class\", },\r\n    },\r\n    {\r\n      match: [\r\n        PASCAL_CASE_CLASS_NAME_RE,\r\n        /::/,\r\n        /class/,\r\n      ],\r\n      scope: {\r\n        1: \"title.class\",\r\n        3: \"variable.language\",\r\n      },\r\n    }\r\n  ] };\r\n\r\n  const NAMED_ARGUMENT = {\r\n    scope: 'attr',\r\n    match: regex.concat(IDENT_RE, regex.lookahead(':'), regex.lookahead(/(?!::)/)),\r\n  };\r\n  const PARAMS_MODE = {\r\n    relevance: 0,\r\n    begin: /\\(/,\r\n    end: /\\)/,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      NAMED_ARGUMENT,\r\n      VARIABLE,\r\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      STRING,\r\n      NUMBER,\r\n      CONSTRUCTOR_CALL,\r\n    ],\r\n  };\r\n  const FUNCTION_INVOKE = {\r\n    relevance: 0,\r\n    match: [\r\n      /\\b/,\r\n      // to prevent keywords from being confused as the function title\r\n      regex.concat(\"(?!fn\\\\b|function\\\\b|\", normalizeKeywords(KWS).join(\"\\\\b|\"), \"|\", normalizeKeywords(BUILT_INS).join(\"\\\\b|\"), \"\\\\b)\"),\r\n      IDENT_RE,\r\n      regex.concat(WHITESPACE, \"*\"),\r\n      regex.lookahead(/(?=\\()/)\r\n    ],\r\n    scope: { 3: \"title.function.invoke\", },\r\n    contains: [ PARAMS_MODE ]\r\n  };\r\n  PARAMS_MODE.contains.push(FUNCTION_INVOKE);\r\n\r\n  const ATTRIBUTE_CONTAINS = [\r\n    NAMED_ARGUMENT,\r\n    LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n    hljs.C_BLOCK_COMMENT_MODE,\r\n    STRING,\r\n    NUMBER,\r\n    CONSTRUCTOR_CALL,\r\n  ];\r\n\r\n  const ATTRIBUTES = {\r\n    begin: regex.concat(/#\\[\\s*/, PASCAL_CASE_CLASS_NAME_RE),\r\n    beginScope: \"meta\",\r\n    end: /]/,\r\n    endScope: \"meta\",\r\n    keywords: {\r\n      literal: LITERALS,\r\n      keyword: [\r\n        'new',\r\n        'array',\r\n      ]\r\n    },\r\n    contains: [\r\n      {\r\n        begin: /\\[/,\r\n        end: /]/,\r\n        keywords: {\r\n          literal: LITERALS,\r\n          keyword: [\r\n            'new',\r\n            'array',\r\n          ]\r\n        },\r\n        contains: [\r\n          'self',\r\n          ...ATTRIBUTE_CONTAINS,\r\n        ]\r\n      },\r\n      ...ATTRIBUTE_CONTAINS,\r\n      {\r\n        scope: 'meta',\r\n        match: PASCAL_CASE_CLASS_NAME_RE\r\n      }\r\n    ]\r\n  };\r\n\r\n  return {\r\n    case_insensitive: false,\r\n    keywords: KEYWORDS,\r\n    contains: [\r\n      ATTRIBUTES,\r\n      hljs.HASH_COMMENT_MODE,\r\n      hljs.COMMENT('//', '$'),\r\n      hljs.COMMENT(\r\n        '/\\\\*',\r\n        '\\\\*/',\r\n        { contains: [\r\n          {\r\n            scope: 'doctag',\r\n            match: '@[A-Za-z]+'\r\n          }\r\n        ] }\r\n      ),\r\n      {\r\n        match: /__halt_compiler\\(\\);/,\r\n        keywords: '__halt_compiler',\r\n        starts: {\r\n          scope: \"comment\",\r\n          end: hljs.MATCH_NOTHING_RE,\r\n          contains: [\r\n            {\r\n              match: /\\?>/,\r\n              scope: \"meta\",\r\n              endsParent: true\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      PREPROCESSOR,\r\n      {\r\n        scope: 'variable.language',\r\n        match: /\\$this\\b/\r\n      },\r\n      VARIABLE,\r\n      FUNCTION_INVOKE,\r\n      LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n      {\r\n        match: [\r\n          /const/,\r\n          /\\s/,\r\n          IDENT_RE,\r\n        ],\r\n        scope: {\r\n          1: \"keyword\",\r\n          3: \"variable.constant\",\r\n        },\r\n      },\r\n      CONSTRUCTOR_CALL,\r\n      {\r\n        scope: 'function',\r\n        relevance: 0,\r\n        beginKeywords: 'fn function',\r\n        end: /[;{]/,\r\n        excludeEnd: true,\r\n        illegal: '[$%\\\\[]',\r\n        contains: [\r\n          { beginKeywords: 'use', },\r\n          hljs.UNDERSCORE_TITLE_MODE,\r\n          {\r\n            begin: '=>', // No markup, just a relevance booster\r\n            endsParent: true\r\n          },\r\n          {\r\n            scope: 'params',\r\n            begin: '\\\\(',\r\n            end: '\\\\)',\r\n            excludeBegin: true,\r\n            excludeEnd: true,\r\n            keywords: KEYWORDS,\r\n            contains: [\r\n              'self',\r\n              VARIABLE,\r\n              LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON,\r\n              hljs.C_BLOCK_COMMENT_MODE,\r\n              STRING,\r\n              NUMBER\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        scope: 'class',\r\n        variants: [\r\n          {\r\n            beginKeywords: \"enum\",\r\n            illegal: /[($\"]/\r\n          },\r\n          {\r\n            beginKeywords: \"class interface trait\",\r\n            illegal: /[:($\"]/\r\n          }\r\n        ],\r\n        relevance: 0,\r\n        end: /\\{/,\r\n        excludeEnd: true,\r\n        contains: [\r\n          { beginKeywords: 'extends implements' },\r\n          hljs.UNDERSCORE_TITLE_MODE\r\n        ]\r\n      },\r\n      // both use and namespace still use \"old style\" rules (vs multi-match)\r\n      // because the namespace name can include `\\` and we still want each\r\n      // element to be treated as its own *individual* title\r\n      {\r\n        beginKeywords: 'namespace',\r\n        relevance: 0,\r\n        end: ';',\r\n        illegal: /[.']/,\r\n        contains: [ hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, { scope: \"title.class\" }) ]\r\n      },\r\n      {\r\n        beginKeywords: 'use',\r\n        relevance: 0,\r\n        end: ';',\r\n        contains: [\r\n          // TODO: title.function vs title.class\r\n          {\r\n            match: /\\b(as|const|function)\\b/,\r\n            scope: \"keyword\"\r\n          },\r\n          // TODO: could be title.class or title.function\r\n          hljs.UNDERSCORE_TITLE_MODE\r\n        ]\r\n      },\r\n      STRING,\r\n      NUMBER,\r\n    ]\r\n  };\r\n}\r\n"],"names":["php","hljs","regex","NOT_PERL_ETC","IDENT_RE","concat","PASCAL_CASE_CLASS_NAME_RE","VARIABLE","scope","match","SUBST","variants","begin","end","SINGLE_QUOTED","inherit","APOS_STRING_MODE","illegal","WHITESPACE","STRING","QUOTE_STRING_MODE","contains","m","resp","data","_beginMatch","ignoreMatch","END_SAME_AS_BEGIN","NUMBER","relevance","LITERALS","KWS","BUILT_INS","KEYWORDS","keyword","literal","items","result","forEach","item","push","toLowerCase","toUpperCase","dualCase","built_in","normalizeKeywords","map","replace","CONSTRUCTOR_CALL","join","CONSTANT_REFERENCE","LEFT_AND_RIGHT_SIDE_OF_DOUBLE_COLON","lookahead","NAMED_ARGUMENT","PARAMS_MODE","keywords","C_BLOCK_COMMENT_MODE","FUNCTION_INVOKE","ATTRIBUTE_CONTAINS","case_insensitive","beginScope","endScope","HASH_COMMENT_MODE","COMMENT","starts","MATCH_NOTHING_RE","endsParent","beginKeywords","excludeEnd","UNDERSCORE_TITLE_MODE","excludeBegin"],"mappings":"AAYe,SAAQA,EAACC,GACtB,MAAMC,EAAQD,EAAKC,MAGbC,EAAe,yBACfC,EAAWF,EAAMG,OACrB,2CACAF,GAEIG,EAA4BJ,EAAMG,OACtC,yEACAF,GACII,EAAW,CACfC,MAAO,WACPC,MAAO,OAASL,GAYZM,EAAQ,CACZF,MAAO,QACPG,SAAU,CACR,CAAEC,MAAO,SACT,CACEA,MAAO,OACPC,IAAK,QAILC,EAAgBb,EAAKc,QAAQd,EAAKe,iBAAkB,CAAEC,QAAS,OAmB/DC,EAAa,UACbC,EAAS,CACbX,MAAO,SACPG,SAAU,CArBUV,EAAKc,QAAQd,EAAKmB,kBAAmB,CACzDH,QAAS,KACTI,SAAUpB,EAAKmB,kBAAkBC,SAAShB,OAAOK,KAqB/CI,EAlBY,CACdF,MAAO,+BACPC,IAAK,gBACLQ,SAAUpB,EAAKmB,kBAAkBC,SAAShB,OAAOK,GACjD,WAAY,CAACY,EAAGC,KAAWA,EAAKC,KAAKC,YAAcH,EAAE,IAAMA,EAAE,EAAE,EAC/D,SAAU,CAACA,EAAGC,KAAeA,EAAKC,KAAKC,cAAgBH,EAAE,IAAIC,EAAKG,aAAa,GAGlEzB,EAAK0B,kBAAkB,CACpCf,MAAO,qBACPC,IAAK,oBAaDe,EAAS,CACbpB,MAAO,SACPG,SAAU,CACR,CAAEC,MAAO,+BACT,CAAEA,MAAO,iCACT,CAAEA,MAAO,6CAET,CAAEA,MAAO,+EAEXiB,UAAW,GAEPC,EAAW,CACf,QACA,OACA,QAEIC,EAAM,CAGV,YACA,UACA,WACA,eACA,2BACA,WACA,aACA,gBACA,YAGA,MACA,OACA,OACA,UACA,eACA,QACA,UACA,eAMA,QACA,WACA,MACA,KACA,SACA,OACA,UACA,QACA,WACA,OACA,QACA,QACA,QACA,QACA,WACA,UACA,UACA,KACA,SACA,OACA,SACA,QACA,aACA,SACA,aACA,QACA,YACA,WACA,OACA,OACA,UACA,QACA,UACA,QACA,MACA,UACA,OACA,SACA,OACA,KACA,aACA,aACA,YACA,MACA,UACA,YACA,QACA,WACA,OACA,UACA,QACA,MACA,QACA,SACA,KACA,UACA,YACA,SACA,WACA,OACA,SACA,SACA,SACA,QACA,QACA,MACA,QACA,MACA,MACA,OACA,QACA,MACA,SAGIC,EAAY,CAGhB,UACA,iBACA,qBACA,kBACA,gBACA,cACA,iBACA,2BACA,yBACA,kBACA,yBACA,eACA,YACA,oBACA,sBACA,kBACA,gBACA,iBACA,YACA,qBACA,iBACA,eACA,mBACA,2BACA,mBACA,kBACA,gBACA,iBACA,mBACA,mBACA,uBACA,sBACA,gBACA,oBACA,iBACA,aACA,iBACA,yBACA,2BACA,kCACA,6BACA,0BACA,oBACA,4BACA,yBACA,wBACA,gBACA,mBACA,mBACA,sBACA,cACA,gBACA,gBACA,UACA,aACA,aACA,mBACA,cACA,mBACA,WACA,WACA,aACA,oBACA,YACA,qBACA,2BACA,sBAGA,cACA,aACA,UACA,QACA,YACA,WACA,oBACA,eACA,aACA,YACA,cACA,WACA,gBACA,UAGA,YACA,yBACA,SACA,kBACA,OACA,SACA,YAuBIC,EAAW,CACfC,QAASH,EACTI,QAhBe,CAACC,IAEhB,MAAMC,EAAS,GASf,OARAD,EAAME,SAAQC,IACZF,EAAOG,KAAKD,GACRA,EAAKE,gBAAkBF,EACzBF,EAAOG,KAAKD,EAAKG,eAEjBL,EAAOG,KAAKD,EAAKE,cAClB,IAEIJ,CAAM,EAKJM,CAASb,GAClBc,SAAUZ,GAKNa,EAAqBT,GAClBA,EAAMU,KAAIP,GACRA,EAAKQ,QAAQ,SAAU,MAI5BC,EAAmB,CAAErC,SAAU,CACnC,CACEF,MAAO,CACL,MACAP,EAAMG,OAAOa,EAAY,KAEzBhB,EAAMG,OAAO,MAAOwC,EAAkBb,GAAWiB,KAAK,QAAS,QAC/D3C,GAEFE,MAAO,CACL,EAAG,UACH,EAAG,kBAKH0C,EAAqBhD,EAAMG,OAAOD,EAAU,cAE5C+C,EAAsC,CAAExC,SAAU,CACtD,CACEF,MAAO,CACLP,EAAMG,OACJ,KACAH,EAAMkD,UAAU,gBAElBF,GAEF1C,MAAO,CAAE,EAAG,sBAEd,CACEC,MAAO,CACL,KACA,SAEFD,MAAO,CAAE,EAAG,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"}