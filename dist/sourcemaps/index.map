{"version":3,"file":"index.min.js","sources":["../src/scripts/pageManager.js","../src/scripts/fetchResources.js","../src/scripts/keydownEvent.js","../build.config.js","../src/scripts/importer.js","../src/utils/markdown/utils/el.js","../src/utils/markdown/utils/getInterval.js","../src/utils/markdown/inline.js","../src/utils/markdown/node.js","../src/utils/markdown/utils/getIndent.js","../src/utils/markdown/resolvers/listResolver.js","../src/utils/markdown/resolvers/quoteResolver.js","../src/utils/markdown/resolvers/tableResolver.js","../src/utils/markdown/resolvers/blockResolvers.js","../src/utils/markdown/index.js","../src/utils/markdown/utils/getLines.js","../src/utils/render.js","../src/index.js"],"sourcesContent":["class PageManager {\r\n    #pageList = [1]\r\n\r\n    current() {\r\n        const length = this.#pageList.length\r\n        return this.#pageList[length - 1]\r\n    }\r\n    next() {\r\n        const length = this.#pageList.length\r\n        this.#pageList[length - 1] += 1\r\n    }\r\n    previous() {\r\n        const length = this.#pageList.length\r\n        this.#pageList[length - 1] -= 1\r\n    }\r\n\r\n    back() {\r\n        // called when \"popstate\" emited\r\n        this.#pageList.pop()\r\n        if (!this.#pageList.length) {\r\n            this.#pageList.push(1)\r\n        }\r\n    }\r\n    open() {\r\n        // called when enter directory\r\n        this.#pageList.push(1)\r\n    }\r\n}\r\nexport default new PageManager()\r\n","let controller = null\r\n\r\nexport async function fetchJSON(path) {\r\n    controller && controller.abort()\r\n    controller = new AbortController()\r\n\r\n    return await fetch(path, { signal: controller.signal })\r\n        .then(async res => {\r\n            const json = await res.json()\r\n            controller = null\r\n            return json\r\n        })\r\n        .catch(err => {\r\n            console.log(\"JSON request error: \" + path)\r\n            console.error(err)\r\n            return null\r\n        })\r\n}\r\n\r\nexport async function fetchMD(path) {\r\n    controller && controller.abort()\r\n    controller = new AbortController()\r\n\r\n    return await fetch(path, { signal: controller.signal })\r\n        .then(async res => {\r\n            if (res.status != 200) {\r\n                throw res.status\r\n            }\r\n            const text = await res.text()\r\n            controller = null\r\n            return text\r\n        })\r\n        .catch(err => {\r\n            if (typeof err != \"number\") {\r\n                console.error(err)\r\n                return null\r\n            }\r\n\r\n            switch (err) {\r\n                // render error code in markdown format\r\n                case 404:\r\n                    return \"# 404 Not Found\"\r\n                case 500:\r\n                    return \"# 500 Internal Server Error\"\r\n                case DOMException:\r\n                    console.error(err)\r\n                    break\r\n                default:\r\n                    console.log(\"Markdown request error: \" + path)\r\n                    console.error(err)\r\n                    return \"# Unexpected request error\"\r\n            }\r\n        })\r\n}\r\n","export default function(el) {\r\n    return function(e) {\r\n        if (e.key == \"Enter\" || e.key == \" \") {\r\n            el.click()\r\n        }\r\n    }\r\n}\r\n","export default {\r\n    /**\r\n     * homepage: String\r\n     * the URL that this site deployed, is used to generate the rss.xml file\r\n     * 此站点部署的 URL，用于生成 rss.xml 文件\r\n     */\r\n    homepage: \"https://bhznjns.github.io/markdown-blog/\",\r\n\r\n    /**\r\n     * footer: String\r\n     * the footer for this site, can be deleted if you do not need it\r\n     * 站点的脚注，如果你不需要可以删除\r\n     */\r\n    footer: `Powerd by <a href='https://github.com/BHznJNs/markdown-blog'>MarkdownBlog</a>`,\r\n\r\n    /**\r\n     * language: String\r\n     * \"zh\" => Simplified Chinese 简体中文\r\n     * \"en\" => English            英文\r\n     */\r\n    language: \"zh\",\r\n\r\n    /**\r\n     * enableRSS: Boolean | Object<value: Boolean, ignoreDir: [String]>\r\n     * used to enable / disable the RSS function, if you do not want add blogs in some directory to the `rss.xml` , just add it into the `ignoreDir`\r\n     * 用来启用/禁用 RSS 发布功能，如果你不想将某些文件夹的内容添加到 `rss.xml` 中，将其添加到 `ignoreDir` 中\r\n     */\r\n    enableRSS: {\r\n        value: true,\r\n        ignoreDir: [\r\n            // directories in `static`\r\n            \"学习笔记/\"\r\n        ]\r\n    },\r\n\r\n    /**\r\n     * enableNewest: Boolean | Object<value: Boolean, ignoreDir: [String]>\r\n     * used to enable / disable the Newest function, if you do not want add blogs in some directory, just add it into the `ignoreDir`\r\n     * 用来启用/禁用 最新博文 功能，如果你不想将某些文件夹的内容添加到其中，将其添加到 `ignoreDir` 中\r\n     */\r\n    enableNewest: {\r\n        value: true,\r\n        ignoreDir: []\r\n    },\r\n\r\n    /**\r\n     * pageCapacity: Number\r\n     * defined the amount of the items in every page\r\n     * 定义每一页展示的博文数\r\n     */\r\n    pageCapacity: 10,\r\n\r\n    /**\r\n     * RSSCapacity: Number\r\n     * defined the amount of the items in `rss.xml`\r\n     * 定义 `rss.xml` 中包含的博文个数\r\n     */\r\n    RSSCapacity: 16,\r\n\r\n    /**\r\n     * previewPort: Number\r\n     * defined the port id for preview server\r\n     * 为预览服务器定义端口\r\n     */\r\n    previewPort: 3000,\r\n\r\n    /**\r\n     * katexOptions: Object\r\n     * options for katex.js rendering, see here: https://katex.org/docs/options\r\n     * katex.js 用于渲染数学公式的配置项，见此：https://katex.org/docs/options\r\n     */\r\n    katexOptions: null\r\n}\r\n","import config from \"../../build.config.js\"\r\n\r\nconst { katexOptions } = config\r\n\r\nlet hljs  = null\r\nlet katex = null\r\n\r\nexport async function importHighlighter() {\r\n    function importLangDefs() {\r\n        // dynamically import language definitions\r\n        const languageListArr = Array.from(globalThis.__LanguageList__)\r\n        const langDefImporters = languageListArr\r\n            .filter(name => !hljs.getLanguage(name))\r\n            .map(lang => import(`../libs/highlight-es/languages/${lang.toLowerCase()}.js`))\r\n\r\n        Promise.all(langDefImporters)\r\n            .then(langDefs => langDefs.forEach((defModule, index) => {\r\n                const name = languageListArr[index]\r\n                const def  = defModule.default\r\n                hljs.registerLanguage(name, def)\r\n            }))\r\n            .then(() => hljs.highlightAll())\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    if (globalThis.__LanguageList__.size == 0) {\r\n        // no code blocks\r\n        return\r\n    }\r\n    if (hljs) {\r\n        importLangDefs()\r\n        return\r\n    }\r\n\r\n    // import highlight.js itself\r\n    await import(\"../libs/highlight-es/highlight.js\")\r\n        .then(module => hljs = module.default)\r\n        .then(importLangDefs)\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport async function importTexRenderer() {\r\n    function renderFormula() {\r\n        // render all formula element\r\n        document.querySelectorAll(\".math\")\r\n            .forEach(el => {\r\n                const texString = el.textContent\r\n                try {\r\n                    katex.render(texString, el, katexOptions)\r\n                } catch(e) {\r\n                    if (e instanceof katex.ParseError) {\r\n                        // KaTeX can't parse the expression\r\n                        el.innerHTML = (\"Error in LaTeX '\" + texString + \"': \" + e.message)\r\n                            .replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n                    } else {\r\n                        // other error\r\n                        throw e\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    if (!globalThis.__ContainsFormula__) {\r\n        // no formula\r\n        return\r\n    }\r\n    if (katex) {\r\n        renderFormula()\r\n        return\r\n    }\r\n\r\n    const tasks = [import(\"../libs/katex/katex.js\"), fetch(\"dist/katex.min.css\")]\r\n    await Promise.all(tasks)\r\n        .then(([module, cssRes]) => {\r\n            // set katex js module & render\r\n            katex = module.default\r\n            renderFormula()\r\n            return cssRes.text()\r\n        })\r\n        .then(cssText => {\r\n            // set katex css\r\n            const style = document.createElement(\"style\")\r\n            style.textContent = cssText\r\n            document.head.appendChild(style)\r\n        })\r\n        .catch(err => console.error(err))\r\n}","function propSetter(el, props) {\r\n    if (!props) {\r\n        return\r\n    }\r\n    for (const [key, val] of Object.entries(props)) {\r\n        if (val == undefined) {\r\n            continue\r\n        }\r\n        el.setAttribute(key, val)\r\n    }\r\n}\r\n\r\nfunction propToString(props) {\r\n    // input: {prop: \"value\"}\r\n    // output: \"prop='value'\"\r\n    const htmlValueFormater = val => val.toString().replaceAll(\"\\\"\", \"&quot;\") \r\n    const resultPropStr = Object.entries(props)\r\n        .filter(([_, val]) => val != undefined)\r\n        .map(([key, val]) => `${key}=\"${htmlValueFormater(val)}\"`)\r\n        .join(\" \")\r\n    return resultPropStr\r\n}\r\n\r\nfunction contentSetter(el, content) {\r\n    if (content instanceof Array) {\r\n        // array of html element\r\n        for (const childEl of content) {\r\n            el.appendChild(childEl)\r\n        }\r\n    } else if (content instanceof HTMLElement) {\r\n        // single element\r\n        el.appendChild(content)\r\n    } else if (typeof content == \"string\") {\r\n        // common text\r\n        el.textContent = content\r\n    } else {\r\n        throw Error(\"Unexpected element content: \" + content)\r\n    }\r\n}\r\n\r\nexport default function el(tagName, content, props=null) {\r\n    if (\"document\" in globalThis) {\r\n        // in browser\r\n        if (tagName == \"text\") {\r\n            return document.createTextNode(content)\r\n        }\r\n\r\n        const targetEl = document.createElement(tagName)\r\n        propSetter(targetEl, props)\r\n        contentSetter(targetEl, content)\r\n        return targetEl\r\n    } else {\r\n        // in node.js\r\n        if (content instanceof Array) {\r\n            content = content.join(\"\")\r\n        }\r\n        switch (tagName) {\r\n            case \"text\":\r\n                return content\r\n            case \"hr\":\r\n                return \"<hr>\"\r\n            case \"img\":\r\n                return `<img ${props ? propToString(props) : \"\"}>`\r\n        }\r\n        return `<${tagName}${props ? \" \" + propToString(props) : \"\"}>${content}</${tagName}>`\r\n    }\r\n}\r\n","// (\"abc]\", \"]\") -> \"abc\"\r\nexport default function getInterval(text, endSign) {\r\n    if (!text.includes(endSign)) {\r\n        return null\r\n    }\r\n\r\n    let intervalText = \"\"\r\n    let isEscape = false\r\n\r\n    while (text.length) {\r\n        const ch = text.slice(0, 1)\r\n        text = text.substr(1)\r\n\r\n        if (ch == \"\\\\\") {\r\n            isEscape = !isEscape\r\n            continue\r\n        }\r\n        if (ch == endSign && !isEscape) {\r\n            break\r\n        }\r\n        intervalText += ch\r\n        isEscape = false\r\n    }\r\n\r\n    return intervalText\r\n}\r\n","import el from \"./utils/el.js\"\r\nimport getInterval from \"./utils/getInterval.js\"\r\n\r\n// identifier character to HTML tag\r\nconst KeyToken_TagName_map = new Map([\r\n    [\"#\", \"strong\"],\r\n    [\"`\", \"code\"],\r\n    [\"_\", \"u\"],\r\n    [\"/\", \"i\"],\r\n    [\"-\", \"del\"],\r\n    [\":\", \"span.dim\"],\r\n    [\",\", \"sub\"],\r\n    [\"'\", \"sup\"],\r\n    [\"$\", \"span.math\"],\r\n])\r\n\r\nconst PairedParenMap = new Map([\r\n    [\"[\", \"]\"],\r\n    [\"{\", \"}\"],\r\n])\r\n\r\n// --- --- --- --- --- ---\r\n\r\nclass TextToken {\r\n    constructor(content) {\r\n        this.content = content\r\n    }\r\n    toHTML = () => el(\"text\", this.content)\r\n}\r\nclass KeyToken {\r\n    constructor(tagSign, content) {\r\n        const tag = KeyToken_TagName_map.get(tagSign)\r\n        if (tag.includes(\".\")) {\r\n            const [realTagName, className] = tag.split(\".\")\r\n            this.tagName = realTagName\r\n            this.className = className\r\n        } else {\r\n            this.tagName = tag\r\n        }\r\n        this.content = content\r\n\r\n        if (this.className == \"math\") {\r\n            // set this global variable to import\r\n            // the math formula renderer module\r\n            globalThis.__ContainsFormula__ = true\r\n        }\r\n    }\r\n\r\n    toHTML() {\r\n        const elOption = this.className == undefined ? null : {\"class\": this.className}\r\n        const thisEl = el(this.tagName, parser(this.content), elOption)\r\n        return thisEl\r\n    }\r\n}\r\n\r\nclass LinkToken {\r\n    constructor(content, address) {\r\n        this.content = content\r\n        this.address = address\r\n    }\r\n\r\n    toHTML() {\r\n        const displayContent = parser(this.content)\r\n        if (this.address.startsWith(\"http\")) {\r\n            // internet links\r\n            return el(\"a\", displayContent, {\r\n                href: this.address,\r\n                target: \"_blank\"\r\n            })\r\n        }\r\n\r\n        // static resources or links\r\n        const actualAddress = \"static/\" + this.address\r\n        return el(\"a\", displayContent, {\r\n            href: \"#\" + actualAddress\r\n        })\r\n    }\r\n}\r\nclass PhoneticToken {\r\n    constructor(content, notation) {\r\n        this.content  = content\r\n        this.notation = notation\r\n    }\r\n    toHTML() {\r\n        const ignoredLeftParenthesis = el(\"rp\", \"(\")\r\n        const ignoredRightParenthesis = el(\"rp\", \")\")\r\n        const notationEl = el(\"rt\", this.notation)\r\n\r\n        const content = parser(this.content).concat([\r\n            ignoredLeftParenthesis,\r\n            notationEl,\r\n            ignoredRightParenthesis,\r\n        ])\r\n        return el(\"ruby\", content, {\r\n            \"data-notation\": this.notation\r\n        })\r\n    }\r\n}\r\n\r\n// --- --- --- --- --- ---\r\n\r\nexport default function parser(source) {\r\n    function getFirstChar() {\r\n        const ch = source.charAt(0)\r\n        source = source.substring(1)\r\n        return ch\r\n    }\r\n    function getSpecialTokenClass(tokenSign) {\r\n        let targetTokenType\r\n        if (tokenSign == \"[\") {\r\n            targetTokenType = LinkToken\r\n        } else if (tokenSign == \"{\") {\r\n            targetTokenType = PhoneticToken\r\n        } else { /* unreachable */ }\r\n        return targetTokenType\r\n    }\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    const tokens = []\r\n    let textTerm = \"\" // text\r\n    let keyTerm  = \"\" // inline style content\r\n    let keyStart = \"\"\r\n    let isEscape = false\r\n    let isInKey  = false\r\n\r\n    while (source.length) {\r\n        const ch = getFirstChar()\r\n\r\n        // key rules resolve\r\n        if (KeyToken_TagName_map.has(ch)) {\r\n            if (isEscape) {\r\n                if (isInKey) {\r\n                    keyTerm += ch\r\n                } else {\r\n                    textTerm += ch\r\n                }\r\n                continue\r\n            }\r\n\r\n            if (isInKey && ch != keyStart) {\r\n                keyTerm += ch\r\n                continue\r\n            }\r\n\r\n            const nextCh = getFirstChar()\r\n            if (nextCh != ch) {\r\n                textTerm += ch\r\n                source = nextCh + source\r\n                continue\r\n            }\r\n\r\n            if (isInKey) {\r\n                tokens.push(new KeyToken(ch, keyTerm))\r\n                keyTerm  = \"\"\r\n                keyStart = \"\"\r\n            } else {\r\n                tokens.push(new TextToken(textTerm))\r\n                textTerm = \"\"\r\n                keyStart = ch\r\n            }\r\n            isInKey = !isInKey\r\n            continue\r\n        }\r\n\r\n        // special inline rules resolve\r\n        if ([\"[\", \"{\"].includes(ch) && !isInKey && !isEscape) {\r\n            const specialTokenSign = ch\r\n            const pairedTokenSign = PairedParenMap.get(specialTokenSign)\r\n\r\n            tokens.push(new TextToken(textTerm))\r\n            textTerm = \"\"\r\n\r\n            let removedContent = specialTokenSign\r\n            // the actual displayed content for special inline elements\r\n            const displayContent = getInterval(source, pairedTokenSign)\r\n            if (displayContent != null) {\r\n                removedContent += source.slice(0, displayContent.length + 1)\r\n                source = source.substr(displayContent.length + 1)\r\n\r\n                const nextCh = getFirstChar()\r\n                removedContent += nextCh\r\n                if (nextCh == \"(\") {\r\n                    // the hidden displayed content for special inline elements\r\n                    const hiddenContent = getInterval(source, \")\")\r\n                    if (hiddenContent != null) {\r\n                        let targetTokenType = getSpecialTokenClass(specialTokenSign)\r\n                        source = source.substr(hiddenContent.length + 1)\r\n                        tokens.push(new targetTokenType(displayContent, hiddenContent))\r\n                        continue\r\n                    }\r\n                }\r\n            }\r\n            textTerm += removedContent\r\n            continue\r\n        }\r\n\r\n        // --- --- --- --- --- ---\r\n\r\n        if (ch == \"\\\\\") {\r\n            isEscape = !isEscape\r\n            continue\r\n        }\r\n\r\n        let text\r\n        if (isEscape) {\r\n            text = \"\\\\\" + ch\r\n            isEscape = false\r\n        } else {\r\n            text = ch\r\n        }\r\n\r\n        if (isInKey) {\r\n            keyTerm += text\r\n        } else {\r\n            textTerm += text\r\n        }\r\n    }\r\n\r\n    if (keyTerm.length) {\r\n        tokens.push(new KeyToken(keyStart, keyTerm))\r\n    }\r\n    if (textTerm.length) {\r\n        tokens.push(new TextToken(textTerm))\r\n    }\r\n    return tokens\r\n        .filter(token =>\r\n            !(token instanceof TextToken && !token.content.length))\r\n        .map(token => token.toHTML())\r\n}\r\n\r\n// test cases\r\n// console.log(parser(\"##bo//itelic//ld##\"))\r\n// console.log(parser(\"##bo[link text](http://www.com)ld##\"))\r\n// console.log(parser(\"asd[asd\"))\r\n// console.log(parser(\"asd[asd]asd\"))\r\n// console.log(parser(\"asd[asd](asd\"))\r\n// console.log(parser(\"asd[asd](asd)\"))\r\n// console.log(parser(\"asd[##link##](asd)\"))\r\n// console.log(parser(\"##asd[link##](asd)\"))\r\n// console.log(parser(\"##asd[link](asd)##\"))\r\n// console.log(parser(\"::dimmed::\"))\r\n// console.log(parser(\"$$f_c = \\\\frac{1}{abc}$$\"))\r\n","import config from \"../../../build.config.js\"\r\nimport mdResolver from \"./index.js\"\r\nimport inlineResolver from \"./inline.js\"\r\nimport getInterval from \"./utils/getInterval.js\"\r\nimport el from \"./utils/el.js\"\r\n\r\nconst { language } = config\r\n\r\nclass BaseNode {\r\n    tagName = \"\"\r\n    content = \"\"\r\n\r\n    toHTML() {\r\n        const inline = inlineResolver(this.content)\r\n        return el(this.tagName, inline)\r\n    }\r\n}\r\n\r\nexport class Headline extends BaseNode {\r\n    constructor(content) {\r\n        super()\r\n\r\n        // \"### test\" -> \"###\"\r\n        const splited = content.split(\" \")\r\n        const numberSignStr = splited[0]\r\n        let numberSignCount = 0\r\n        for (const ch of numberSignStr) {\r\n            if (ch == '#') {\r\n                numberSignCount += 1\r\n            }\r\n        }\r\n\r\n        if (numberSignCount > 6) {\r\n            numberSignCount = 0\r\n        }\r\n\r\n        this.tagName = \"h\" + numberSignCount\r\n        this.content = splited.slice(1).join(\" \")\r\n    }\r\n\r\n    static pattern = source => source.match(/^(#+ )/)\r\n}\r\n\r\nexport class Para extends BaseNode {\r\n    tagName = \"p\"\r\n\r\n    constructor(content) {\r\n        super()\r\n        this.content = content.trimStart()\r\n    }\r\n}\r\n\r\nexport class Quote extends BaseNode {\r\n    tagName = \"blockquote\"\r\n    children = []\r\n\r\n    constructor(children) {\r\n        super()\r\n        this.children = children\r\n    }\r\n    toHTML() {\r\n        const innerNodes = this.children\r\n            .map(node => node.toHTML())\r\n        return el(this.tagName, innerNodes)\r\n    }\r\n\r\n    static pattern = source =>\r\n        (source == \">\") || source.startsWith(\"> \")\r\n}\r\n\r\nexport class Divider extends BaseNode {\r\n    toHTML = () => el(\"hr\", [])\r\n    static pattern = source =>\r\n        source.match(/(-\\s*-\\s*-)|(\\*\\s*\\*\\s*\\*)/) && !source.match(/[a-zA-Z0-9]/)\r\n}\r\n\r\nexport class List extends BaseNode {\r\n    children = []\r\n\r\n    constructor(content) {\r\n        super()\r\n\r\n        this.isOrdered = Boolean(List.orderedPattern(content))\r\n        this.tagName   = (this.isOrdered) ? \"ol\" : \"ul\"\r\n        this.children  = [List.getContent(content, this.isOrdered)]\r\n    }\r\n\r\n    push = child => this.children.push(child)\r\n\r\n    toHTML() {\r\n        const childrenHTML = []\r\n        for (const child of this.children) {\r\n            if (typeof child == \"string\") {\r\n                const inline = inlineResolver(child)\r\n                childrenHTML.push(el(\"li\", inline))\r\n            } else {\r\n                childrenHTML.push(child.toHTML())\r\n            }\r\n        }\r\n        return el(this.tagName, childrenHTML)\r\n    }\r\n\r\n    static unorderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[+-]+ )/))\r\n    static orderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[0-9]+. )/))\r\n\r\n    static isListPattern = (source) =>\r\n        List.orderedPattern(source) || List.unorderedPattern(source)\r\n\r\n    static getContent(line, isOrdered) {\r\n        if (isOrdered) {\r\n            // \"1. ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[0-9]+. )).+$/g)[0]\r\n        } else {\r\n            // \"- ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[+-]+ )).+$/g)[0]\r\n        }\r\n    }\r\n}\r\n\r\nexport class Table extends BaseNode {\r\n    headerCells = [\"\"]   // [string]\r\n    bodyRows    = [[\"\"]] // [[string]]\r\n\r\n    constructor(headerCells, bodyRows) {\r\n        super()\r\n\r\n        this.headerCells = headerCells\r\n        this.bodyRows    = bodyRows\r\n    }\r\n\r\n    #tableHeaderCell = content => el(\"th\", content)\r\n    #tableBodyCell   = content => el(\"td\", inlineResolver(content))\r\n    #tableHeaderRow  = row => el(\"tr\", row.map(this.#tableHeaderCell))\r\n    #tableBodyRow    = row => el(\"tr\", row.map(this.#tableBodyCell))\r\n\r\n    toHTML() {\r\n        const tableHeader = el(\r\n            \"thead\",\r\n            this.#tableHeaderRow(this.headerCells)\r\n        )\r\n        const tableBody = el(\r\n            \"tbody\",\r\n            this.bodyRows\r\n                .map(this.#tableBodyRow)\r\n        )\r\n        return el(\"div\", el(\"table\", [tableHeader, tableBody]), {\r\n            \"class\": \"table\"\r\n        })\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"| \")\r\n}\r\n\r\n// --- --- --- --- -\r\n// media nodes start\r\n// --- --- --- --- -\r\n\r\nclass MediaNode extends BaseNode {\r\n    source = \"\"\r\n    description = \"\"    \r\n    constructor(mdText) {\r\n        super()\r\n\r\n        mdText = mdText.substr(2)\r\n        this.description = getInterval(mdText, \"]\")\r\n        mdText = mdText.substr(this.description.length + 2)\r\n        this.source = getInterval(mdText, \")\")\r\n    }\r\n\r\n    static containerGenerator(content) {\r\n        return el(\"div\", content, {\r\n            \"class\": \"media-container\"\r\n        })\r\n    }\r\n\r\n    static patternGenerator(identifierSign) {\r\n        return (source) =>\r\n            source.startsWith(identifierSign + \"[\") && source.endsWith(\")\")\r\n    }\r\n\r\n    static replaceContentGenerator(href, description) {\r\n        let downloadEl\r\n        if (language == \"cn\") {\r\n            downloadEl = el(\"a\", \"从这里下载！\", { href })\r\n        } else if (language == \"en\") {\r\n            downloadEl = el(\"a\", \"Download this!\", { href })\r\n        }\r\n        const replaceContent = `${description}<br>${downloadEl}`\r\n        return replaceContent\r\n    }\r\n\r\n    static srcUrlResolver(rawUrl) {\r\n        let actualUrl\r\n        if (rawUrl.startsWith(\"http\")) {\r\n            actualUrl = rawUrl\r\n        } else {\r\n            if (\"location\" in globalThis) {\r\n                // in browser\r\n                const hash = location.hash.slice(1)\r\n                // get the parent directory path\r\n                const currentPath = hash.split(\"/\").slice(0, -1).join(\"/\")\r\n                actualUrl = currentPath + \"/\" + rawUrl\r\n            } else {\r\n                // in nodejs\r\n                const path = globalThis.__ResourcePath__\r\n                actualUrl = path + \"/\" + rawUrl\r\n            }\r\n        }\r\n        return actualUrl\r\n    }\r\n}\r\n\r\nexport class Image extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"!\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const imageEl = el(\"img\", [], {\r\n            src: actualUrl,\r\n            alt: this.description,\r\n            loading: \"lazy\",\r\n            tabindex: 0,\r\n        })\r\n        return MediaNode.containerGenerator(imageEl)\r\n    }\r\n}\r\n\r\nexport class Audio extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\":\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const audioEl = el(\"audio\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: true,\r\n        })\r\n        return MediaNode.containerGenerator(audioEl)\r\n    }\r\n}\r\n\r\nexport class Video extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"?\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const videoEl = el(\"video\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: \"true\",\r\n        })\r\n        return MediaNode.containerGenerator(videoEl)\r\n    }\r\n}\r\n\r\nexport const isIframePattern = (source) =>\r\n    MediaNode.patternGenerator(\"@\")(source)\r\n    || source.startsWith(\"@@@\")\r\n\r\nexport class Iframe extends MediaNode {\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const iframeEl = el(\"iframe\", this.description, {\r\n            src: actualUrl,\r\n            title: this.description,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\n// --- --- --- ---\r\n// media nodes end\r\n// --- --- --- ---\r\n\r\n// --- --- --- --- -\r\n// block nodes start\r\n// --- --- --- --- -\r\n\r\nexport class CodeBlock extends BaseNode {\r\n    constructor(content, lang) {\r\n        super()\r\n\r\n        this.lang = lang\r\n        if (typeof window == \"object\") {\r\n            // in browser\r\n            this.content = content\r\n        } else {\r\n            // in node.js\r\n            this.content = content\r\n                .replaceAll(\"<\", \"&lt;\")\r\n                .replaceAll(\">\", \"&gt;\")\r\n        }\r\n    }\r\n    append(content) {\r\n        this.content += content\r\n    }\r\n    toHTML() {\r\n        const isPlaintext = [\"plaintext\", \"text\", \"\"].includes(this.lang)\r\n        if (typeof window == \"object\" && !isPlaintext) {\r\n            globalThis.__LanguageList__.add(this.lang)\r\n        }\r\n        \r\n        let langName\r\n        let langClass\r\n        if (isPlaintext) {\r\n            langClass = \"nohighlight\"\r\n            langName  = \"PLAINTEXT\"\r\n        } else {\r\n            langClass = `language-${this.lang}`\r\n            langName  = this.lang.toUpperCase()\r\n        }\r\n\r\n        const codeEl = el(\"code\", this.content, {\r\n            \"class\": langClass\r\n        })\r\n        return el(\"pre\", codeEl, {\r\n            \"data-language\": langName\r\n        })\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"```\")\r\n}\r\n\r\nexport class DetailsBlock extends BaseNode {\r\n    summary = \"\"\r\n    content = \"\"\r\n\r\n    constructor(content, summary) {\r\n        super()\r\n        \r\n        this.summary = summary\r\n        this.content = mdResolver(content)\r\n    }\r\n    toHTML() {\r\n        const summaryEl = el(\"summary\", this.summary)\r\n        const detailsEl = el(\"details\", summaryEl)\r\n\r\n        const innerNodes = this.content\r\n            .map(node => node.toHTML())\r\n        const childrenEl = el(\"div\", el(\"div\", innerNodes, {\r\n            \"class\": \"details-children\"\r\n        }), {\r\n            \"class\": \"details-children-container\"\r\n        })\r\n        return el(\"div\", [detailsEl, childrenEl], {\r\n            \"class\": \"details\"\r\n        })\r\n    }\r\n\r\n    static pattern = source =>\r\n        source.startsWith(\">>>\")\r\n}\r\n\r\nexport class FormulaBlock extends BaseNode {\r\n    content = \"\"\r\n    description = \"\"\r\n\r\n    constructor(content, description) {\r\n        super()\r\n\r\n        this.content = content\r\n        this.description = description\r\n    }\r\n    toHTML() {\r\n        globalThis.__ContainsFormula__ = true\r\n        return el(\"div\", this.content, {\r\n            \"class\": \"math\",\r\n            title: this.description,\r\n        })\r\n    }\r\n\r\n    static pattern = source =>\r\n        source.startsWith(\"$$$\")\r\n}\r\n\r\nexport class IframeBlock extends BaseNode {\r\n    // injected html codes, used to auto darkmode and send height message\r\n    static #injectedCodes = id => `\\\r\n<style>\r\n@media (prefers-color-scheme: dark) {\r\n  :root {\r\n    color: white;\r\n    background-color: #121212;\r\n  }\r\n}\r\n</style>\r\n<script>\r\nwindow.addEventListener(\"load\", (e) => {\r\n  const iframeRootEl = e.target.documentElement\r\n  const parent = window.parent\r\n  const height = parseFloat(getComputedStyle(iframeRootEl).height)\r\n  parent.postMessage({\r\n    height,\r\n    id: \"${id}\"\r\n  }, \"*\")\r\n})\r\n</script>`\r\n\r\n    constructor(content, description) {\r\n        super()\r\n\r\n        globalThis.__IframeCounter__ += 1\r\n        this.id = \"iframe_\" + globalThis.__IframeCounter__\r\n        this.description = description\r\n\r\n        if (typeof window == \"object\") {\r\n            // in browser\r\n            this.content = content + IframeBlock.#injectedCodes(this.id)\r\n        } else {\r\n            // in node.js\r\n            this.content = content\r\n        }\r\n    }\r\n\r\n    toHTML() {\r\n        const iframeEl = el(\"iframe\", this.description, {\r\n            id: this.id,\r\n            title: this.description,\r\n            srcdoc: this.content,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\n// --- --- --- ---\r\n// block nodes end\r\n// --- --- --- ---\r\n","export default function(line) {\r\n    let indentCount = 0\r\n    let spaceCount = 0\r\n\r\n    for (const ch of line) {\r\n        if (ch.match(/[^\\s\\t]/)) {\r\n            break\r\n        }\r\n\r\n        if (ch == \"\\t\") {\r\n            indentCount += 1\r\n            continue\r\n        }\r\n        if (ch == \" \") {\r\n            spaceCount += 1\r\n        }\r\n        if (spaceCount == 2) {\r\n            spaceCount = 0\r\n            indentCount += 1\r\n        }\r\n    }\r\n    return indentCount\r\n}\r\n","import { List } from \"../node.js\"\r\nimport getIndent from \"../utils/getIndent.js\"\r\n\r\nexport default function listResolver(currentLine, lines) {\r\n    const currentIndent = getIndent(currentLine)\r\n    const currentNode = new List(currentLine)\r\n\r\n    while (lines.length && List.isListPattern(lines[0])) {\r\n        const nextLine = lines.shift()\r\n        const nextIndent = getIndent(nextLine)\r\n        const isNextOrdered = List.orderedPattern(nextLine)\r\n\r\n        if (nextIndent > currentIndent) {\r\n            currentNode.push(listResolver(nextLine, lines))\r\n        } else if (nextIndent == currentIndent && isNextOrdered == currentNode.isOrdered) {\r\n            currentNode.push(List.getContent(nextLine, isNextOrdered))\r\n        } else {\r\n            lines.unshift(nextLine)\r\n            break\r\n        }\r\n    }\r\n    return currentNode\r\n}","import mdResolver from \"../index.js\"\r\nimport { Quote } from \"../node.js\"\r\n\r\nexport default function(firstLine, lines) {\r\n    let quotedContent = firstLine.slice(2) + \"\\n\"\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (Quote.pattern(l)) {\r\n            quotedContent += l.slice(2) + \"\\n\"\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n    const children = mdResolver(quotedContent)\r\n    const node = new Quote(children)\r\n    return node\r\n}\r\n","import { Table } from \"../node.js\"\r\n\r\n// input: \"| content | content |\"\"\r\n// output: [\"content\",\"content\"]\r\nfunction tableLineConverter(tableLine) {\r\n    const splited = tableLine.split(\"|\")\r\n    const result = splited\r\n        .filter(item => item.length > 0)\r\n        .map(item => item.trim())\r\n    return result\r\n}\r\n\r\nexport default function(firstLine, lines) {\r\n    const headerText = firstLine\r\n    const contentLines = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (Table.pattern(l)) {\r\n            contentLines.push(l)\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n\r\n    const headerCells = tableLineConverter(headerText)\r\n    const contentRows = contentLines.map(tableLineConverter)\r\n    const tableNode = new Table(headerCells, contentRows)\r\n    return tableNode\r\n}\r\n","import { CodeBlock, DetailsBlock, FormulaBlock, Iframe, IframeBlock } from \"../node.js\"\r\n\r\nfunction blockResolverGenerator(endSign, targetClass) {\r\n    return function(firstLine, lines) {\r\n        const description = firstLine.slice(3)\r\n\r\n        let content = \"\"\r\n        while (lines.length) {\r\n            const l = lines.shift()\r\n\r\n            if (l == endSign) {\r\n                break\r\n            }\r\n\r\n            content += l + \"\\n\"\r\n        }\r\n        return new targetClass(content, description)\r\n    }\r\n}\r\n\r\nexport const codeResolver = blockResolverGenerator(\"```\", CodeBlock)\r\nexport const detailsResolver = blockResolverGenerator(\">>>\", DetailsBlock)\r\nexport const formulaResolver = blockResolverGenerator(\"$$$\", FormulaBlock)\r\nexport function iframeResolver(firstLine, lines) {\r\n    const blockResolver = blockResolverGenerator(\"@@@\", IframeBlock)\r\n\r\n    if (!firstLine.startsWith(\"@@@\")) {\r\n        // link to out resource\r\n        return new Iframe(firstLine)\r\n    }\r\n    return blockResolver(firstLine, lines)\r\n}\r\n","import {\r\n    Headline, Quote, Divider,\r\n    List, Para, Table,\r\n    Image, Audio, Video,\r\n    FormulaBlock, CodeBlock,\r\n    isIframePattern,\r\n    DetailsBlock\r\n} from \"./node.js\"\r\nimport {\r\n    listResolver, quoteResolver, tableResolver,\r\n    codeResolver, formulaResolver, iframeResolver, detailsResolver,\r\n} from \"./resolvers/index.js\"\r\nimport getLines from \"./utils/getLines.js\"\r\n\r\nexport default function mdResolver(source) {\r\n    const lines = getLines(source)\r\n    const nodes = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l.length == 0) {\r\n            continue\r\n        }\r\n\r\n        if (Headline.pattern(l)) {\r\n            nodes.push(new Headline(l))\r\n        } else\r\n        if (Divider.pattern(l)) {\r\n            nodes.push(new Divider)\r\n        } else\r\n        if (Quote.pattern(l)) {\r\n            nodes.push(quoteResolver(l, lines))\r\n        } else\r\n        if (List.isListPattern(l)) {\r\n            nodes.push(listResolver(l, lines))\r\n        } else\r\n        if (Table.pattern(l)) {\r\n            nodes.push(tableResolver(l, lines))\r\n        } else\r\n        if (Image.pattern(l)) {\r\n            nodes.push(new Image(l))\r\n        } else\r\n        if (Audio.pattern(l)) {\r\n            nodes.push(new Audio(l))\r\n        } else\r\n        if (Video.pattern(l)) {\r\n            nodes.push(new Video(l))\r\n        } else\r\n        if (DetailsBlock.pattern(l)) {\r\n            nodes.push(detailsResolver(l, lines))\r\n        } else\r\n        if (FormulaBlock.pattern(l)) {\r\n            nodes.push(formulaResolver(l, lines))\r\n        } else\r\n        if (CodeBlock.pattern(l)) {\r\n            nodes.push(codeResolver(l, lines))\r\n        } else\r\n        if (isIframePattern(l)) {\r\n            nodes.push(iframeResolver(l, lines))\r\n        } else {\r\n            nodes.push(new Para(l))\r\n        }\r\n    }\r\n    return nodes\r\n}","export default function(source) {\r\n    if (source.indexOf(\"\\r\") != -1) {\r\n        return source.split(\"\\r\\n\")\r\n    } else {\r\n        return source.split(\"\\n\")\r\n    }\r\n}","import keydownEvent from \"../scripts/keydownEvent.js\"\r\nimport { importHighlighter, importTexRenderer } from \"../scripts/importer.js\"\r\nimport el from \"./markdown/utils/el.js\"\r\nimport mdResolver from \"./markdown/index.js\"\r\nimport pageManager from \"../scripts/pageManager.js\"\r\n\r\nconst articleEl        = document.querySelector(\"article:not(#directory-description)\")\r\nconst mainEl           = document.querySelector(\"main\")\r\nconst dirDescriptionEl = mainEl.querySelector(\"#directory-description\")\r\nconst parentDirBtn     = mainEl.querySelector(\"#previous-dir li\")\r\nconst articleList      = mainEl.querySelector(\"#article-list\")\r\n\r\n// ----------------\r\n// article renderer\r\n// ----------------\r\n\r\narticleEl.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n    if (target.tagName == \"IMG\") {\r\n        window.open(target.src)\r\n    }\r\n})\r\n\r\nfunction mdEntry(mdContent) {\r\n    // language names to import\r\n    globalThis.__LanguageList__ = new Set()\r\n    // to deside whether to import `katex`\r\n    globalThis.__ContainsFormula__ = false\r\n    // used to dynamic generate iframe id\r\n    globalThis.__IframeCounter__ = 0\r\n\r\n    const structure = mdResolver(mdContent)\r\n\r\n    let resultNodes = structure\r\n        .map(node => node.toHTML())\r\n    if (!resultNodes.length) {\r\n        resultNodes = el(\"h1\", \"404 Not Found\")\r\n    }\r\n    return resultNodes\r\n}\r\n\r\nexport function articleRender(articleContent) {\r\n    const resultNodes = mdEntry(articleContent)\r\n    articleEl.innerHTML = \"\"\r\n    resultNodes.forEach(el => articleEl.appendChild(el))\r\n\r\n    mainEl.style.display = \"none\"\r\n    articleEl.style.display = \"block\"\r\n    articleEl.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n    // return to the top\r\n    document.body.scrollTop = 0\r\n    document.documentElement.scrollTop = 0\r\n\r\n    importHighlighter().then(() => globalThis.__LanguageList__ = null)\r\n    importTexRenderer().then(() => globalThis.__ContainsFormula__ = false)\r\n}\r\n\r\n// --------------\r\n// index renderer\r\n// --------------\r\n\r\nparentDirBtn.addEventListener(\"click\", () => {\r\n    const splited = location.hash.split(\"/\")\r\n    pageManager.back()\r\n    location.hash = splited.slice(0, -2).join(\"/\") + \"/\"\r\n})\r\narticleList.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n\r\n    if (target == articleList) {\r\n        // when click on the `articleList` itself\r\n        // ignore this event.\r\n        return\r\n    }\r\n\r\n    if (!target.getAttribute(\"data-target-blog\")) {\r\n        if (target.innerText.endsWith(\"/\")) {\r\n            // open directory\r\n            pageManager.open()\r\n        }\r\n        location.hash += target.innerText\r\n    } else {\r\n        // in `newest` page\r\n        pageManager.open()\r\n        location.hash = target.getAttribute(\"data-target-blog\")\r\n    }\r\n})\r\n\r\nexport function newestItemRenderer(item) {\r\n    const createDate = new Date(item.timestamp)\r\n    const formatedDate = new Intl.DateTimeFormat().format(createDate)\r\n    const dateEl  = el(\"code\", formatedDate)\r\n    const titleEl = el(\"span\", item.title)\r\n    return el(\"li\",\r\n        [dateEl, el(\"text\", \": \"), titleEl],\r\n        {\r\n            tabindex: 0,\r\n            \"data-target-blog\": item.link\r\n        }\r\n    )\r\n}\r\nexport function directoryItemRenderer(item) {\r\n    return el(\"li\", el(\"span\", item), {\r\n        tabindex: 0\r\n    })\r\n}\r\n\r\nexport function indexRender(indexing, itemResolver) {\r\n    // calculate properties\r\n    const {current, total} = indexing\r\n    let isFirstPage = false\r\n    let isLastPage = false\r\n    let isOnlyPage = false\r\n    if (total == 1) {\r\n        isOnlyPage = true\r\n    } else {\r\n        if (current == 1) {\r\n            isFirstPage = true\r\n        }\r\n        if (current == total) {\r\n            isLastPage = true\r\n        }\r\n    }\r\n    mainEl.setAttribute(\"data-is-first-page\", isFirstPage)\r\n    mainEl.setAttribute(\"data-is-last-page\", isLastPage)\r\n    mainEl.setAttribute(\"data-is-only-page\", isOnlyPage)\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    dirDescriptionEl.innerHTML = \"\"\r\n    if (\"directoryDescription\" in indexing) {\r\n        // render directory description\r\n        const resultNodes = mdEntry(indexing.directoryDescription)\r\n        resultNodes.forEach(el => dirDescriptionEl.appendChild(el))\r\n        dirDescriptionEl.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n            el.onkeydown = keydownEvent(el)\r\n        })\r\n\r\n        importHighlighter().then(() => globalThis.__LanguageList__ = null)\r\n        importTexRenderer().then(() => globalThis.__ContainsFormula__ = false)\r\n    }\r\n\r\n    // reset articleList content\r\n    articleList.innerHTML = \"\"\r\n    indexing.content\r\n        .map(itemResolver)\r\n        .forEach(el =>\r\n            articleList.appendChild(el)\r\n        )\r\n\r\n    // set keyboard event\r\n    articleList.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    articleEl.style.display = \"none\"\r\n    mainEl.style.display = \"block\"\r\n\r\n    // return to the top\r\n    document.body.scrollTop = 0\r\n    document.documentElement.scrollTop = 0\r\n}\r\n","import \"./styles/style.css\"\r\nimport \"./libs/katex/katex.css\"\r\n\r\nimport pageManager from \"./scripts/pageManager.js\"\r\nimport { fetchJSON, fetchMD } from \"./scripts/fetchResources.js\"\r\nimport keydownEvent from \"./scripts/keydownEvent.js\"\r\nimport { articleRender, directoryItemRenderer, indexRender, newestItemRenderer } from \"./utils/render.js\"\r\n\r\nconst indexDirPath = \"./.index/\"\r\n\r\n// ---------------------------\r\n// Buttons event setting start\r\n// ---------------------------\r\n\r\nconst lightBtn = document.querySelector(\"#light-btn\")\r\nconst darkBtn = document.querySelector(\"#dark-btn\")\r\nconst previousBtn = document.querySelector(\"button#previous\")\r\nconst nextBtn = document.querySelector(\"button#next\")\r\n\r\nlightBtn.onkeydown = keydownEvent(lightBtn)\r\ndarkBtn.onkeydown = keydownEvent(darkBtn)\r\npreviousBtn.addEventListener(\"click\", () => {\r\n    if (pageManager.current() > 0) {\r\n        pageManager.previous()\r\n        hashEvent()\r\n    }\r\n})\r\nnextBtn.addEventListener(\"click\", () => {\r\n    pageManager.next()\r\n    hashEvent()\r\n})\r\n\r\n// -------------------------\r\n// Buttons event setting end\r\n// -------------------------\r\n\r\n\r\n// ---------------------\r\n// Hash controller start\r\n// ---------------------\r\n\r\nconst mainEl = document.querySelector(\"main\")\r\n\r\nasync function hashEvent() {\r\n    if (!location.hash) {\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    const hash = location.hash.slice(1) // remove '#'\r\n    mainEl.classList.add(\"disabled\")\r\n\r\n    if (hash == \"newest/\") {\r\n        // open newest page\r\n        const indexPath = indexDirPath + \"newest_\" + pageManager.current()\r\n        const newestIndex = await fetchJSON(indexPath)\r\n        if (!newestIndex) return\r\n        indexRender(newestIndex, newestItemRenderer)\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\"/\")) {\r\n        // open directory\r\n        const splited = hash.split(\"/\").slice(0, -1)\r\n        const indexFilePath = indexDirPath + splited.join(\"+\") + \"_\" + pageManager.current()\r\n        const index = await fetchJSON(indexFilePath)\r\n        if (!index) return\r\n        indexRender(index, directoryItemRenderer)\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\".md\")) {\r\n        // open article\r\n        const articleContent = await fetchMD(\"./\" + hash)\r\n        if (!articleContent) return\r\n        articleRender(articleContent)\r\n    } else {\r\n        // the hash \"#static/\" is the homepage\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    // delay this operation\r\n    mainEl.setAttribute(\"data-is-root\", hash == \"static/\")\r\n    mainEl.classList.remove(\"disabled\")\r\n}\r\n\r\nwindow.onload = hashEvent\r\nwindow.addEventListener(\"hashchange\", hashEvent)\r\nwindow.addEventListener(\"popstate\", () => {\r\n    if (location.hash.endsWith(\"/\")) {\r\n        // in a directory\r\n        pageManager.back()\r\n    }\r\n})\r\nwindow.addEventListener(\"message\", (e) => {\r\n    if (e.origin != \"null\") {\r\n        return\r\n    }\r\n    const { id, height } = e.data\r\n    const targetIframeEl = document.getElementById(id)\r\n    targetIframeEl.style.height = height + \"px\"\r\n}, false)\r\n\r\n// -------------------\r\n// Hash controller end\r\n// -------------------"],"names":["pageManager","pageList","current","length","this","next","previous","back","pop","push","open","controller","async","fetchJSON","path","abort","AbortController","fetch","signal","then","json","res","catch","err","console","log","error","keydownEvent","el","e","key","click","config","homepage","footer","language","enableRSS","value","ignoreDir","enableNewest","pageCapacity","RSSCapacity","previewPort","katexOptions","hljs","katex","importHighlighter","importLangDefs","languageListArr","Array","from","globalThis","__LanguageList__","langDefImporters","filter","name","getLanguage","map","lang","__variableDynamicImportRuntime0__","toLowerCase","Promise","all","langDefs","forEach","defModule","index","def","default","registerLanguage","highlightAll","size","import","module","importTexRenderer","renderFormula","document","querySelectorAll","texString","textContent","render","ParseError","innerHTML","message","replace","__ContainsFormula__","tasks","cssRes","text","cssText","style","createElement","head","appendChild","propToString","props","Object","entries","_","val","undefined","toString","replaceAll","htmlValueFormater","join","tagName","content","createTextNode","targetEl","setAttribute","propSetter","childEl","HTMLElement","Error","contentSetter","getInterval","endSign","includes","intervalText","isEscape","ch","slice","substr","KeyToken_TagName_map","Map","PairedParenMap","TextToken","constructor","toHTML","KeyToken","tagSign","tag","get","realTagName","className","split","elOption","class","parser","LinkToken","address","displayContent","startsWith","href","target","PhoneticToken","notation","ignoredLeftParenthesis","ignoredRightParenthesis","notationEl","concat","source","getFirstChar","charAt","substring","getSpecialTokenClass","tokenSign","targetTokenType","tokens","textTerm","keyTerm","keyStart","isInKey","has","nextCh","specialTokenSign","pairedTokenSign","removedContent","hiddenContent","token","BaseNode","inline","inlineResolver","Headline","super","splited","numberSignStr","numberSignCount","static","match","Para","trimStart","Quote","children","innerNodes","node","Divider","List","isOrdered","Boolean","orderedPattern","getContent","child","childrenHTML","unorderedPattern","line","Table","headerCells","bodyRows","tableHeaderCell","tableBodyCell","tableHeaderRow","row","tableBodyRow","tableHeader","tableBody","MediaNode","description","mdText","containerGenerator","patternGenerator","identifierSign","endsWith","replaceContentGenerator","downloadEl","srcUrlResolver","rawUrl","actualUrl","location","hash","__ResourcePath__","Image","imageEl","src","alt","loading","tabindex","Audio","audioEl","controls","Video","videoEl","isIframePattern","Iframe","iframeEl","title","sandbox","CodeBlock","window","append","isPlaintext","langName","langClass","add","toUpperCase","codeEl","DetailsBlock","summary","mdResolver","summaryEl","detailsEl","childrenEl","FormulaBlock","IframeBlock","id","__IframeCounter__","injectedCodes","srcdoc","getIndent","indentCount","spaceCount","listResolver","currentLine","lines","currentIndent","currentNode","isListPattern","nextLine","shift","nextIndent","isNextOrdered","unshift","quoteResolver","firstLine","quotedContent","l","pattern","tableLineConverter","tableLine","item","trim","tableResolver","headerText","contentLines","contentRows","blockResolverGenerator","targetClass","codeResolver","detailsResolver","formulaResolver","iframeResolver","blockResolver","indexOf","getLines","nodes","articleEl","querySelector","mainEl","dirDescriptionEl","parentDirBtn","articleList","mdEntry","mdContent","Set","resultNodes","newestItemRenderer","createDate","Date","timestamp","dateEl","Intl","DateTimeFormat","format","titleEl","link","directoryItemRenderer","indexRender","indexing","itemResolver","total","isFirstPage","isLastPage","isOnlyPage","directoryDescription","onkeydown","display","body","scrollTop","documentElement","addEventListener","getAttribute","innerText","indexDirPath","lightBtn","darkBtn","previousBtn","nextBtn","hashEvent","classList","indexPath","newestIndex","indexFilePath","articleContent","status","DOMException","fetchMD","articleRender","remove","onload","origin","height","data","getElementById"],"mappings":"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"}