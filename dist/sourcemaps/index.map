{"version":3,"file":"index.min.js","sources":["../src/utils/fetchResources.js","../src/utils/keydownEvent.js","../build.config.js","../src/utils/markdown/utils/el.js","../src/utils/markdown/utils/getInterval.js","../src/utils/markdown/inline.js","../src/utils/markdown/node.js","../src/utils/markdown/utils/getIndent.js","../src/utils/markdown/resolvers/listResolver.js","../src/utils/markdown/resolvers/quoteResolver.js","../src/utils/markdown/resolvers/tableResolver.js","../src/utils/markdown/resolvers/blockResolvers.js","../src/utils/markdown/index.js","../src/utils/markdown/utils/getLines.js","../src/utils/importer.js","../src/utils/render.js","../src/index.js"],"sourcesContent":["export async function fetchJSON(path) {\r\n    return await fetch(path)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            console.log(\"JSON request error: \" + path)\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport async function fetchMD(path) {\r\n    return await fetch(path)\r\n        .then(res => {\r\n            if (res.status != 200) {\r\n                throw res.status\r\n            }\r\n            return res.body\r\n        })\r\n        .then(async body => {\r\n            const reader = body.getReader()\r\n            const decoder = new TextDecoder('utf-8');\r\n            let totalData = \"\";\r\n            const processor = (result) => {\r\n                if (result.done) {\r\n                    return totalData\r\n                }\r\n                totalData += decoder.decode(result.value, { stream: true })\r\n                return reader.read().then(processor);\r\n            }\r\n            const result = await reader.read();\r\n            return processor(result);\r\n        })\r\n        .catch(err => {\r\n            switch (err) {\r\n                // render error code in markdown format\r\n                case 404:\r\n                    return \"# 404 Not Found\"\r\n                case 500:\r\n                    return \"# 500 Internal Server Error\"\r\n                default:\r\n                    console.log(\"Markdown request error: \" + path)\r\n                    console.error(err)\r\n            }\r\n        })\r\n}","export default function(el) {\r\n    return function(e) {\r\n        if (e.key == \"Enter\" || e.key == \" \") {\r\n            el.click()\r\n        }\r\n    }\r\n}\r\n","export default {\r\n    /**\r\n     * homepage: String\r\n     * the URL that this site deployed, is used to generate the rss.xml file\r\n     * 此站点部署的 URL，用于生成 rss.xml 文件\r\n     */\r\n    homepage: \"https://bhznjns.github.io/markdown-blog/\",\r\n\r\n    /**\r\n     * footer: String\r\n     * the footer for this site, can be deleted if you do not need it\r\n     * 站点的脚注，如果你不需要可以删除\r\n     */\r\n    footer: `Powerd by <a href='https://github.com/BHznJNs/markdown-blog'>MarkdownBlog</a>`,\r\n\r\n    /**\r\n     * language: String\r\n     * \"zh\" => Simplified Chinese 简体中文\r\n     * \"en\" => English            英文\r\n     */\r\n    language: \"zh\",\r\n\r\n    /**\r\n     * enableRSS: Boolean | Object<value: Boolean, ignoreDir: [String]>\r\n     * used to enable / disable the RSS function, if you do not want add blogs in some directory to the `rss.xml` , just add it into the `ignoreDir`\r\n     * 用来启用/禁用 RSS 发布功能，如果你不想将某些文件夹的内容添加到 `rss.xml` 中，将其添加到 `ignoreDir` 中\r\n     */\r\n    enableRSS: {\r\n        value: true,\r\n        ignoreDir: [\r\n            // directories in `static`\r\n            \"学习笔记/\"\r\n        ]\r\n    },\r\n\r\n    /**\r\n     * enableNewest: Boolean | Object<value: Boolean, ignoreDir: [String]>\r\n     * used to enable / disable the Newest function, if you do not want add blogs in some directory, just add it into the `ignoreDir`\r\n     * 用来启用/禁用 最新博文 功能，如果你不想将某些文件夹的内容添加到其中，将其添加到 `ignoreDir` 中\r\n     */\r\n    enableNewest: {\r\n        value: true,\r\n        ignoreDir: []\r\n    },\r\n\r\n    /**\r\n     * pageCapacity: Number\r\n     * defined the amount of the items in every page\r\n     * 定义每一页展示的博文数\r\n     */\r\n    pageCapacity: 10,\r\n\r\n    /**\r\n     * RSSCapacity: Number\r\n     * defined the amount of the items in `rss.xml`\r\n     * 定义 `rss.xml` 中包含的博文个数\r\n     */\r\n    RSSCapacity: 16,\r\n\r\n    /**\r\n     * previewPort: Number\r\n     * defined the port id for preview server\r\n     * 为预览服务器定义端口\r\n     */\r\n    previewPort: 3000,\r\n\r\n    /**\r\n     * katexOptions: Object\r\n     * options for katex.js rendering, see here: https://katex.org/docs/options\r\n     * katex.js 用于渲染数学公式的配置项，见此：https://katex.org/docs/options\r\n     */\r\n    katexOptions: null\r\n}\r\n","function propSetter(el, props) {\r\n    if (!props) {\r\n        return\r\n    }\r\n    for (const [key, val] of Object.entries(props)) {\r\n        if (val == undefined) {\r\n            continue\r\n        }\r\n        el.setAttribute(key, val)\r\n    }\r\n}\r\n\r\nfunction propToString(props) {\r\n    // input: {prop: \"value\"}\r\n    // output: \"prop='value'\"\r\n    const htmlValueFormater = val => val.toString().replaceAll(\"\\\"\", \"&quot;\") \r\n    const resultPropStr = Object.entries(props)\r\n        .filter(([_, val]) => val != undefined)\r\n        .map(([key, val]) => `${key}=\"${htmlValueFormater(val)}\"`)\r\n        .join(\" \")\r\n    return resultPropStr\r\n}\r\n\r\nfunction contentSetter(el, content) {\r\n    if (content instanceof Array) {\r\n        // array of html element\r\n        for (const childEl of content) {\r\n            el.appendChild(childEl)\r\n        }\r\n    } else if (content instanceof HTMLElement) {\r\n        // single element\r\n        el.appendChild(content)\r\n    } else if (typeof content == \"string\") {\r\n        // common text\r\n        el.textContent = content\r\n    } else {\r\n        throw Error(\"Unexpected element content: \" + content)\r\n    }\r\n}\r\n\r\nexport default function el(tagName, content, props=null) {\r\n    if (\"document\" in globalThis) {\r\n        // in browser\r\n        if (tagName == \"text\") {\r\n            return document.createTextNode(content)\r\n        }\r\n\r\n        const targetEl = document.createElement(tagName)\r\n        propSetter(targetEl, props)\r\n        contentSetter(targetEl, content)\r\n        return targetEl\r\n    } else {\r\n        // in node.js\r\n        if (content instanceof Array) {\r\n            content = content.join(\"\")\r\n        }\r\n        switch (tagName) {\r\n            case \"text\":\r\n                return content\r\n            case \"hr\":\r\n                return \"<hr>\"\r\n            case \"img\":\r\n                return `<img ${props ? propToString(props) : \"\"}>`\r\n        }\r\n        return `<${tagName}${props ? \" \" + propToString(props) : \"\"}>${content}</${tagName}>`\r\n    }\r\n}\r\n","// (\"abc]\", \"]\") -> \"abc\"\r\nexport default function getInterval(text, endSign) {\r\n    if (!text.includes(endSign)) {\r\n        return null\r\n    }\r\n\r\n    let intervalText = \"\"\r\n    let isEscape = false\r\n\r\n    while (text.length) {\r\n        const ch = text.slice(0, 1)\r\n        text = text.substr(1)\r\n\r\n        if (ch == \"\\\\\") {\r\n            isEscape = !isEscape\r\n            continue\r\n        }\r\n        if (ch == endSign && !isEscape) {\r\n            break\r\n        }\r\n        intervalText += ch\r\n        isEscape = false\r\n    }\r\n\r\n    return intervalText\r\n}\r\n","import el from \"./utils/el.js\"\r\nimport getInterval from \"./utils/getInterval.js\"\r\n\r\n// identifier character to HTML tag\r\nconst KeyToken_TagName_map = new Map([\r\n    [\"#\", \"strong\"],\r\n    [\"`\", \"code\"],\r\n    [\"_\", \"u\"],\r\n    [\"/\", \"i\"],\r\n    [\"-\", \"del\"],\r\n    [\":\", \"span.dim\"],\r\n    [\",\", \"sub\"],\r\n    [\"'\", \"sup\"],\r\n    [\"$\", \"span.math\"],\r\n])\r\n\r\nconst PairedParenMap = new Map([\r\n    [\"[\", \"]\"],\r\n    [\"{\", \"}\"],\r\n])\r\n\r\n// --- --- --- --- --- ---\r\n\r\nclass TextToken {\r\n    constructor(content) {\r\n        this.content = content\r\n    }\r\n    toHTML = () => el(\"text\", this.content)\r\n}\r\nclass KeyToken {\r\n    constructor(tagSign, content) {\r\n        const tag = KeyToken_TagName_map.get(tagSign)\r\n        if (tag.includes(\".\")) {\r\n            const [realTagName, className] = tag.split(\".\")\r\n            this.tagName = realTagName\r\n            this.className = className\r\n        } else {\r\n            this.tagName = tag\r\n        }\r\n        this.content = content\r\n\r\n        if (this.className == \"math\") {\r\n            // set this global variable to import\r\n            // the math formula renderer module\r\n            globalThis.__ContainsFormula__ = true\r\n        }\r\n    }\r\n\r\n    toHTML() {\r\n        const elOption = this.className == undefined ? null : {\"class\": this.className}\r\n        const thisEl = el(this.tagName, parser(this.content), elOption)\r\n        return thisEl\r\n    }\r\n}\r\n\r\nclass LinkToken {\r\n    constructor(content, address) {\r\n        this.content = content\r\n        this.address = address\r\n    }\r\n\r\n    toHTML() {\r\n        const displayContent = parser(this.content)\r\n        if (this.address.startsWith(\"http\")) {\r\n            // internet links\r\n            return el(\"a\", displayContent, {\r\n                href: this.address,\r\n                target: \"_blank\"\r\n            })\r\n        }\r\n\r\n        // static resources or links\r\n        const actualAddress = \"static/\" + this.address\r\n        return el(\"a\", displayContent, {\r\n            href: \"#\" + actualAddress\r\n        })\r\n    }\r\n}\r\nclass PhoneticToken {\r\n    constructor(content, notation) {\r\n        this.content  = content\r\n        this.notation = notation\r\n    }\r\n    toHTML() {\r\n        const ignoredLeftParenthesis = el(\"rp\", \"(\")\r\n        const ignoredRightParenthesis = el(\"rp\", \")\")\r\n        const notationEl = el(\"rt\", this.notation)\r\n\r\n        const content = parser(this.content).concat([\r\n            ignoredLeftParenthesis,\r\n            notationEl,\r\n            ignoredRightParenthesis,\r\n        ])\r\n        return el(\"ruby\", content, {\r\n            \"data-notation\": this.notation\r\n        })\r\n    }\r\n}\r\n\r\n// --- --- --- --- --- ---\r\n\r\nexport default function parser(source) {\r\n    function getFirstChar() {\r\n        const ch = source.charAt(0)\r\n        source = source.substring(1)\r\n        return ch\r\n    }\r\n    function getSpecialTokenClass(tokenSign) {\r\n        let targetTokenType\r\n        if (tokenSign == \"[\") {\r\n            targetTokenType = LinkToken\r\n        } else if (tokenSign == \"{\") {\r\n            targetTokenType = PhoneticToken\r\n        } else { /* unreachable */ }\r\n        return targetTokenType\r\n    }\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    const tokens = []\r\n    let textTerm = \"\" // text\r\n    let keyTerm  = \"\" // inline style content\r\n    let keyStart = \"\"\r\n    let isEscape = false\r\n    let isInKey  = false\r\n\r\n    while (source.length) {\r\n        const ch = getFirstChar()\r\n\r\n        // key rules resolve\r\n        if (KeyToken_TagName_map.has(ch)) {\r\n            if (isEscape) {\r\n                if (isInKey) {\r\n                    keyTerm += ch\r\n                } else {\r\n                    textTerm += ch\r\n                }\r\n                continue\r\n            }\r\n\r\n            if (isInKey && ch != keyStart) {\r\n                keyTerm += ch\r\n                continue\r\n            }\r\n\r\n            const nextCh = getFirstChar()\r\n            if (nextCh != ch) {\r\n                textTerm += ch\r\n                source = nextCh + source\r\n                continue\r\n            }\r\n\r\n            if (isInKey) {\r\n                tokens.push(new KeyToken(ch, keyTerm))\r\n                keyTerm  = \"\"\r\n                keyStart = \"\"\r\n            } else {\r\n                tokens.push(new TextToken(textTerm))\r\n                textTerm = \"\"\r\n                keyStart = ch\r\n            }\r\n            isInKey = !isInKey\r\n            continue\r\n        }\r\n\r\n        // special inline rules resolve\r\n        if ([\"[\", \"{\"].includes(ch) && !isInKey && !isEscape) {\r\n            const specialTokenSign = ch\r\n            const pairedTokenSign = PairedParenMap.get(specialTokenSign)\r\n\r\n            tokens.push(new TextToken(textTerm))\r\n            textTerm = \"\"\r\n\r\n            let removedContent = specialTokenSign\r\n            // the actual displayed content for special inline elements\r\n            const displayContent = getInterval(source, pairedTokenSign)\r\n            if (displayContent != null) {\r\n                removedContent += source.slice(0, displayContent.length + 1)\r\n                source = source.substr(displayContent.length + 1)\r\n\r\n                const nextCh = getFirstChar()\r\n                removedContent += nextCh\r\n                if (nextCh == \"(\") {\r\n                    // the hidden displayed content for special inline elements\r\n                    const hiddenContent = getInterval(source, \")\")\r\n                    if (hiddenContent != null) {\r\n                        let targetTokenType = getSpecialTokenClass(specialTokenSign)\r\n                        source = source.substr(hiddenContent.length + 1)\r\n                        tokens.push(new targetTokenType(displayContent, hiddenContent))\r\n                        continue\r\n                    }\r\n                }\r\n            }\r\n            textTerm += removedContent\r\n            continue\r\n        }\r\n\r\n        // --- --- --- --- --- ---\r\n\r\n        if (ch == \"\\\\\") {\r\n            isEscape = !isEscape\r\n            continue\r\n        }\r\n\r\n        let text\r\n        if (isEscape) {\r\n            text = \"\\\\\" + ch\r\n            isEscape = false\r\n        } else {\r\n            text = ch\r\n        }\r\n\r\n        if (isInKey) {\r\n            keyTerm += text\r\n        } else {\r\n            textTerm += text\r\n        }\r\n    }\r\n\r\n    if (keyTerm.length) {\r\n        tokens.push(new KeyToken(keyStart, keyTerm))\r\n    }\r\n    if (textTerm.length) {\r\n        tokens.push(new TextToken(textTerm))\r\n    }\r\n    return tokens\r\n        .filter(token =>\r\n            !(token instanceof TextToken && !token.content.length))\r\n        .map(token => token.toHTML())\r\n}\r\n\r\n// test cases\r\n// console.log(parser(\"##bo//itelic//ld##\"))\r\n// console.log(parser(\"##bo[link text](http://www.com)ld##\"))\r\n// console.log(parser(\"asd[asd\"))\r\n// console.log(parser(\"asd[asd]asd\"))\r\n// console.log(parser(\"asd[asd](asd\"))\r\n// console.log(parser(\"asd[asd](asd)\"))\r\n// console.log(parser(\"asd[##link##](asd)\"))\r\n// console.log(parser(\"##asd[link##](asd)\"))\r\n// console.log(parser(\"##asd[link](asd)##\"))\r\n// console.log(parser(\"::dimmed::\"))\r\n// console.log(parser(\"$$f_c = \\\\frac{1}{abc}$$\"))\r\n","import config from \"../../../build.config.js\"\r\nimport mdResolver from \"./index.js\"\r\nimport inlineResolver from \"./inline.js\"\r\nimport getInterval from \"./utils/getInterval.js\"\r\nimport el from \"./utils/el.js\"\r\n\r\nconst { language } = config\r\n\r\nclass BaseNode {\r\n    tagName = \"\"\r\n    content = \"\"\r\n\r\n    toHTML() {\r\n        const inline = inlineResolver(this.content)\r\n        return el(this.tagName, inline)\r\n    }\r\n}\r\n\r\nexport class Headline extends BaseNode {\r\n    constructor(content) {\r\n        super()\r\n\r\n        // \"### test\" -> \"###\"\r\n        const splited = content.split(\" \")\r\n        const numberSignStr = splited[0]\r\n        let numberSignCount = 0\r\n        for (const ch of numberSignStr) {\r\n            if (ch == '#') {\r\n                numberSignCount += 1\r\n            }\r\n        }\r\n\r\n        if (numberSignCount > 6) {\r\n            numberSignCount = 0\r\n        }\r\n\r\n        this.tagName = \"h\" + numberSignCount\r\n        this.content = splited.slice(1).join(\" \")\r\n    }\r\n\r\n    static pattern = source => source.match(/^(#+ )/)\r\n}\r\n\r\nexport class Para extends BaseNode {\r\n    tagName = \"p\"\r\n\r\n    constructor(content) {\r\n        super()\r\n        this.content = content.trimStart()\r\n    }\r\n}\r\n\r\nexport class Quote extends BaseNode {\r\n    tagName = \"blockquote\"\r\n    children = []\r\n\r\n    constructor(children) {\r\n        super()\r\n        this.children = children\r\n    }\r\n    toHTML() {\r\n        const innerNodes = this.children\r\n            .map(node => node.toHTML())\r\n        return el(this.tagName, innerNodes)\r\n    }\r\n\r\n    static pattern = source =>\r\n        (source == \">\") || source.startsWith(\"> \")\r\n}\r\n\r\nexport class Divider extends BaseNode {\r\n    toHTML = () => el(\"hr\", [])\r\n    static pattern = source =>\r\n        source.match(/(-\\s*-\\s*-)|(\\*\\s*\\*\\s*\\*)/) && !source.match(/[a-zA-Z0-9]/)\r\n}\r\n\r\nexport class List extends BaseNode {\r\n    children = []\r\n\r\n    constructor(content) {\r\n        super()\r\n\r\n        this.isOrdered = Boolean(List.orderedPattern(content))\r\n        this.tagName   = (this.isOrdered) ? \"ol\" : \"ul\"\r\n        this.children  = [List.getContent(content, this.isOrdered)]\r\n    }\r\n\r\n    push = child => this.children.push(child)\r\n\r\n    toHTML() {\r\n        const childrenHTML = []\r\n        for (const child of this.children) {\r\n            if (typeof child == \"string\") {\r\n                const inline = inlineResolver(child)\r\n                childrenHTML.push(el(\"li\", inline))\r\n            } else {\r\n                childrenHTML.push(child.toHTML())\r\n            }\r\n        }\r\n        return el(this.tagName, childrenHTML)\r\n    }\r\n\r\n    static unorderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[+-]+ )/))\r\n    static orderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[0-9]+. )/))\r\n\r\n    static isListPattern = (source) =>\r\n        List.orderedPattern(source) || List.unorderedPattern(source)\r\n\r\n    static getContent(line, isOrdered) {\r\n        if (isOrdered) {\r\n            // \"1. ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[0-9]+. )).+$/g)[0]\r\n        } else {\r\n            // \"- ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[+-]+ )).+$/g)[0]\r\n        }\r\n    }\r\n}\r\n\r\nexport class Table extends BaseNode {\r\n    headerCells = [\"\"]   // [string]\r\n    bodyRows    = [[\"\"]] // [[string]]\r\n\r\n    constructor(headerCells, bodyRows) {\r\n        super()\r\n\r\n        this.headerCells = headerCells\r\n        this.bodyRows    = bodyRows\r\n    }\r\n\r\n    #tableHeaderCell = content => el(\"th\", content)\r\n    #tableBodyCell   = content => el(\"td\", inlineResolver(content))\r\n    #tableHeaderRow  = row => el(\"tr\", row.map(this.#tableHeaderCell))\r\n    #tableBodyRow    = row => el(\"tr\", row.map(this.#tableBodyCell))\r\n\r\n    toHTML() {\r\n        const tableHeader = el(\r\n            \"thead\",\r\n            this.#tableHeaderRow(this.headerCells)\r\n        )\r\n        const tableBody = el(\r\n            \"tbody\",\r\n            this.bodyRows\r\n                .map(this.#tableBodyRow)\r\n        )\r\n        return el(\"table\", [tableHeader, tableBody])\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"| \")\r\n}\r\n\r\n// --- --- --- --- -\r\n// media nodes start\r\n// --- --- --- --- -\r\n\r\nclass MediaNode extends BaseNode {\r\n    source = \"\"\r\n    description = \"\"    \r\n    constructor(mdText) {\r\n        super()\r\n\r\n        mdText = mdText.substr(2)\r\n        this.description = getInterval(mdText, \"]\")\r\n        mdText = mdText.substr(this.description.length + 2)\r\n        this.source = getInterval(mdText, \")\")\r\n    }\r\n\r\n    static containerGenerator(content) {\r\n        return el(\"div\", content, {\r\n            \"class\": \"media-container\"\r\n        })\r\n    }\r\n\r\n    static patternGenerator(identifierSign) {\r\n        return (source) =>\r\n            source.startsWith(identifierSign + \"[\") && source.endsWith(\")\")\r\n    }\r\n\r\n    static replaceContentGenerator(href, description) {\r\n        let downloadEl\r\n        if (language == \"cn\") {\r\n            downloadEl = el(\"a\", \"从这里下载！\", { href })\r\n        } else if (language == \"en\") {\r\n            downloadEl = el(\"a\", \"Download this!\", { href })\r\n        }\r\n        const replaceContent = `${description}<br>${downloadEl}`\r\n        return replaceContent\r\n    }\r\n\r\n    static srcUrlResolver(rawUrl) {\r\n        let actualUrl\r\n        if (rawUrl.startsWith(\"http\")) {\r\n            actualUrl = rawUrl\r\n        } else {\r\n            if (\"location\" in globalThis) {\r\n                // in browser\r\n                const hash = location.hash.slice(1)\r\n                // get the parent directory path\r\n                const currentPath = hash.split(\"/\").slice(0, -1).join(\"/\")\r\n                actualUrl = currentPath + \"/\" + rawUrl\r\n            } else {\r\n                // in nodejs\r\n                const path = globalThis.__ResourcePath__\r\n                actualUrl = path + \"/\" + rawUrl\r\n            }\r\n        }\r\n        return actualUrl\r\n    }\r\n}\r\n\r\nexport class Image extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"!\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const imageEl = el(\"img\", [], {\r\n            src: actualUrl,\r\n            alt: this.description,\r\n            loading: \"lazy\",\r\n            tabindex: 0,\r\n        })\r\n        return MediaNode.containerGenerator(imageEl)\r\n    }\r\n}\r\n\r\nexport class Audio extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\":\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const audioEl = el(\"audio\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: true,\r\n        })\r\n        return MediaNode.containerGenerator(audioEl)\r\n    }\r\n}\r\n\r\nexport class Video extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"?\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const videoEl = el(\"video\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: \"true\",\r\n        })\r\n        return MediaNode.containerGenerator(videoEl)\r\n    }\r\n}\r\n\r\nexport const isIframePattern = (source) =>\r\n    MediaNode.patternGenerator(\"@\")(source)\r\n    || source.startsWith(\"@@@\")\r\n\r\nexport class Iframe extends MediaNode {\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const iframeEl = el(\"iframe\", this.description, {\r\n            src: actualUrl,\r\n            title: this.description,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\n// --- --- --- ---\r\n// media nodes end\r\n// --- --- --- ---\r\n\r\n// --- --- --- --- -\r\n// block nodes start\r\n// --- --- --- --- -\r\n\r\nexport class CodeBlock extends BaseNode {\r\n    constructor(content, lang) {\r\n        super()\r\n\r\n        this.lang = lang\r\n        if (typeof window == \"object\") {\r\n            // in browser\r\n            this.content = content\r\n        } else {\r\n            // in node.js\r\n            this.content = content\r\n                .replaceAll(\"<\", \"&lt;\")\r\n                .replaceAll(\">\", \"&gt;\")\r\n        }\r\n    }\r\n    append(content) {\r\n        this.content += content\r\n    }\r\n    toHTML() {\r\n        if (typeof window == \"object\") {\r\n            globalThis.__LanguageList__.add(this.lang)\r\n        }\r\n        const codeEl = el(\r\n            \"code\",\r\n            this.content,\r\n            {\r\n                \"class\": `language-${this.lang}`,\r\n                \"data-language\": this.lang.toUpperCase(),\r\n            }\r\n        )\r\n        return el(\"pre\", codeEl)\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"```\")\r\n}\r\n\r\nexport class DetailsBlock extends BaseNode {\r\n    summary = \"\"\r\n    content = \"\"\r\n\r\n    constructor(content, summary) {\r\n        super()\r\n        \r\n        this.summary = summary\r\n        this.content = mdResolver(content)\r\n    }\r\n    toHTML() {\r\n        const summaryEl = el(\"summary\", this.summary)\r\n        const detailsEl = el(\"details\", summaryEl)\r\n\r\n        const innerNodes = this.content\r\n            .map(node => node.toHTML())\r\n        const childrenEl = el(\"div\", el(\"div\", innerNodes), {\r\n            \"class\": \"details-children\"\r\n        })\r\n        return el(\"div\", [detailsEl, childrenEl], {\r\n            \"class\": \"details\"\r\n        })\r\n    }\r\n\r\n    static pattern = source =>\r\n        source.startsWith(\">>>\")\r\n}\r\n\r\nexport class FormulaBlock extends BaseNode {\r\n    content = \"\"\r\n    description = \"\"\r\n\r\n    constructor(content, description) {\r\n        super()\r\n\r\n        this.content = content\r\n        this.description = description\r\n    }\r\n    toHTML() {\r\n        globalThis.__ContainsFormula__ = true\r\n        return el(\"div\", this.content, {\r\n            \"class\": \"math\",\r\n            title: this.description,\r\n        })\r\n    }\r\n\r\n    static pattern = source =>\r\n        source.startsWith(\"$$$\")\r\n}\r\n\r\nexport class IframeBlock extends BaseNode {\r\n    // injected html codes, used to auto darkmode and send height message\r\n    static #injectedCodes = id => `\\\r\n<style>\r\n@media (prefers-color-scheme: dark) {\r\n  :root {\r\n    color: white;\r\n    background-color: #121212;\r\n  }\r\n}\r\n</style>\r\n<script>\r\nwindow.addEventListener(\"load\", (e) => {\r\n  const iframeRootEl = e.target.documentElement\r\n  const parent = window.parent\r\n  const height = parseFloat(getComputedStyle(iframeRootEl).height)\r\n  parent.postMessage({\r\n    height,\r\n    id: \"${id}\"\r\n  }, \"*\")\r\n})\r\n</script>`\r\n\r\n    constructor(content, description) {\r\n        super()\r\n\r\n        globalThis.__IframeCounter__ += 1\r\n        this.id = \"iframe_\" + globalThis.__IframeCounter__\r\n        this.description = description\r\n\r\n        if (typeof window == \"object\") {\r\n            // in browser\r\n            this.content = content + IframeBlock.#injectedCodes(this.id)\r\n        } else {\r\n            // in node.js\r\n            this.content = content\r\n        }\r\n    }\r\n\r\n    toHTML() {\r\n        const iframeEl = el(\"iframe\", this.description, {\r\n            id: this.id,\r\n            title: this.description,\r\n            srcdoc: this.content,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\n// --- --- --- ---\r\n// block nodes end\r\n// --- --- --- ---\r\n","export default function(line) {\r\n    let indentCount = 0\r\n    let spaceCount = 0\r\n\r\n    for (const ch of line) {\r\n        if (ch.match(/[^\\s\\t]/)) {\r\n            break\r\n        }\r\n\r\n        if (ch == \"\\t\") {\r\n            indentCount += 1\r\n            continue\r\n        }\r\n        if (ch == \" \") {\r\n            spaceCount += 1\r\n        }\r\n        if (spaceCount == 2) {\r\n            spaceCount = 0\r\n            indentCount += 1\r\n        }\r\n    }\r\n    return indentCount\r\n}\r\n","import { List } from \"../node.js\"\r\nimport getIndent from \"../utils/getIndent.js\"\r\n\r\nexport default function listResolver(currentLine, lines) {\r\n    const currentIndent = getIndent(currentLine)\r\n    const currentNode = new List(currentLine)\r\n\r\n    while (lines.length && List.isListPattern(lines[0])) {\r\n        const nextLine = lines.shift()\r\n        const nextIndent = getIndent(nextLine)\r\n        const isNextOrdered = List.orderedPattern(nextLine)\r\n\r\n        if (nextIndent > currentIndent) {\r\n            currentNode.push(listResolver(nextLine, lines))\r\n        } else if (nextIndent == currentIndent && isNextOrdered == currentNode.isOrdered) {\r\n            currentNode.push(List.getContent(nextLine, isNextOrdered))\r\n        } else {\r\n            lines.unshift(nextLine)\r\n            break\r\n        }\r\n    }\r\n    return currentNode\r\n}","import mdResolver from \"../index.js\"\r\nimport { Quote } from \"../node.js\"\r\n\r\nexport default function(firstLine, lines) {\r\n    let quotedContent = firstLine.slice(2) + \"\\n\"\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (Quote.pattern(l)) {\r\n            quotedContent += l.slice(2) + \"\\n\"\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n    const children = mdResolver(quotedContent)\r\n    const node = new Quote(children)\r\n    return node\r\n}\r\n","import { Table } from \"../node.js\"\r\n\r\n// input: \"| content | content |\"\"\r\n// output: [\"content\",\"content\"]\r\nfunction tableLineConverter(tableLine) {\r\n    const splited = tableLine.split(\"|\")\r\n    const result = splited\r\n        .filter(item => item.length > 0)\r\n        .map(item => item.trim())\r\n    return result\r\n}\r\n\r\nexport default function(firstLine, lines) {\r\n    const headerText = firstLine\r\n    const contentLines = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (Table.pattern(l)) {\r\n            contentLines.push(l)\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n\r\n    const headerCells = tableLineConverter(headerText)\r\n    const contentRows = contentLines.map(tableLineConverter)\r\n    const tableNode = new Table(headerCells, contentRows)\r\n    return tableNode\r\n}\r\n","import { CodeBlock, DetailsBlock, FormulaBlock, Iframe, IframeBlock } from \"../node.js\"\r\n\r\nfunction blockResolverGenerator(endSign, targetClass) {\r\n    return function(firstLine, lines) {\r\n        const description = firstLine.slice(3)\r\n\r\n        let content = \"\"\r\n        while (lines.length) {\r\n            const l = lines.shift()\r\n\r\n            if (l == endSign) {\r\n                break\r\n            }\r\n\r\n            content += l + \"\\n\"\r\n        }\r\n        return new targetClass(content, description)\r\n    }\r\n}\r\n\r\nexport const codeResolver = blockResolverGenerator(\"```\", CodeBlock)\r\nexport const detailsResolver = blockResolverGenerator(\">>>\", DetailsBlock)\r\nexport const formulaResolver = blockResolverGenerator(\"$$$\", FormulaBlock)\r\nexport function iframeResolver(firstLine, lines) {\r\n    const blockResolver = blockResolverGenerator(\"@@@\", IframeBlock)\r\n\r\n    if (!firstLine.startsWith(\"@@@\")) {\r\n        // link to out resource\r\n        return new Iframe(firstLine)\r\n    }\r\n    return blockResolver(firstLine, lines)\r\n}\r\n","import {\r\n    Headline, Quote, Divider,\r\n    List, Para, Table,\r\n    Image, Audio, Video,\r\n    FormulaBlock, CodeBlock,\r\n    isIframePattern,\r\n    DetailsBlock\r\n} from \"./node.js\"\r\nimport {\r\n    listResolver, quoteResolver, tableResolver,\r\n    codeResolver, formulaResolver, iframeResolver, detailsResolver,\r\n} from \"./resolvers/index.js\"\r\nimport getLines from \"./utils/getLines.js\"\r\n\r\nexport default function mdResolver(source) {\r\n    const lines = getLines(source)\r\n    const nodes = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l.length == 0) {\r\n            continue\r\n        }\r\n\r\n        if (Headline.pattern(l)) {\r\n            nodes.push(new Headline(l))\r\n        } else\r\n        if (Divider.pattern(l)) {\r\n            nodes.push(new Divider)\r\n        } else\r\n        if (Quote.pattern(l)) {\r\n            nodes.push(quoteResolver(l, lines))\r\n        } else\r\n        if (List.isListPattern(l)) {\r\n            nodes.push(listResolver(l, lines))\r\n        } else\r\n        if (Table.pattern(l)) {\r\n            nodes.push(tableResolver(l, lines))\r\n        } else\r\n        if (Image.pattern(l)) {\r\n            nodes.push(new Image(l))\r\n        } else\r\n        if (Audio.pattern(l)) {\r\n            nodes.push(new Audio(l))\r\n        } else\r\n        if (Video.pattern(l)) {\r\n            nodes.push(new Video(l))\r\n        } else\r\n        if (DetailsBlock.pattern(l)) {\r\n            nodes.push(detailsResolver(l, lines))\r\n        } else\r\n        if (FormulaBlock.pattern(l)) {\r\n            nodes.push(formulaResolver(l, lines))\r\n        } else\r\n        if (CodeBlock.pattern(l)) {\r\n            nodes.push(codeResolver(l, lines))\r\n        } else\r\n        if (isIframePattern(l)) {\r\n            nodes.push(iframeResolver(l, lines))\r\n        } else {\r\n            nodes.push(new Para(l))\r\n        }\r\n    }\r\n    return nodes\r\n}","export default function(source) {\r\n    if (source.indexOf(\"\\r\") != -1) {\r\n        return source.split(\"\\r\\n\")\r\n    } else {\r\n        return source.split(\"\\n\")\r\n    }\r\n}","import config from \"../../build.config.js\"\r\n\r\nconst { katexOptions } = config\r\n\r\nlet hljs  = null\r\nlet katex = null\r\n\r\nexport async function importHighlighter() {\r\n    function importLangDefs() {\r\n        // dynamically import language definitions\r\n        const languageListArr = Array.from(globalThis.__LanguageList__)\r\n        const langDefImporters = languageListArr\r\n            .filter(name => !hljs.getLanguage(name))\r\n            .map(lang => import(`../libs/highlight-es/languages/${lang.toLowerCase()}.js`))\r\n\r\n        Promise.all(langDefImporters)\r\n            .then(langDefs => langDefs.forEach((defModule, index) => {\r\n                const name = languageListArr[index]\r\n                const def  = defModule.default\r\n                hljs.registerLanguage(name, def)\r\n            }))\r\n            .then(() => hljs.highlightAll())\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    if (globalThis.__LanguageList__.size == 0) {\r\n        // no code blocks\r\n        return\r\n    }\r\n    if (hljs) {\r\n        importLangDefs()\r\n        return\r\n    }\r\n\r\n    // import highlight.js itself\r\n    await import(\"../libs/highlight-es/highlight.js\")\r\n        .then(module => hljs = module.default)\r\n        .then(importLangDefs)\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport async function importTexRenderer() {\r\n    function renderFormula() {\r\n        // render all formula element\r\n        document.querySelectorAll(\".math\")\r\n            .forEach(el => katex.render(el.textContent, el, katexOptions))\r\n    }\r\n\r\n    if (!globalThis.__ContainsFormula__) {\r\n        // no formula\r\n        return\r\n    }\r\n    if (katex) {\r\n        renderFormula()\r\n        return\r\n    }\r\n\r\n    const tasks = [import(\"../libs/katex/katex.js\"), fetch(\"dist/katex.min.css\")]\r\n    await Promise.all(tasks)\r\n        .then(([module, cssRes]) => {\r\n            // set katex js module & render\r\n            katex = module.default\r\n            renderFormula()\r\n            return cssRes.text()\r\n        })\r\n        .then(cssText => {\r\n            // set katex css\r\n            const style = document.createElement(\"style\")\r\n            style.textContent = cssText\r\n            document.head.appendChild(style)\r\n        })\r\n        .catch(err => console.error(err))\r\n}","import keydownEvent from \"./keydownEvent.js\"\r\nimport { importHighlighter, importTexRenderer } from \"./importer.js\"\r\nimport el from \"./markdown/utils/el.js\"\r\nimport mdResolver from \"./markdown/index.js\"\r\n\r\nconst articleEl        = document.querySelector(\"article:not(#directory-description)\")\r\nconst mainEl           = document.querySelector(\"main\")\r\nconst dirDescriptionEl = mainEl.querySelector(\"#directory-description\")\r\nconst parentDirBtn     = mainEl.querySelector(\"#previous-dir li\")\r\nconst articleList      = mainEl.querySelector(\"#article-list\")\r\n\r\n// ----------------\r\n// article renderer\r\n// ----------------\r\n\r\narticleEl.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n    if (target.tagName == \"IMG\") {\r\n        window.open(target.src)\r\n    }\r\n})\r\n\r\nfunction mdEntry(mdContent) {\r\n    // language names to import\r\n    globalThis.__LanguageList__ = new Set()\r\n    // to deside whether to import `katex`\r\n    globalThis.__ContainsFormula__ = false\r\n    // used to dynamic generate iframe id\r\n    globalThis.__IframeCounter__ = 0\r\n\r\n    const structure = mdResolver(mdContent)\r\n\r\n    let resultNodes = structure\r\n        .map(node => node.toHTML())\r\n    if (!resultNodes.length) {\r\n        resultNodes = el(\"h1\", \"404 Not Found\")\r\n    }\r\n    return resultNodes\r\n}\r\n\r\nexport function articleRender(articleContent) {\r\n    const resultNodes = mdEntry(articleContent)\r\n    articleEl.innerHTML = \"\"\r\n    resultNodes.forEach(el => articleEl.appendChild(el))\r\n\r\n    mainEl.style.display = \"none\"\r\n    articleEl.style.display = \"block\"\r\n    articleEl.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n    // return to the top\r\n    document.body.scrollTop = 0\r\n    document.documentElement.scrollTop = 0\r\n\r\n    importHighlighter().then(() => globalThis.__LanguageList__ = null)\r\n    importTexRenderer().then(() => globalThis.__ContainsFormula__ = false)\r\n}\r\n\r\n// --------------\r\n// index renderer\r\n// --------------\r\n\r\nparentDirBtn.addEventListener(\"click\", () => {\r\n    const splited = location.hash.split(\"/\")\r\n    globalThis.__CurrentPage__ = 1\r\n    location.hash = splited.slice(0, -2).join(\"/\") + \"/\"\r\n})\r\narticleList.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n\r\n    if (target == articleList) {\r\n        // when click on the `articleList` itself\r\n        // ignore this event.\r\n        return\r\n    }\r\n\r\n    if (!target.getAttribute(\"data-target-blog\")) {\r\n        if (target.innerText.endsWith(\"/\")) {\r\n            // open directory\r\n            globalThis.__CurrentPage__ = 1\r\n        }\r\n        location.hash += target.innerText\r\n    } else {\r\n        // in `newest` page\r\n        globalThis.__CurrentPage__ = 1\r\n        location.hash = target.getAttribute(\"data-target-blog\")\r\n    }\r\n})\r\n\r\nexport function indexRender(indexing, itemResolver) {\r\n    // calculate properties\r\n    const {current, total} = indexing\r\n    let isFirstPage = false\r\n    let isLastPage = false\r\n    let isOnlyPage = false\r\n    if (total == 1) {\r\n        isOnlyPage = true\r\n    } else {\r\n        if (current == 1) {\r\n            isFirstPage = true\r\n        }\r\n        if (current == total) {\r\n            isLastPage = true\r\n        }\r\n    }\r\n    mainEl.setAttribute(\"data-is-first-page\", isFirstPage)\r\n    mainEl.setAttribute(\"data-is-last-page\", isLastPage)\r\n    mainEl.setAttribute(\"data-is-only-page\", isOnlyPage)\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    dirDescriptionEl.innerHTML = \"\"\r\n    if (\"directoryDescription\" in indexing) {\r\n        // render directory description\r\n        const resultNodes = mdEntry(indexing.directoryDescription)\r\n        resultNodes.forEach(el => dirDescriptionEl.appendChild(el))\r\n        dirDescriptionEl.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n            el.onkeydown = keydownEvent(el)\r\n        })\r\n\r\n        importHighlighter().then(() => globalThis.__LanguageList__ = null)\r\n        importTexRenderer().then(() => globalThis.__ContainsFormula__ = false)\r\n    }\r\n\r\n    // reset articleList content\r\n    articleList.innerHTML = \"\"\r\n    indexing.content\r\n        .map(itemResolver)\r\n        .forEach(el =>\r\n            articleList.appendChild(el)\r\n        )\r\n\r\n    // set keyboard event\r\n    articleList.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    articleEl.style.display = \"none\"\r\n    mainEl.style.display = \"block\"\r\n\r\n    // return to the top\r\n    document.body.scrollTop = 0\r\n    document.documentElement.scrollTop = 0\r\n}","import \"./styles/style.css\"\r\nimport \"./libs/katex/katex.css\"\r\n\r\nimport { fetchJSON, fetchMD } from \"./utils/fetchResources.js\"\r\nimport keydownEvent from \"./utils/keydownEvent.js\"\r\nimport mdResolver from \"./utils/markdown/index.js\"\r\nimport el from \"./utils/markdown/utils/el.js\"\r\nimport { articleRender, indexRender } from \"./utils/render.js\"\r\n\r\nglobalThis.__CurrentPage__ = 1\r\nconst indexDirPath = \"./.index/\"\r\n\r\n// ---------------------------\r\n// Buttons event setting start\r\n// ---------------------------\r\n\r\nconst lightBtn = document.querySelector(\"#light-btn\")\r\nconst darkBtn = document.querySelector(\"#dark-btn\")\r\nconst previousBtn = document.querySelector(\"button#previous\")\r\nconst nextBtn = document.querySelector(\"button#next\")\r\n\r\nlightBtn.onkeydown = keydownEvent(lightBtn)\r\ndarkBtn.onkeydown = keydownEvent(darkBtn)\r\npreviousBtn.addEventListener(\"click\", () => {\r\n    if (globalThis.__CurrentPage__ > 0) {\r\n        globalThis.__CurrentPage__ -= 1\r\n        hashEvent()\r\n    }\r\n})\r\nnextBtn.addEventListener(\"click\", () => {\r\n    globalThis.__CurrentPage__ += 1\r\n    hashEvent()\r\n})\r\n\r\n// -------------------------\r\n// Buttons event setting end\r\n// -------------------------\r\n\r\n\r\n// ---------------------\r\n// Hash controller start\r\n// ---------------------\r\n\r\nconst mainEl = document.querySelector(\"main\")\r\nconst articleList = document.getElementById(\"article-list\")\r\n\r\nasync function hashEvent() {\r\n    if (!location.hash) {\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    const hash = location.hash.slice(1) // remove '#'\r\n    mainEl.classList.add(\"disabled\")\r\n\r\n    if (hash == \"newest/\") {\r\n        // open newest page\r\n        const newestIndex = await fetchJSON(indexDirPath + \"newest_\" + globalThis.__CurrentPage__)\r\n        indexRender(newestIndex, item => {\r\n            const dateEl  = el(\"code\", item.date)\r\n            const titleEl = el(\"span\", item.title)\r\n            return el(\"li\",\r\n                [dateEl, el(\"text\", \": \"), titleEl],\r\n                {\r\n                    tabindex: 0,\r\n                    \"data-target-blog\": item.link\r\n                }\r\n            )\r\n        })\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\"/\")) {\r\n        // open folder\r\n        const splited = hash.split(\"/\").slice(0, -1)\r\n        const indexFilePath = indexDirPath + splited.join(\"+\") + \"_\" + globalThis.__CurrentPage__\r\n        const index = await fetchJSON(indexFilePath)\r\n        indexRender(index, item =>\r\n            el(\"li\", el(\"span\", item), {\r\n                tabindex: 0\r\n            })\r\n        )\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\".md\")) {\r\n        // open article\r\n        const articleContent = await fetchMD(\"./\" + hash)\r\n        articleRender(articleContent)\r\n    } else {\r\n        // the hash \"#static/\" is the homepage\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    // delay this operation\r\n    mainEl.setAttribute(\"data-is-root\", hash == \"static/\")\r\n    mainEl.classList.remove(\"disabled\")\r\n}\r\n\r\nwindow.onload = hashEvent\r\nwindow.addEventListener(\"hashchange\", hashEvent)\r\nwindow.addEventListener(\"message\", (e) => {\r\n    if (e.origin != \"null\") {\r\n        return\r\n    }\r\n    const { id, height } = e.data\r\n    const targetIframeEl = document.getElementById(id)\r\n    targetIframeEl.style.height = height + \"px\"\r\n}, false)\r\n\r\n// -------------------\r\n// Hash controller end\r\n// -------------------"],"names":["async","fetchJSON","path","fetch","then","res","json","catch","err","console","log","error","keydownEvent","el","e","key","click","config","homepage","footer","language","enableRSS","value","ignoreDir","enableNewest","pageCapacity","RSSCapacity","previewPort","katexOptions","propToString","props","Object","entries","filter","_","val","undefined","map","toString","replaceAll","htmlValueFormater","join","tagName","content","globalThis","document","createTextNode","targetEl","createElement","setAttribute","propSetter","Array","childEl","appendChild","HTMLElement","Error","textContent","contentSetter","getInterval","text","endSign","includes","intervalText","isEscape","length","ch","slice","substr","KeyToken_TagName_map","Map","PairedParenMap","TextToken","constructor","this","toHTML","KeyToken","tagSign","tag","get","realTagName","className","split","__ContainsFormula__","elOption","class","parser","LinkToken","address","displayContent","startsWith","href","target","PhoneticToken","notation","ignoredLeftParenthesis","ignoredRightParenthesis","notationEl","concat","source","getFirstChar","charAt","substring","getSpecialTokenClass","tokenSign","targetTokenType","tokens","textTerm","keyTerm","keyStart","isInKey","has","nextCh","push","specialTokenSign","pairedTokenSign","removedContent","hiddenContent","token","BaseNode","inline","inlineResolver","Headline","super","splited","numberSignStr","numberSignCount","static","match","Para","trimStart","Quote","children","innerNodes","node","Divider","List","isOrdered","Boolean","orderedPattern","getContent","child","childrenHTML","unorderedPattern","line","Table","headerCells","bodyRows","tableHeaderCell","tableBodyCell","tableHeaderRow","row","tableBodyRow","tableHeader","tableBody","MediaNode","description","mdText","containerGenerator","patternGenerator","identifierSign","endsWith","replaceContentGenerator","downloadEl","srcUrlResolver","rawUrl","actualUrl","location","hash","__ResourcePath__","Image","imageEl","src","alt","loading","tabindex","Audio","audioEl","controls","Video","videoEl","isIframePattern","Iframe","iframeEl","title","sandbox","CodeBlock","lang","window","append","__LanguageList__","add","codeEl","toUpperCase","DetailsBlock","summary","mdResolver","summaryEl","detailsEl","childrenEl","FormulaBlock","IframeBlock","id","__IframeCounter__","injectedCodes","srcdoc","getIndent","indentCount","spaceCount","listResolver","currentLine","lines","currentIndent","currentNode","isListPattern","nextLine","shift","nextIndent","isNextOrdered","unshift","quoteResolver","firstLine","quotedContent","l","pattern","tableLineConverter","tableLine","item","trim","tableResolver","headerText","contentLines","contentRows","blockResolverGenerator","targetClass","codeResolver","detailsResolver","formulaResolver","iframeResolver","blockResolver","indexOf","getLines","nodes","hljs","katex","importHighlighter","importLangDefs","languageListArr","from","langDefImporters","name","getLanguage","__variableDynamicImportRuntime0__","toLowerCase","Promise","all","langDefs","forEach","defModule","index","def","default","registerLanguage","highlightAll","size","import","module","importTexRenderer","renderFormula","querySelectorAll","render","tasks","cssRes","cssText","style","head","articleEl","querySelector","mainEl","dirDescriptionEl","parentDirBtn","articleList","mdEntry","mdContent","Set","resultNodes","indexRender","indexing","itemResolver","current","total","isFirstPage","isLastPage","isOnlyPage","innerHTML","directoryDescription","onkeydown","display","body","scrollTop","documentElement","addEventListener","open","__CurrentPage__","getAttribute","innerText","indexDirPath","lightBtn","darkBtn","previousBtn","nextBtn","hashEvent","classList","dateEl","date","titleEl","link","indexFilePath","articleContent","articleRender","status","reader","getReader","decoder","TextDecoder","totalData","processor","result","done","decode","stream","read","fetchMD","remove","getElementById","onload","origin","height","data"],"mappings":"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"}