{"version":3,"file":"index.min.js","sources":["../src/utils/fetchResources.js","../src/utils/keydownEvent.js","../src/utils/markdown/utils/el.js","../src/utils/markdown/inline.js","../src/utils/markdown/node.js","../src/utils/markdown/resolvers/codeResolver.js","../src/utils/markdown/utils/getIndent.js","../src/utils/markdown/resolvers/listResolver.js","../src/utils/markdown/resolvers/quoteResolver.js","../src/utils/markdown/resolvers/tableResolver.js","../src/utils/markdown/resolvers/formulaResolver.js","../src/utils/markdown/resolvers/iframeResolver.js","../src/utils/markdown/index.js","../src/utils/markdown/utils/getLines.js","../src/utils/importer.js","../src/utils/render.js","../src/index.js"],"sourcesContent":["export async function fetchJSON(path) {\r\n    return await fetch(path)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            console.log(\"JSON request error: \" + path)\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport async function fetchMD(path) {\r\n    return await fetch(path)\r\n        .then(res => {\r\n            if (res.status != 200) {\r\n                throw res.status\r\n            }\r\n            return res.body\r\n        })\r\n        .then(async body => {\r\n            const reader = body.getReader()\r\n            const decoder = new TextDecoder('utf-8');\r\n            let totalData = \"\";\r\n            const processor = (result) => {\r\n                if (result.done) {\r\n                    return totalData\r\n                }\r\n                totalData += decoder.decode(result.value, { stream: true })\r\n                return reader.read().then(processor);\r\n            }\r\n            const result = await reader.read();\r\n            return processor(result);\r\n        })\r\n        .catch(err => {\r\n            switch (err) {\r\n                // render error code in markdown format\r\n                case 404:\r\n                    return \"# 404 Not Found\"\r\n                case 500:\r\n                    return \"# 500 Internal Server Error\"\r\n                default:\r\n                    console.log(\"Markdown request error: \" + path)\r\n                    console.error(err)\r\n            }\r\n        })\r\n}","export default function(el) {\r\n    return function(e) {\r\n        if (e.key == \"Enter\" || e.key == \" \") {\r\n            el.click()\r\n        }\r\n    }\r\n}\r\n","function propSetter(el, props) {\r\n    if (!props) {\r\n        return\r\n    }\r\n    for (const [key, val] of Object.entries(props)) {\r\n        el.setAttribute(key, val)\r\n    }\r\n}\r\n\r\nfunction contentSetter(el, content) {\r\n    if (content instanceof Array) {\r\n        // array of html element\r\n        for (const childEl of content) {\r\n            el.appendChild(childEl)\r\n        }\r\n    } else if (content instanceof HTMLElement) {\r\n        // single element\r\n        el.appendChild(content)\r\n    } else if (typeof content == \"string\") {\r\n        // common text\r\n        el.textContent = content\r\n    } else {\r\n        throw Error(\"Unexpected element content: \" + content)\r\n    }\r\n}\r\n\r\nexport default function el(tagName, content, props=null) {\r\n    if (\"document\" in globalThis) {\r\n        // in browser\r\n        if (tagName == \"text\") {\r\n            return document.createTextNode(content)\r\n        }\r\n\r\n        const targetEl = document.createElement(tagName)\r\n        propSetter(targetEl, props)\r\n        contentSetter(targetEl, content)\r\n        return targetEl\r\n    } else {\r\n        // in node.js\r\n        function propToString(props) {\r\n            const resultStrArr = []\r\n            for (const [key, val] of Object.entries(props)) {\r\n                resultStrArr.push(`${key}=\"${val.toString()}\"`)\r\n            }\r\n            return resultStrArr.join(\" \")\r\n        }\r\n\r\n        if (content instanceof Array) {\r\n            content = content.join(\"\")\r\n        }\r\n        switch (tagName) {\r\n            case \"text\":\r\n                return content\r\n            case \"hr\":\r\n                return \"<hr>\"\r\n            case \"img\":\r\n                return `<img ${props ? \" \" + propToString(props) : \"\"}>`\r\n        }\r\n        return `<${tagName}${props ? \" \" + propToString(props) : \"\"}>${content}</${tagName}>`\r\n    }\r\n}\r\n","import el from \"./utils/el.js\"\r\n\r\n// identifier character array\r\nconst keyTermArray = [\r\n    \"#\",\r\n    \"`\",\r\n    \"_\",\r\n    \"/\",\r\n    \"-\",\r\n    \":\",\r\n    \",\",\r\n    \"'\",\r\n    \"$\",\r\n]\r\n// identifier character to HTML tag\r\nconst KeyToken_TagName_map = new Map([\r\n    [\"##\", \"strong\"],\r\n    [\"``\", \"code\"],\r\n    [\"__\", \"u\"],\r\n    [\"//\", \"i\"],\r\n    [\"--\", \"del\"],\r\n    [\"::\", \"span.dim\"],\r\n    [\",,\", \"sub\"],\r\n    [\"''\", \"sup\"],\r\n    [\"$$\", \"span.math\"],\r\n])\r\n\r\n// --- --- --- --- --- ---\r\n\r\nclass Token {\r\n    constructor(type, content) {\r\n        this.type = type\r\n        this.content = content\r\n    }\r\n\r\n    static key  = Symbol(\"key\")\r\n    static link = Symbol(\"link\")\r\n    static text = Symbol(\"text\")\r\n}\r\n\r\nclass LinkToken extends Token {\r\n    constructor(content, address) {\r\n        super()\r\n\r\n        this.type = Token.link\r\n        this.content = content\r\n        this.address = address\r\n    }\r\n\r\n    toHTML() {\r\n        if (this.address.startsWith(\"http\")) {\r\n            // internet links\r\n            return el(\"a\", this.content, {\r\n                href: this.address,\r\n                target: \"_blank\"\r\n            })\r\n        }\r\n\r\n        // static resources or links\r\n        const actualAddress = \"static/\" + this.address\r\n        return el(\"a\", this.content, {\r\n            href: \"#\" + actualAddress\r\n        })\r\n    }\r\n}\r\n\r\n// --- --- --- --- --- ---\r\n\r\n// (\"abc]\", \"]\") -> \"abc\"\r\nexport function getInterval(text, endSign) {\r\n    let intervalText = \"\"\r\n    let isEscape = false\r\n\r\n    while (text.length) {\r\n        const ch = text.slice(0, 1)\r\n        text = text.substr(1)\r\n\r\n        if (ch == \"\\\\\") {\r\n            isEscape = !isEscape\r\n            continue\r\n        }\r\n        if (ch == endSign && !isEscape) {\r\n            break\r\n        }\r\n        intervalText += ch\r\n        isEscape = false\r\n    }\r\n\r\n    return intervalText\r\n}\r\n\r\nfunction tokenize(text) {\r\n    const tokens = []\r\n    let textTerm = \"\"\r\n    let keyTerm  = \"\"\r\n    let isEscape = false\r\n\r\n    while (text.length) {\r\n        const ch = text.slice(0, 1)\r\n        text = text.substr(1)\r\n\r\n        // link resolve\r\n        if (ch == \"[\" && !isEscape) {\r\n            tokens.push(new Token(Token.text, textTerm))\r\n            textTerm = \"\"\r\n\r\n            const linkDisplay = getInterval(text, \"]\")\r\n            text = text.substr(linkDisplay.length + 1)\r\n\r\n            let ch = text.slice(0, 1)\r\n            text = text.substr(1)\r\n            if (ch == \"(\" && !isEscape) {\r\n                const linkSelf = getInterval(text, \")\")\r\n                text = text.substr(linkSelf.length + 1)\r\n                tokens.push(new LinkToken(linkDisplay, linkSelf))\r\n            }\r\n            continue\r\n        }\r\n\r\n        if (keyTermArray.includes(ch) && !isEscape) {\r\n            // keyTerm = \"#\" && ch = \"#\"\r\n            if (keyTerm.length && keyTerm == ch) {\r\n                tokens.push(new Token(Token.text, textTerm))\r\n                tokens.push(new Token(Token.key , keyTerm + ch))\r\n                keyTerm  = \"\"\r\n                textTerm = \"\"\r\n            } else {\r\n                keyTerm = ch\r\n            }\r\n        } else {\r\n            if (ch == \"\\\\\") {\r\n                isEscape = !isEscape\r\n                continue\r\n            }\r\n            if (keyTerm.length) {\r\n                textTerm += keyTerm\r\n                keyTerm = \"\"\r\n            }\r\n            isEscape = false\r\n            textTerm += ch\r\n        }\r\n    }\r\n\r\n    if (textTerm.length) {\r\n        tokens.push(new Token(Token.text, textTerm))\r\n    }\r\n    if (keyTerm.length) {\r\n        tokens.push(new Token(Token.text, keyTerm))\r\n    }\r\n\r\n    return tokens\r\n}\r\n\r\nfunction convert(tokens) {\r\n    let resultHTML = []\r\n    let identifier = \"\"\r\n    let tagContent = \"\"\r\n\r\n    for (const token of tokens) {\r\n        switch (token.type) {\r\n            case Token.key:\r\n                if (identifier.length && token.content == identifier) {\r\n                    const tagName = KeyToken_TagName_map.get(identifier)\r\n                    if (tagName.includes(\".\")) {\r\n                        const [realTagName, className] = tagName.split(\".\")\r\n                        if (identifier == \"$$\") {\r\n                            // formula sign\r\n                            globalThis.__ContainsFormula__ = true\r\n                        }\r\n                        resultHTML.push(el(realTagName, tagContent, {\r\n                            \"class\": className\r\n                        }))\r\n                    } else {\r\n                        resultHTML.push(el(tagName, tagContent))\r\n                    }\r\n\r\n                    identifier = \"\"\r\n                    tagContent = \"\"\r\n                } else {\r\n                    identifier = token.content\r\n                }\r\n                break\r\n            case Token.text:\r\n                if (!identifier.length) {\r\n                    resultHTML.push(el(\"text\", token.content))\r\n                } else {\r\n                    tagContent = token.content\r\n                }\r\n                break\r\n            case Token.link:\r\n                resultHTML.push(token.toHTML())\r\n                break\r\n        }\r\n    }\r\n    return resultHTML\r\n}\r\n\r\nexport default function(rawText) {\r\n    const tokens = tokenize(rawText)\r\n    const resultHTML = convert(tokens)\r\n    return resultHTML\r\n}\r\n","import inlineResolver, { getInterval } from \"./inline.js\"\r\nimport el from \"./utils/el.js\"\r\n\r\nclass BaseNode {\r\n    tagName = \"\"\r\n    content = \"\"\r\n\r\n    toHTML() {\r\n        const inline = inlineResolver(this.content)\r\n        return el(this.tagName, inline)\r\n    }\r\n}\r\n\r\nexport class Headline extends BaseNode {\r\n    constructor(content) {\r\n        super()\r\n\r\n        // \"### test\" -> \"###\"\r\n        const splited = content.split(\" \")\r\n        const numberSignStr = splited[0]\r\n        let numberSignCount = 0\r\n        for (const ch of numberSignStr) {\r\n            if (ch == '#') {\r\n                numberSignCount += 1\r\n            }\r\n        }\r\n\r\n        if (numberSignCount > 6) {\r\n            numberSignCount = 0\r\n        }\r\n\r\n        this.tagName = \"h\" + numberSignCount\r\n        this.content = splited.slice(1).join(\" \")\r\n    }\r\n\r\n    static pattern = source => source.match(/^(#+ )/)\r\n}\r\n\r\nexport class Para extends BaseNode {\r\n    tagName = \"p\"\r\n\r\n    constructor(content) {\r\n        super()\r\n        this.content = content.trimStart()\r\n    }\r\n}\r\n\r\nexport class Quote extends BaseNode {\r\n    tagName = \"blockquote\"\r\n    children = []\r\n\r\n    constructor(children) {\r\n        super()\r\n        this.children = children\r\n    }\r\n    toHTML() {\r\n        const innerHTML = this.children\r\n            .map(node => node.toHTML())\r\n        return el(this.tagName, innerHTML)\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"> \")\r\n}\r\n\r\nexport class Divider extends BaseNode {\r\n    toHTML = () => el(\"hr\", [])\r\n    static pattern = source =>\r\n        source.match(/(-\\s*-\\s*-)|(\\*\\s*\\*\\s*\\*)/) && !source.match(/[a-zA-Z0-9]/)\r\n}\r\n\r\nexport class List extends BaseNode {\r\n    children = []\r\n\r\n    constructor(content) {\r\n        super()\r\n\r\n        this.isOrdered = Boolean(List.orderedPattern(content))\r\n        this.tagName   = (this.isOrdered) ? \"ol\" : \"ul\"\r\n        this.children  = [List.getContent(content, this.isOrdered)]\r\n    }\r\n\r\n    push = child => this.children.push(child)\r\n\r\n    toHTML() {\r\n        const childrenHTML = []\r\n        for (const child of this.children) {\r\n            if (typeof child == \"string\") {\r\n                const inline = inlineResolver(child)\r\n                childrenHTML.push(el(\"li\", inline))\r\n            } else {\r\n                childrenHTML.push(child.toHTML())\r\n            }\r\n        }\r\n        return el(this.tagName, childrenHTML)\r\n    }\r\n\r\n    static unorderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[+-]+ )/))\r\n    static orderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[0-9]+. )/))\r\n\r\n    static isListPattern = (source) =>\r\n        List.orderedPattern(source) || List.unorderedPattern(source)\r\n\r\n    static getContent(line, isOrdered) {\r\n        if (isOrdered) {\r\n            // \"1. ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[0-9]+. )).+$/g)[0]\r\n        } else {\r\n            // \"- ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[+-]+ )).+$/g)[0]\r\n        }\r\n    }\r\n}\r\n\r\nexport class TableBlock extends BaseNode {\r\n    headerCells = [\"\"]   // [string]\r\n    bodyRows    = [[\"\"]] // [[string]]\r\n\r\n    constructor(headerCells, bodyRows) {\r\n        super()\r\n\r\n        this.headerCells = headerCells\r\n        this.bodyRows    = bodyRows\r\n    }\r\n\r\n    #tableHeaderCell = content => el(\"th\", content)\r\n    #tableBodyCell   = content => el(\"td\", inlineResolver(content))\r\n    #tableHeaderRow  = row => el(\"tr\", row.map(this.#tableHeaderCell))\r\n    #tableBodyRow    = row => el(\"tr\", row.map(this.#tableBodyCell))\r\n\r\n    toHTML() {\r\n        const tableHeader = el(\r\n            \"thead\",\r\n            this.#tableHeaderRow(this.headerCells)\r\n        )\r\n        const tableBody = el(\r\n            \"tbody\",\r\n            this.bodyRows\r\n                .map(this.#tableBodyRow)\r\n        )\r\n        return el(\"table\", [tableHeader, tableBody])\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"| \")\r\n}\r\n\r\nexport class CodeBlock extends BaseNode {\r\n    constructor(content, lang) {\r\n        super()\r\n\r\n        this.lang = lang\r\n        if (typeof window == \"object\") {\r\n            // in browser\r\n            this.content = content\r\n        } else {\r\n            // in node.js\r\n            this.content = content\r\n                .replaceAll(\"<\", \"&lt;\")\r\n                .replaceAll(\">\", \"&gt;\")\r\n        }\r\n    }\r\n    append(content) {\r\n        this.content += content\r\n    }\r\n    toHTML() {\r\n        if (typeof window == \"object\") {\r\n            globalThis.__LanguageList__.add(this.lang)\r\n        }\r\n        const codeEl = el(\r\n            \"code\",\r\n            this.content,\r\n            {\r\n                \"class\": `language-${this.lang}`,\r\n                \"data-language\": this.lang.toUpperCase(),\r\n            }\r\n        )\r\n        return el(\"pre\", codeEl)\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"```\")\r\n}\r\n\r\nexport class FormulaBlock extends BaseNode {\r\n    tagName = \"div\"\r\n    content = \"\"\r\n\r\n    constructor(content) {\r\n        super()\r\n\r\n        this.content = content\r\n        globalThis.__ContainsFormula__ = true\r\n    }\r\n    toHTML = () => el(this.tagName, this.content, {\r\n        \"class\": \"math\"\r\n    })\r\n\r\n    static pattern = source =>\r\n        source.startsWith(\"$$$\")\r\n}\r\n\r\n// --- --- --- --- -\r\n// media nodes start\r\n// --- --- --- --- -\r\n\r\nclass MediaNode extends BaseNode {\r\n    source = \"\"\r\n    description = \"\"    \r\n    constructor(mdText) {\r\n        super()\r\n\r\n        mdText = mdText.substr(2)\r\n        this.description = getInterval(mdText, \"]\")\r\n        mdText = mdText.substr(this.description.length + 2)\r\n        this.source = getInterval(mdText, \")\")\r\n    }\r\n\r\n    static containerGenerator(content) {\r\n        return el(\"div\", content, {\r\n            \"class\": \"media-container\"\r\n        })\r\n    }\r\n\r\n    static patternGenerator(identifierSign) {\r\n        return (source) =>\r\n            source.startsWith(identifierSign + \"[\") && source.endsWith(\")\")\r\n    }\r\n\r\n    static replaceContentGenerator(href, description) {\r\n        const downloadElCN = el(\"a\", \"从这里下载！\", { href })\r\n        const downloadElEN = el(\"a\", \"Download this!\", { href })\r\n        const replaceContent = `${description}<br>${downloadElCN}<br>${downloadElEN}`\r\n        return replaceContent\r\n    }\r\n\r\n    static srcUrlResolver(rawUrl) {\r\n        let actualUrl\r\n        if (rawUrl.startsWith(\"http\")) {\r\n            actualUrl = rawUrl\r\n        } else {\r\n            if (\"location\" in globalThis) {\r\n                // in browser\r\n                const hash = location.hash.slice(1)\r\n                // get the parent directory path\r\n                const currentPath = hash.split(\"/\").slice(0, -1).join(\"/\")\r\n                actualUrl = currentPath + \"/\" + rawUrl\r\n            } else {\r\n                // in nodejs\r\n                const path = globalThis.__ResourcePath__\r\n                actualUrl = path + \"/\" + rawUrl\r\n            }\r\n        }\r\n        return actualUrl\r\n    }\r\n}\r\n\r\nexport class ImageBlock extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"!\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const imageEl = el(\"img\", [], {\r\n            src: actualUrl,\r\n            alt: this.description,\r\n            loading: \"lazy\",\r\n            tabindex: 0,\r\n        })\r\n        return MediaNode.containerGenerator(imageEl)\r\n    }\r\n}\r\n\r\nexport class AudioBlock extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\":\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const audioEl = el(\"audio\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: true,\r\n        })\r\n        return MediaNode.containerGenerator(audioEl)\r\n    }\r\n}\r\n\r\nexport class VideoBlock extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"?\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const videoEl = el(\"video\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: \"true\",\r\n        })\r\n        return MediaNode.containerGenerator(videoEl)\r\n    }\r\n}\r\n\r\nexport const isIframePattern = (source) =>\r\n    MediaNode.patternGenerator(\"@\")(source)\r\n    || source.startsWith(\"@@@\")\r\n\r\nexport class IframeInline extends BaseNode {\r\n    tagName = \"iframe\"\r\n    static #heightSender = id => `\\\r\n<script>\r\nwindow.addEventListener(\"load\", (e) => {\r\n    const iframeRootEl = e.target.documentElement\r\n    const parent = window.parent\r\n    const height = parseFloat(getComputedStyle(iframeRootEl).height)\r\n    parent.postMessage({\r\n        height,\r\n        id: ${id}\r\n    }, \"*\")\r\n})\r\n</script>`\r\n\r\n    constructor(content, description) {\r\n        super()\r\n\r\n        this.id = Math.random()\r\n        this.content = content + IframeInline.#heightSender(this.id)\r\n        this.description = description\r\n    }\r\n\r\n    toHTML() {\r\n        const iframeEl = el(this.tagName, this.description, {\r\n            id: this.id,\r\n            title: this.description,\r\n            srcdoc: this.content,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\nexport class IframeBlock extends MediaNode {\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const iframeEl = el(\"iframe\", this.description, {\r\n            src: actualUrl,\r\n            title: this.description,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\n// --- --- --- ---\r\n// media nodes end\r\n// --- --- --- ---\r\n","import { CodeBlock } from \"../node.js\"\r\n\r\nexport default function(firstLine, lines) {\r\n    const lang = firstLine.slice(3)\r\n    let codeContent = \"\"\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l == \"```\") {\r\n            break\r\n        }\r\n\r\n        codeContent += l + \"\\n\"\r\n    }\r\n    return new CodeBlock(codeContent, lang)\r\n}","export default function(line) {\r\n    let indentCount = 0\r\n    let spaceCount = 0\r\n\r\n    for (const ch of line) {\r\n        if (ch.match(/[^\\s\\t]/)) {\r\n            break\r\n        }\r\n\r\n        if (ch == \"\\t\") {\r\n            indentCount += 1\r\n            continue\r\n        }\r\n        if (ch == \" \") {\r\n            spaceCount += 1\r\n        }\r\n        if (spaceCount == 2) {\r\n            spaceCount = 0\r\n            indentCount += 1\r\n        }\r\n    }\r\n    return indentCount\r\n}\r\n","import { List } from \"../node.js\"\r\nimport getIndent from \"../utils/getIndent.js\"\r\n\r\nexport default function listResolver(currentLine, lines) {\r\n    const currentIndent = getIndent(currentLine)\r\n    const currentNode = new List(currentLine)\r\n\r\n    while (lines.length && List.isListPattern(lines[0])) {\r\n        const nextLine = lines.shift()\r\n        const nextIndent = getIndent(nextLine)\r\n        const isNextOrdered = List.orderedPattern(nextLine)\r\n\r\n        if (nextIndent > currentIndent) {\r\n            currentNode.push(listResolver(nextLine, lines))\r\n        } else if (nextIndent == currentIndent && isNextOrdered == currentNode.isOrdered) {\r\n            currentNode.push(List.getContent(nextLine, isNextOrdered))\r\n        } else {\r\n            lines.unshift(nextLine)\r\n            break\r\n        }\r\n    }\r\n    return currentNode\r\n}","import mdResolver from \"../index.js\"\r\nimport { Quote } from \"../node.js\"\r\n\r\nexport default function(firstLine, lines) {\r\n    let quotedContent = firstLine.slice(2) + \"\\n\"\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (Quote.pattern(l)) {\r\n            quotedContent += l.slice(2) + \"\\n\"\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n    const children = mdResolver(quotedContent)\r\n    const node = new Quote(children)\r\n    return node\r\n}","import { TableBlock } from \"../node.js\"\r\n\r\n// input: \"| content | content |\"\"\r\n// output: [\"content\",\"content\"]\r\nfunction tableLineConverter(tableLine) {\r\n    const splited = tableLine.split(\"|\")\r\n    const result = splited\r\n        .filter(item => item.length > 0)\r\n        .map(item => item.trim())\r\n    return result\r\n}\r\n\r\nexport default function(firstLine, lines) {\r\n    const headerText = firstLine\r\n    const contentLines = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (TableBlock.pattern(l)) {\r\n            contentLines.push(l)\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n\r\n    const headerCells = tableLineConverter(headerText)\r\n    const contentRows = contentLines.map(tableLineConverter)\r\n    const tableNode = new TableBlock(headerCells, contentRows)\r\n    return tableNode\r\n}\r\n","import { FormulaBlock } from \"../node.js\"\r\n\r\nexport default function(_, lines) {\r\n    let formulaContent = \"\"\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l == \"$$$\") {\r\n            break\r\n        }\r\n\r\n        formulaContent += l + \"\\n\"\r\n    }\r\n    return new FormulaBlock(formulaContent)\r\n}\r\n","import { IframeBlock, IframeInline } from \"../node.js\"\r\n\r\nexport default function(firstLine, lines) {\r\n    if (!firstLine.startsWith(\"@@@\")) {\r\n        // link to out resource\r\n        return new IframeBlock(firstLine)\r\n    }\r\n\r\n    // inline HTML\r\n    const description = firstLine.slice(3)\r\n    let iframeContent = \"\"\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l == \"@@@\") {\r\n            break\r\n        }\r\n\r\n        iframeContent += l + \"\\n\"\r\n    }\r\n    return new IframeInline(iframeContent, description)\r\n}","import {\r\n    Headline, Quote, Divider,\r\n    List, CodeBlock, Para,\r\n    TableBlock, FormulaBlock,\r\n    ImageBlock, AudioBlock, VideoBlock, isIframePattern\r\n} from \"./node.js\"\r\nimport {\r\n    codeResolver,\r\n    listResolver,\r\n    quoteResolver,\r\n    tableResolver,\r\n    formulaResolver,\r\n    iframeResolver\r\n} from \"./resolvers/index.js\"\r\nimport getLines from \"./utils/getLines.js\"\r\n\r\nexport default function mdResolver(source) {\r\n    const lines = getLines(source)\r\n    const nodes = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l.length == 0) {\r\n            continue\r\n        }\r\n\r\n        if (Headline.pattern(l)) {\r\n            nodes.push(new Headline(l))\r\n        } else\r\n        if (Divider.pattern(l)) {\r\n            nodes.push(new Divider)\r\n        } else\r\n        if (Quote.pattern(l)) {\r\n            nodes.push(quoteResolver(l, lines))\r\n        } else\r\n        if (List.isListPattern(l)) {\r\n            nodes.push(listResolver(l, lines))\r\n        } else\r\n        if (CodeBlock.pattern(l)) {\r\n            nodes.push(codeResolver(l, lines))\r\n        } else \r\n        if (TableBlock.pattern(l)) {\r\n            nodes.push(tableResolver(l, lines))\r\n        } else\r\n        if (FormulaBlock.pattern(l)) {\r\n            nodes.push(formulaResolver(l, lines))\r\n        } else\r\n        if (ImageBlock.pattern(l)) {\r\n            nodes.push(new ImageBlock(l))\r\n        } else\r\n        if (AudioBlock.pattern(l)) {\r\n            nodes.push(new AudioBlock(l))\r\n        } else\r\n        if (VideoBlock.pattern(l)) {\r\n            nodes.push(new VideoBlock(l))\r\n        } else\r\n        if (isIframePattern(l)) {\r\n            nodes.push(iframeResolver(l, lines))\r\n        } else {\r\n            nodes.push(new Para(l))\r\n        }\r\n    }\r\n    return nodes\r\n}","export default function(source) {\r\n    if (source.indexOf(\"\\r\") != -1) {\r\n        return source.split(\"\\r\\n\")\r\n    } else {\r\n        return source.split(\"\\n\")\r\n    }\r\n}","let hljs  = null\r\nlet katex = null\r\n\r\nexport async function importHighlighter() {\r\n    function importLangDefs() {\r\n        // dynamically import language definitions\r\n        const languageListArr = Array.from(globalThis.__LanguageList__)\r\n        const langDefImporters = languageListArr\r\n            .filter(name => !hljs.getLanguage(name))\r\n            .map(lang => import(`../libs/highlight-es/languages/${lang.toLowerCase()}.js`))\r\n\r\n        Promise.all(langDefImporters)\r\n            .then(langDefs => langDefs.forEach((defModule, index) => {\r\n                const name = languageListArr[index]\r\n                const def  = defModule.default\r\n                hljs.registerLanguage(name, def)\r\n            }))\r\n            .then(() => hljs.highlightAll())\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    if (globalThis.__LanguageList__.size == 0) {\r\n        // no code blocks\r\n        return\r\n    }\r\n\r\n    if (hljs) {\r\n        importLangDefs()\r\n        return\r\n    }\r\n\r\n    // import highlight.js itself\r\n    await import(\"../libs/highlight-es/highlight.js\")\r\n        .then(module => hljs = module.default)\r\n        .then(importLangDefs)\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport async function importTexRenderer() {\r\n    function renderFormula() {\r\n        // render all formula element\r\n        document.querySelectorAll(\".math\")\r\n            .forEach(el => katex.render(el.textContent, el))\r\n    }\r\n\r\n    if (!globalThis.__ContainsFormula__) {\r\n        return\r\n    }\r\n    if (katex) {\r\n        renderFormula()\r\n        return\r\n    }\r\n\r\n    const tasks = [import(\"../libs/katex/katex.js\"), fetch(\"dist/katex.min.css\")]\r\n    await Promise.all(tasks)\r\n        .then(([module, cssRes]) => {\r\n            // set katex js module & render\r\n            katex = module.default\r\n            renderFormula()\r\n            return cssRes.text()\r\n        })\r\n        .then(cssText => {\r\n            // set katex css\r\n            const style = document.createElement(\"style\")\r\n            style.textContent = cssText\r\n            document.head.appendChild(style)\r\n        })\r\n        .catch(err => console.error(err))\r\n}","import keydownEvent from \"./keydownEvent.js\"\r\nimport { importHighlighter, importTexRenderer } from \"./importer.js\"\r\nimport el from \"./markdown/utils/el.js\"\r\n\r\nconst articleEl    = document.querySelector(\"article\")\r\nconst mainEl       = document.querySelector(\"main\")\r\nconst parentDirBtn = mainEl.querySelector(\"#previous-dir li\")\r\nconst articleList  = mainEl.querySelector(\"#article-list\")\r\n\r\n// ----------------\r\n// article renderer\r\n// ----------------\r\n\r\narticleEl.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n    if (target.tagName == \"IMG\") {\r\n        window.open(target.src)\r\n    }\r\n})\r\n\r\nexport function mdRender(structure) {\r\n    // language names to import\r\n    globalThis.__LanguageList__ = new Set()\r\n    // to deside whether to import `katex`\r\n    globalThis.__ContainsFormula__ = false\r\n\r\n    let resultHTML = structure\r\n        .map(node => node.toHTML())\r\n    if (!resultHTML.length) {\r\n        resultHTML = el(\"h1\", \"404 Not Found\")\r\n    }\r\n    articleEl.innerHTML = \"\"\r\n    resultHTML.forEach(el => articleEl.appendChild(el))\r\n\r\n    mainEl.style.display = \"none\"\r\n    articleEl.style.display = \"block\"\r\n    articleEl.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n    // return to the top\r\n    document.body.scrollTop = 0\r\n    document.documentElement.scrollTop = 0\r\n\r\n    importHighlighter().then(() => globalThis.__LanguageList__ = null)\r\n    importTexRenderer().then(() => globalThis.__ContainsFormula__ = false)\r\n}\r\n\r\n// --------------\r\n// index renderer\r\n// --------------\r\n\r\nparentDirBtn.addEventListener(\"click\", () => {\r\n    const splited = location.hash.split(\"/\")\r\n    globalThis.__CurrentPage__ = 1\r\n    location.hash = splited.slice(0, -2).join(\"/\") + \"/\"\r\n})\r\narticleList.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n\r\n    if (!target.getAttribute(\"data-target-blog\")) {\r\n        if (target.innerText.endsWith(\"/\")) {\r\n            globalThis.__CurrentPage__ = 1\r\n        }\r\n        location.hash += target.innerText\r\n    } else {\r\n        globalThis.__CurrentPage__ = 1\r\n        location.hash = target.getAttribute(\"data-target-blog\")\r\n    }\r\n})\r\n\r\nexport function indexRender(indexing, itemResolver) {\r\n    // calculate properties\r\n    const {current, total} = indexing\r\n    let isFirstPage = false\r\n    let isLastPage = false\r\n    let isOnlyPage = false\r\n    if (total == 1) {\r\n        isOnlyPage = true\r\n    } else {\r\n        if (current == 1) {\r\n            isFirstPage = true\r\n        }\r\n        if (current == total) {\r\n            isLastPage = true\r\n        }\r\n    }\r\n    mainEl.setAttribute(\"data-is-first-page\", isFirstPage)\r\n    mainEl.setAttribute(\"data-is-last-page\", isLastPage)\r\n    mainEl.setAttribute(\"data-is-only-page\", isOnlyPage)\r\n\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    // reset HTML content\r\n    articleList.innerHTML = \"\"\r\n    indexing.content\r\n        .map(itemResolver)\r\n        .forEach(el =>\r\n            articleList.appendChild(el)\r\n        )\r\n\r\n    // set keyboard event\r\n    articleList.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    articleEl.style.display = \"none\"\r\n    mainEl.style.display = \"block\"\r\n}","import \"./styles/style.css\"\r\nimport \"./libs/katex/katex.css\"\r\n\r\nimport { fetchJSON, fetchMD } from \"./utils/fetchResources.js\"\r\nimport keydownEvent from \"./utils/keydownEvent.js\"\r\nimport mdResolver from \"./utils/markdown/index.js\"\r\nimport el from \"./utils/markdown/utils/el.js\"\r\nimport { mdRender, indexRender } from \"./utils/render.js\"\r\n\r\nglobalThis.__CurrentPage__ = 1\r\nconst indexDirPath = \"./.index/\"\r\n\r\n// ---------------------------\r\n// Buttons event setting start\r\n// ---------------------------\r\n\r\nconst lightBtn = document.querySelector(\"#light-btn\")\r\nconst darkBtn = document.querySelector(\"#dark-btn\")\r\nconst previousBtn = document.querySelector(\"button#previous\")\r\nconst nextBtn = document.querySelector(\"button#next\")\r\n\r\nlightBtn.onkeydown = keydownEvent(lightBtn)\r\ndarkBtn.onkeydown = keydownEvent(darkBtn)\r\npreviousBtn.addEventListener(\"click\", () => {\r\n    if (globalThis.__CurrentPage__ > 0) {\r\n        globalThis.__CurrentPage__ -= 1\r\n        hashEvent()\r\n    }\r\n})\r\nnextBtn.addEventListener(\"click\", () => {\r\n    globalThis.__CurrentPage__ += 1\r\n    hashEvent()\r\n})\r\n\r\n// -------------------------\r\n// Buttons event setting end\r\n// -------------------------\r\n\r\n\r\n// ---------------------\r\n// Hash controller start\r\n// ---------------------\r\n\r\nconst mainEl = document.querySelector(\"main\")\r\nconst articleList = document.getElementById(\"article-list\")\r\n\r\nasync function hashEvent() {\r\n    if (!location.hash) {\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    const hash = location.hash.slice(1) // remove '#'\r\n    articleList.classList.add(\"disabled\")\r\n\r\n    if (hash == \"newest/\") {\r\n        // open newest page\r\n        const newestIndex = await fetchJSON(indexDirPath + \"newest_\" + globalThis.__CurrentPage__)\r\n        indexRender(newestIndex, item => {\r\n            const dateEl  = el(\"code\", item.date)\r\n            const titleEl = el(\"span\", item.title)\r\n            return el(\"li\",\r\n                [dateEl, el(\"text\", \": \"), titleEl],\r\n                {\r\n                    tabindex: 0,\r\n                    \"data-target-blog\": item.link\r\n                }\r\n            )\r\n        })\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\"/\")) {\r\n        // open folder\r\n        const splited = hash.split(\"/\").slice(0, -1)\r\n        const indexFilePath = indexDirPath + splited.join(\"+\") + \"_\" + globalThis.__CurrentPage__\r\n        const index = await fetchJSON(indexFilePath)\r\n        indexRender(index, item =>\r\n            el(\"li\", el(\"span\", item), {\r\n                tabindex: 0\r\n            })\r\n        )\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\".md\")) {\r\n        // open article\r\n        const articleContent = await fetchMD(\"./\" + hash)\r\n        const structure = mdResolver(articleContent)\r\n        mdRender(structure)\r\n    } else {\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    // delay this operation\r\n    mainEl.setAttribute(\"data-is-root\", hash == \"static/\")\r\n    articleList.classList.remove(\"disabled\")\r\n}\r\n\r\nwindow.onload = hashEvent\r\nwindow.addEventListener(\"hashchange\", hashEvent)\r\nwindow.addEventListener(\"message\", (e) => {\r\n    if (e.origin != \"null\") {\r\n        return\r\n    }\r\n    const { id, height } = e.data\r\n    const targetIframeEl = document.getElementById(id)\r\n    targetIframeEl.style.height = height + \"px\"\r\n}, false)\r\n\r\n// -------------------\r\n// Hash controller end\r\n// -------------------"],"names":["async","fetchJSON","path","fetch","then","res","json","catch","err","console","log","error","keydownEvent","el","e","key","click","tagName","content","props","globalThis","document","createTextNode","targetEl","createElement","val","Object","entries","setAttribute","propSetter","Array","childEl","appendChild","HTMLElement","Error","textContent","contentSetter","propToString","resultStrArr","push","toString","join","keyTermArray","KeyToken_TagName_map","Map","Token","constructor","type","this","static","Symbol","LinkToken","address","super","link","toHTML","startsWith","href","target","actualAddress","getInterval","text","endSign","intervalText","isEscape","length","ch","slice","substr","inlineResolver","rawText","resultHTML","tokens","identifier","tagContent","token","get","includes","realTagName","className","split","__ContainsFormula__","class","convert","textTerm","keyTerm","linkDisplay","linkSelf","tokenize","BaseNode","inline","Headline","splited","numberSignStr","numberSignCount","source","match","Para","trimStart","Quote","children","innerHTML","map","node","Divider","List","isOrdered","Boolean","orderedPattern","getContent","child","childrenHTML","unorderedPattern","line","TableBlock","headerCells","bodyRows","tableHeaderCell","tableBodyCell","tableHeaderRow","row","tableBodyRow","tableHeader","tableBody","CodeBlock","lang","window","replaceAll","append","__LanguageList__","add","codeEl","toUpperCase","FormulaBlock","MediaNode","description","mdText","containerGenerator","patternGenerator","identifierSign","endsWith","replaceContentGenerator","srcUrlResolver","rawUrl","actualUrl","location","hash","__ResourcePath__","ImageBlock","imageEl","src","alt","loading","tabindex","AudioBlock","audioEl","controls","VideoBlock","videoEl","isIframePattern","IframeInline","id","Math","random","heightSender","iframeEl","title","srcdoc","sandbox","IframeBlock","codeResolver","firstLine","lines","codeContent","l","shift","getIndent","indentCount","spaceCount","listResolver","currentLine","currentIndent","currentNode","isListPattern","nextLine","nextIndent","isNextOrdered","unshift","quoteResolver","quotedContent","pattern","mdResolver","tableLineConverter","tableLine","filter","item","trim","tableResolver","headerText","contentLines","contentRows","formulaResolver","_","formulaContent","iframeResolver","iframeContent","indexOf","getLines","nodes","hljs","katex","importHighlighter","importLangDefs","languageListArr","from","langDefImporters","name","getLanguage","__variableDynamicImportRuntime0__","toLowerCase","Promise","all","langDefs","forEach","defModule","index","def","default","registerLanguage","highlightAll","size","import","module","articleEl","querySelector","mainEl","parentDirBtn","articleList","mdRender","structure","Set","style","display","querySelectorAll","onkeydown","body","scrollTop","documentElement","renderFormula","render","tasks","cssRes","cssText","head","importTexRenderer","indexRender","indexing","itemResolver","current","total","isFirstPage","isLastPage","isOnlyPage","addEventListener","open","__CurrentPage__","getAttribute","innerText","indexDirPath","lightBtn","darkBtn","previousBtn","nextBtn","hashEvent","getElementById","classList","dateEl","date","titleEl","indexFilePath","status","reader","getReader","decoder","TextDecoder","totalData","processor","result","done","decode","value","stream","read","fetchMD","remove","onload","origin","height","data"],"mappings":"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"}