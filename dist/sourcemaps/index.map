{"version":3,"file":"index.min.js","sources":["../src/utils/fetchResources.js","../src/utils/keydownEvent.js","../src/utils/markdown/utils/el.js","../build.config.js","../src/utils/importer.js","../src/utils/markdown/utils/getInterval.js","../src/utils/markdown/inline.js","../src/utils/markdown/node.js","../src/utils/markdown/utils/getIndent.js","../src/utils/markdown/resolvers/listResolver.js","../src/utils/markdown/resolvers/quoteResolver.js","../src/utils/markdown/resolvers/tableResolver.js","../src/utils/markdown/resolvers/blockResolvers.js","../src/utils/markdown/index.js","../src/utils/markdown/utils/getLines.js","../src/utils/render.js","../src/index.js"],"sourcesContent":["export async function fetchJSON(path) {\r\n    return await fetch(path)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            console.log(\"JSON request error: \" + path)\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport async function fetchMD(path) {\r\n    return await fetch(path)\r\n        .then(res => {\r\n            if (res.status != 200) {\r\n                throw res.status\r\n            }\r\n            return res.text()\r\n        })\r\n        .catch(err => {\r\n            switch (err) {\r\n                // render error code in markdown format\r\n                case 404:\r\n                    return \"# 404 Not Found\"\r\n                case 500:\r\n                    return \"# 500 Internal Server Error\"\r\n                default:\r\n                    console.log(\"Markdown request error: \" + path)\r\n                    console.error(err)\r\n                    return \"# Unexpected request error\"\r\n            }\r\n        })\r\n}\r\n","export default function(el) {\r\n    return function(e) {\r\n        if (e.key == \"Enter\" || e.key == \" \") {\r\n            el.click()\r\n        }\r\n    }\r\n}\r\n","function propSetter(el, props) {\r\n    if (!props) {\r\n        return\r\n    }\r\n    for (const [key, val] of Object.entries(props)) {\r\n        if (val == undefined) {\r\n            continue\r\n        }\r\n        el.setAttribute(key, val)\r\n    }\r\n}\r\n\r\nfunction propToString(props) {\r\n    // input: {prop: \"value\"}\r\n    // output: \"prop='value'\"\r\n    const htmlValueFormater = val => val.toString().replaceAll(\"\\\"\", \"&quot;\") \r\n    const resultPropStr = Object.entries(props)\r\n        .filter(([_, val]) => val != undefined)\r\n        .map(([key, val]) => `${key}=\"${htmlValueFormater(val)}\"`)\r\n        .join(\" \")\r\n    return resultPropStr\r\n}\r\n\r\nfunction contentSetter(el, content) {\r\n    if (content instanceof Array) {\r\n        // array of html element\r\n        for (const childEl of content) {\r\n            el.appendChild(childEl)\r\n        }\r\n    } else if (content instanceof HTMLElement) {\r\n        // single element\r\n        el.appendChild(content)\r\n    } else if (typeof content == \"string\") {\r\n        // common text\r\n        el.textContent = content\r\n    } else {\r\n        throw Error(\"Unexpected element content: \" + content)\r\n    }\r\n}\r\n\r\nexport default function el(tagName, content, props=null) {\r\n    if (\"document\" in globalThis) {\r\n        // in browser\r\n        if (tagName == \"text\") {\r\n            return document.createTextNode(content)\r\n        }\r\n\r\n        const targetEl = document.createElement(tagName)\r\n        propSetter(targetEl, props)\r\n        contentSetter(targetEl, content)\r\n        return targetEl\r\n    } else {\r\n        // in node.js\r\n        if (content instanceof Array) {\r\n            content = content.join(\"\")\r\n        }\r\n        switch (tagName) {\r\n            case \"text\":\r\n                return content\r\n            case \"hr\":\r\n                return \"<hr>\"\r\n            case \"img\":\r\n                return `<img ${props ? propToString(props) : \"\"}>`\r\n        }\r\n        return `<${tagName}${props ? \" \" + propToString(props) : \"\"}>${content}</${tagName}>`\r\n    }\r\n}\r\n","export default {\r\n    /**\r\n     * homepage: String\r\n     * the URL that this site deployed, is used to generate the rss.xml file\r\n     * 此站点部署的 URL，用于生成 rss.xml 文件\r\n     */\r\n    homepage: \"https://bhznjns.github.io/markdown-blog/\",\r\n\r\n    /**\r\n     * footer: String\r\n     * the footer for this site, can be deleted if you do not need it\r\n     * 站点的脚注，如果你不需要可以删除\r\n     */\r\n    footer: `Powerd by <a href='https://github.com/BHznJNs/markdown-blog'>MarkdownBlog</a>`,\r\n\r\n    /**\r\n     * language: String\r\n     * \"zh\" => Simplified Chinese 简体中文\r\n     * \"en\" => English            英文\r\n     */\r\n    language: \"zh\",\r\n\r\n    /**\r\n     * enableRSS: Boolean | Object<value: Boolean, ignoreDir: [String]>\r\n     * used to enable / disable the RSS function, if you do not want add blogs in some directory to the `rss.xml` , just add it into the `ignoreDir`\r\n     * 用来启用/禁用 RSS 发布功能，如果你不想将某些文件夹的内容添加到 `rss.xml` 中，将其添加到 `ignoreDir` 中\r\n     */\r\n    enableRSS: {\r\n        value: true,\r\n        ignoreDir: [\r\n            // directories in `static`\r\n            \"学习笔记/\"\r\n        ]\r\n    },\r\n\r\n    /**\r\n     * enableNewest: Boolean | Object<value: Boolean, ignoreDir: [String]>\r\n     * used to enable / disable the Newest function, if you do not want add blogs in some directory, just add it into the `ignoreDir`\r\n     * 用来启用/禁用 最新博文 功能，如果你不想将某些文件夹的内容添加到其中，将其添加到 `ignoreDir` 中\r\n     */\r\n    enableNewest: {\r\n        value: true,\r\n        ignoreDir: []\r\n    },\r\n\r\n    /**\r\n     * pageCapacity: Number\r\n     * defined the amount of the items in every page\r\n     * 定义每一页展示的博文数\r\n     */\r\n    pageCapacity: 10,\r\n\r\n    /**\r\n     * RSSCapacity: Number\r\n     * defined the amount of the items in `rss.xml`\r\n     * 定义 `rss.xml` 中包含的博文个数\r\n     */\r\n    RSSCapacity: 16,\r\n\r\n    /**\r\n     * previewPort: Number\r\n     * defined the port id for preview server\r\n     * 为预览服务器定义端口\r\n     */\r\n    previewPort: 3000,\r\n\r\n    /**\r\n     * katexOptions: Object\r\n     * options for katex.js rendering, see here: https://katex.org/docs/options\r\n     * katex.js 用于渲染数学公式的配置项，见此：https://katex.org/docs/options\r\n     */\r\n    katexOptions: null\r\n}\r\n","import config from \"../../build.config.js\"\r\n\r\nconst { katexOptions } = config\r\n\r\nlet hljs  = null\r\nlet katex = null\r\n\r\nexport async function importHighlighter() {\r\n    function importLangDefs() {\r\n        // dynamically import language definitions\r\n        const languageListArr = Array.from(globalThis.__LanguageList__)\r\n        const langDefImporters = languageListArr\r\n            .filter(name => !hljs.getLanguage(name))\r\n            .map(lang => import(`../libs/highlight-es/languages/${lang.toLowerCase()}.js`))\r\n\r\n        Promise.all(langDefImporters)\r\n            .then(langDefs => langDefs.forEach((defModule, index) => {\r\n                const name = languageListArr[index]\r\n                const def  = defModule.default\r\n                hljs.registerLanguage(name, def)\r\n            }))\r\n            .then(() => hljs.highlightAll())\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    if (globalThis.__LanguageList__.size == 0) {\r\n        // no code blocks\r\n        return\r\n    }\r\n    if (hljs) {\r\n        importLangDefs()\r\n        return\r\n    }\r\n\r\n    // import highlight.js itself\r\n    await import(\"../libs/highlight-es/highlight.js\")\r\n        .then(module => hljs = module.default)\r\n        .then(importLangDefs)\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport async function importTexRenderer() {\r\n    function renderFormula() {\r\n        // render all formula element\r\n        document.querySelectorAll(\".math\")\r\n            .forEach(el => katex.render(el.textContent, el, katexOptions))\r\n    }\r\n\r\n    if (!globalThis.__ContainsFormula__) {\r\n        // no formula\r\n        return\r\n    }\r\n    if (katex) {\r\n        renderFormula()\r\n        return\r\n    }\r\n\r\n    const tasks = [import(\"../libs/katex/katex.js\"), fetch(\"dist/katex.min.css\")]\r\n    await Promise.all(tasks)\r\n        .then(([module, cssRes]) => {\r\n            // set katex js module & render\r\n            katex = module.default\r\n            renderFormula()\r\n            return cssRes.text()\r\n        })\r\n        .then(cssText => {\r\n            // set katex css\r\n            const style = document.createElement(\"style\")\r\n            style.textContent = cssText\r\n            document.head.appendChild(style)\r\n        })\r\n        .catch(err => console.error(err))\r\n}","// (\"abc]\", \"]\") -> \"abc\"\r\nexport default function getInterval(text, endSign) {\r\n    if (!text.includes(endSign)) {\r\n        return null\r\n    }\r\n\r\n    let intervalText = \"\"\r\n    let isEscape = false\r\n\r\n    while (text.length) {\r\n        const ch = text.slice(0, 1)\r\n        text = text.substr(1)\r\n\r\n        if (ch == \"\\\\\") {\r\n            isEscape = !isEscape\r\n            continue\r\n        }\r\n        if (ch == endSign && !isEscape) {\r\n            break\r\n        }\r\n        intervalText += ch\r\n        isEscape = false\r\n    }\r\n\r\n    return intervalText\r\n}\r\n","import el from \"./utils/el.js\"\r\nimport getInterval from \"./utils/getInterval.js\"\r\n\r\n// identifier character to HTML tag\r\nconst KeyToken_TagName_map = new Map([\r\n    [\"#\", \"strong\"],\r\n    [\"`\", \"code\"],\r\n    [\"_\", \"u\"],\r\n    [\"/\", \"i\"],\r\n    [\"-\", \"del\"],\r\n    [\":\", \"span.dim\"],\r\n    [\",\", \"sub\"],\r\n    [\"'\", \"sup\"],\r\n    [\"$\", \"span.math\"],\r\n])\r\n\r\nconst PairedParenMap = new Map([\r\n    [\"[\", \"]\"],\r\n    [\"{\", \"}\"],\r\n])\r\n\r\n// --- --- --- --- --- ---\r\n\r\nclass TextToken {\r\n    constructor(content) {\r\n        this.content = content\r\n    }\r\n    toHTML = () => el(\"text\", this.content)\r\n}\r\nclass KeyToken {\r\n    constructor(tagSign, content) {\r\n        const tag = KeyToken_TagName_map.get(tagSign)\r\n        if (tag.includes(\".\")) {\r\n            const [realTagName, className] = tag.split(\".\")\r\n            this.tagName = realTagName\r\n            this.className = className\r\n        } else {\r\n            this.tagName = tag\r\n        }\r\n        this.content = content\r\n\r\n        if (this.className == \"math\") {\r\n            // set this global variable to import\r\n            // the math formula renderer module\r\n            globalThis.__ContainsFormula__ = true\r\n        }\r\n    }\r\n\r\n    toHTML() {\r\n        const elOption = this.className == undefined ? null : {\"class\": this.className}\r\n        const thisEl = el(this.tagName, parser(this.content), elOption)\r\n        return thisEl\r\n    }\r\n}\r\n\r\nclass LinkToken {\r\n    constructor(content, address) {\r\n        this.content = content\r\n        this.address = address\r\n    }\r\n\r\n    toHTML() {\r\n        const displayContent = parser(this.content)\r\n        if (this.address.startsWith(\"http\")) {\r\n            // internet links\r\n            return el(\"a\", displayContent, {\r\n                href: this.address,\r\n                target: \"_blank\"\r\n            })\r\n        }\r\n\r\n        // static resources or links\r\n        const actualAddress = \"static/\" + this.address\r\n        return el(\"a\", displayContent, {\r\n            href: \"#\" + actualAddress\r\n        })\r\n    }\r\n}\r\nclass PhoneticToken {\r\n    constructor(content, notation) {\r\n        this.content  = content\r\n        this.notation = notation\r\n    }\r\n    toHTML() {\r\n        const ignoredLeftParenthesis = el(\"rp\", \"(\")\r\n        const ignoredRightParenthesis = el(\"rp\", \")\")\r\n        const notationEl = el(\"rt\", this.notation)\r\n\r\n        const content = parser(this.content).concat([\r\n            ignoredLeftParenthesis,\r\n            notationEl,\r\n            ignoredRightParenthesis,\r\n        ])\r\n        return el(\"ruby\", content, {\r\n            \"data-notation\": this.notation\r\n        })\r\n    }\r\n}\r\n\r\n// --- --- --- --- --- ---\r\n\r\nexport default function parser(source) {\r\n    function getFirstChar() {\r\n        const ch = source.charAt(0)\r\n        source = source.substring(1)\r\n        return ch\r\n    }\r\n    function getSpecialTokenClass(tokenSign) {\r\n        let targetTokenType\r\n        if (tokenSign == \"[\") {\r\n            targetTokenType = LinkToken\r\n        } else if (tokenSign == \"{\") {\r\n            targetTokenType = PhoneticToken\r\n        } else { /* unreachable */ }\r\n        return targetTokenType\r\n    }\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    const tokens = []\r\n    let textTerm = \"\" // text\r\n    let keyTerm  = \"\" // inline style content\r\n    let keyStart = \"\"\r\n    let isEscape = false\r\n    let isInKey  = false\r\n\r\n    while (source.length) {\r\n        const ch = getFirstChar()\r\n\r\n        // key rules resolve\r\n        if (KeyToken_TagName_map.has(ch)) {\r\n            if (isEscape) {\r\n                if (isInKey) {\r\n                    keyTerm += ch\r\n                } else {\r\n                    textTerm += ch\r\n                }\r\n                continue\r\n            }\r\n\r\n            if (isInKey && ch != keyStart) {\r\n                keyTerm += ch\r\n                continue\r\n            }\r\n\r\n            const nextCh = getFirstChar()\r\n            if (nextCh != ch) {\r\n                textTerm += ch\r\n                source = nextCh + source\r\n                continue\r\n            }\r\n\r\n            if (isInKey) {\r\n                tokens.push(new KeyToken(ch, keyTerm))\r\n                keyTerm  = \"\"\r\n                keyStart = \"\"\r\n            } else {\r\n                tokens.push(new TextToken(textTerm))\r\n                textTerm = \"\"\r\n                keyStart = ch\r\n            }\r\n            isInKey = !isInKey\r\n            continue\r\n        }\r\n\r\n        // special inline rules resolve\r\n        if ([\"[\", \"{\"].includes(ch) && !isInKey && !isEscape) {\r\n            const specialTokenSign = ch\r\n            const pairedTokenSign = PairedParenMap.get(specialTokenSign)\r\n\r\n            tokens.push(new TextToken(textTerm))\r\n            textTerm = \"\"\r\n\r\n            let removedContent = specialTokenSign\r\n            // the actual displayed content for special inline elements\r\n            const displayContent = getInterval(source, pairedTokenSign)\r\n            if (displayContent != null) {\r\n                removedContent += source.slice(0, displayContent.length + 1)\r\n                source = source.substr(displayContent.length + 1)\r\n\r\n                const nextCh = getFirstChar()\r\n                removedContent += nextCh\r\n                if (nextCh == \"(\") {\r\n                    // the hidden displayed content for special inline elements\r\n                    const hiddenContent = getInterval(source, \")\")\r\n                    if (hiddenContent != null) {\r\n                        let targetTokenType = getSpecialTokenClass(specialTokenSign)\r\n                        source = source.substr(hiddenContent.length + 1)\r\n                        tokens.push(new targetTokenType(displayContent, hiddenContent))\r\n                        continue\r\n                    }\r\n                }\r\n            }\r\n            textTerm += removedContent\r\n            continue\r\n        }\r\n\r\n        // --- --- --- --- --- ---\r\n\r\n        if (ch == \"\\\\\") {\r\n            isEscape = !isEscape\r\n            continue\r\n        }\r\n\r\n        let text\r\n        if (isEscape) {\r\n            text = \"\\\\\" + ch\r\n            isEscape = false\r\n        } else {\r\n            text = ch\r\n        }\r\n\r\n        if (isInKey) {\r\n            keyTerm += text\r\n        } else {\r\n            textTerm += text\r\n        }\r\n    }\r\n\r\n    if (keyTerm.length) {\r\n        tokens.push(new KeyToken(keyStart, keyTerm))\r\n    }\r\n    if (textTerm.length) {\r\n        tokens.push(new TextToken(textTerm))\r\n    }\r\n    return tokens\r\n        .filter(token =>\r\n            !(token instanceof TextToken && !token.content.length))\r\n        .map(token => token.toHTML())\r\n}\r\n\r\n// test cases\r\n// console.log(parser(\"##bo//itelic//ld##\"))\r\n// console.log(parser(\"##bo[link text](http://www.com)ld##\"))\r\n// console.log(parser(\"asd[asd\"))\r\n// console.log(parser(\"asd[asd]asd\"))\r\n// console.log(parser(\"asd[asd](asd\"))\r\n// console.log(parser(\"asd[asd](asd)\"))\r\n// console.log(parser(\"asd[##link##](asd)\"))\r\n// console.log(parser(\"##asd[link##](asd)\"))\r\n// console.log(parser(\"##asd[link](asd)##\"))\r\n// console.log(parser(\"::dimmed::\"))\r\n// console.log(parser(\"$$f_c = \\\\frac{1}{abc}$$\"))\r\n","import config from \"../../../build.config.js\"\r\nimport mdResolver from \"./index.js\"\r\nimport inlineResolver from \"./inline.js\"\r\nimport getInterval from \"./utils/getInterval.js\"\r\nimport el from \"./utils/el.js\"\r\n\r\nconst { language } = config\r\n\r\nclass BaseNode {\r\n    tagName = \"\"\r\n    content = \"\"\r\n\r\n    toHTML() {\r\n        const inline = inlineResolver(this.content)\r\n        return el(this.tagName, inline)\r\n    }\r\n}\r\n\r\nexport class Headline extends BaseNode {\r\n    constructor(content) {\r\n        super()\r\n\r\n        // \"### test\" -> \"###\"\r\n        const splited = content.split(\" \")\r\n        const numberSignStr = splited[0]\r\n        let numberSignCount = 0\r\n        for (const ch of numberSignStr) {\r\n            if (ch == '#') {\r\n                numberSignCount += 1\r\n            }\r\n        }\r\n\r\n        if (numberSignCount > 6) {\r\n            numberSignCount = 0\r\n        }\r\n\r\n        this.tagName = \"h\" + numberSignCount\r\n        this.content = splited.slice(1).join(\" \")\r\n    }\r\n\r\n    static pattern = source => source.match(/^(#+ )/)\r\n}\r\n\r\nexport class Para extends BaseNode {\r\n    tagName = \"p\"\r\n\r\n    constructor(content) {\r\n        super()\r\n        this.content = content.trimStart()\r\n    }\r\n}\r\n\r\nexport class Quote extends BaseNode {\r\n    tagName = \"blockquote\"\r\n    children = []\r\n\r\n    constructor(children) {\r\n        super()\r\n        this.children = children\r\n    }\r\n    toHTML() {\r\n        const innerNodes = this.children\r\n            .map(node => node.toHTML())\r\n        return el(this.tagName, innerNodes)\r\n    }\r\n\r\n    static pattern = source =>\r\n        (source == \">\") || source.startsWith(\"> \")\r\n}\r\n\r\nexport class Divider extends BaseNode {\r\n    toHTML = () => el(\"hr\", [])\r\n    static pattern = source =>\r\n        source.match(/(-\\s*-\\s*-)|(\\*\\s*\\*\\s*\\*)/) && !source.match(/[a-zA-Z0-9]/)\r\n}\r\n\r\nexport class List extends BaseNode {\r\n    children = []\r\n\r\n    constructor(content) {\r\n        super()\r\n\r\n        this.isOrdered = Boolean(List.orderedPattern(content))\r\n        this.tagName   = (this.isOrdered) ? \"ol\" : \"ul\"\r\n        this.children  = [List.getContent(content, this.isOrdered)]\r\n    }\r\n\r\n    push = child => this.children.push(child)\r\n\r\n    toHTML() {\r\n        const childrenHTML = []\r\n        for (const child of this.children) {\r\n            if (typeof child == \"string\") {\r\n                const inline = inlineResolver(child)\r\n                childrenHTML.push(el(\"li\", inline))\r\n            } else {\r\n                childrenHTML.push(child.toHTML())\r\n            }\r\n        }\r\n        return el(this.tagName, childrenHTML)\r\n    }\r\n\r\n    static unorderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[+-]+ )/))\r\n    static orderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[0-9]+. )/))\r\n\r\n    static isListPattern = (source) =>\r\n        List.orderedPattern(source) || List.unorderedPattern(source)\r\n\r\n    static getContent(line, isOrdered) {\r\n        if (isOrdered) {\r\n            // \"1. ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[0-9]+. )).+$/g)[0]\r\n        } else {\r\n            // \"- ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[+-]+ )).+$/g)[0]\r\n        }\r\n    }\r\n}\r\n\r\nexport class Table extends BaseNode {\r\n    headerCells = [\"\"]   // [string]\r\n    bodyRows    = [[\"\"]] // [[string]]\r\n\r\n    constructor(headerCells, bodyRows) {\r\n        super()\r\n\r\n        this.headerCells = headerCells\r\n        this.bodyRows    = bodyRows\r\n    }\r\n\r\n    #tableHeaderCell = content => el(\"th\", content)\r\n    #tableBodyCell   = content => el(\"td\", inlineResolver(content))\r\n    #tableHeaderRow  = row => el(\"tr\", row.map(this.#tableHeaderCell))\r\n    #tableBodyRow    = row => el(\"tr\", row.map(this.#tableBodyCell))\r\n\r\n    toHTML() {\r\n        const tableHeader = el(\r\n            \"thead\",\r\n            this.#tableHeaderRow(this.headerCells)\r\n        )\r\n        const tableBody = el(\r\n            \"tbody\",\r\n            this.bodyRows\r\n                .map(this.#tableBodyRow)\r\n        )\r\n        return el(\"div\", el(\"table\", [tableHeader, tableBody]), {\r\n            \"class\": \"table\"\r\n        })\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"| \")\r\n}\r\n\r\n// --- --- --- --- -\r\n// media nodes start\r\n// --- --- --- --- -\r\n\r\nclass MediaNode extends BaseNode {\r\n    source = \"\"\r\n    description = \"\"    \r\n    constructor(mdText) {\r\n        super()\r\n\r\n        mdText = mdText.substr(2)\r\n        this.description = getInterval(mdText, \"]\")\r\n        mdText = mdText.substr(this.description.length + 2)\r\n        this.source = getInterval(mdText, \")\")\r\n    }\r\n\r\n    static containerGenerator(content) {\r\n        return el(\"div\", content, {\r\n            \"class\": \"media-container\"\r\n        })\r\n    }\r\n\r\n    static patternGenerator(identifierSign) {\r\n        return (source) =>\r\n            source.startsWith(identifierSign + \"[\") && source.endsWith(\")\")\r\n    }\r\n\r\n    static replaceContentGenerator(href, description) {\r\n        let downloadEl\r\n        if (language == \"cn\") {\r\n            downloadEl = el(\"a\", \"从这里下载！\", { href })\r\n        } else if (language == \"en\") {\r\n            downloadEl = el(\"a\", \"Download this!\", { href })\r\n        }\r\n        const replaceContent = `${description}<br>${downloadEl}`\r\n        return replaceContent\r\n    }\r\n\r\n    static srcUrlResolver(rawUrl) {\r\n        let actualUrl\r\n        if (rawUrl.startsWith(\"http\")) {\r\n            actualUrl = rawUrl\r\n        } else {\r\n            if (\"location\" in globalThis) {\r\n                // in browser\r\n                const hash = location.hash.slice(1)\r\n                // get the parent directory path\r\n                const currentPath = hash.split(\"/\").slice(0, -1).join(\"/\")\r\n                actualUrl = currentPath + \"/\" + rawUrl\r\n            } else {\r\n                // in nodejs\r\n                const path = globalThis.__ResourcePath__\r\n                actualUrl = path + \"/\" + rawUrl\r\n            }\r\n        }\r\n        return actualUrl\r\n    }\r\n}\r\n\r\nexport class Image extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"!\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const imageEl = el(\"img\", [], {\r\n            src: actualUrl,\r\n            alt: this.description,\r\n            loading: \"lazy\",\r\n            tabindex: 0,\r\n        })\r\n        return MediaNode.containerGenerator(imageEl)\r\n    }\r\n}\r\n\r\nexport class Audio extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\":\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const audioEl = el(\"audio\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: true,\r\n        })\r\n        return MediaNode.containerGenerator(audioEl)\r\n    }\r\n}\r\n\r\nexport class Video extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"?\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const videoEl = el(\"video\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: \"true\",\r\n        })\r\n        return MediaNode.containerGenerator(videoEl)\r\n    }\r\n}\r\n\r\nexport const isIframePattern = (source) =>\r\n    MediaNode.patternGenerator(\"@\")(source)\r\n    || source.startsWith(\"@@@\")\r\n\r\nexport class Iframe extends MediaNode {\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const iframeEl = el(\"iframe\", this.description, {\r\n            src: actualUrl,\r\n            title: this.description,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\n// --- --- --- ---\r\n// media nodes end\r\n// --- --- --- ---\r\n\r\n// --- --- --- --- -\r\n// block nodes start\r\n// --- --- --- --- -\r\n\r\nexport class CodeBlock extends BaseNode {\r\n    constructor(content, lang) {\r\n        super()\r\n\r\n        this.lang = lang\r\n        if (typeof window == \"object\") {\r\n            // in browser\r\n            this.content = content\r\n        } else {\r\n            // in node.js\r\n            this.content = content\r\n                .replaceAll(\"<\", \"&lt;\")\r\n                .replaceAll(\">\", \"&gt;\")\r\n        }\r\n    }\r\n    append(content) {\r\n        this.content += content\r\n    }\r\n    toHTML() {\r\n        const isPlaintext = [\"plaintext\", \"text\", \"\"].includes(this.lang)\r\n        if (typeof window == \"object\" && !isPlaintext) {\r\n            globalThis.__LanguageList__.add(this.lang)\r\n        }\r\n        \r\n        let langName\r\n        let langClass\r\n        if (isPlaintext) {\r\n            langClass = \"nohighlight\"\r\n            langName  = \"PLAINTEXT\"\r\n        } else {\r\n            langClass = `language-${this.lang}`\r\n            langName  = this.lang.toUpperCase()\r\n        }\r\n\r\n        const codeEl = el(\"code\", this.content, {\r\n            \"class\": langClass\r\n        })\r\n        return el(\"pre\", codeEl, {\r\n            \"data-language\": langName\r\n        })\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"```\")\r\n}\r\n\r\nexport class DetailsBlock extends BaseNode {\r\n    summary = \"\"\r\n    content = \"\"\r\n\r\n    constructor(content, summary) {\r\n        super()\r\n        \r\n        this.summary = summary\r\n        this.content = mdResolver(content)\r\n    }\r\n    toHTML() {\r\n        const summaryEl = el(\"summary\", this.summary)\r\n        const detailsEl = el(\"details\", summaryEl)\r\n\r\n        const innerNodes = this.content\r\n            .map(node => node.toHTML())\r\n        const childrenEl = el(\"div\", el(\"div\", innerNodes, {\r\n            \"class\": \"details-children\"\r\n        }), {\r\n            \"class\": \"details-children-container\"\r\n        })\r\n        return el(\"div\", [detailsEl, childrenEl], {\r\n            \"class\": \"details\"\r\n        })\r\n    }\r\n\r\n    static pattern = source =>\r\n        source.startsWith(\">>>\")\r\n}\r\n\r\nexport class FormulaBlock extends BaseNode {\r\n    content = \"\"\r\n    description = \"\"\r\n\r\n    constructor(content, description) {\r\n        super()\r\n\r\n        this.content = content\r\n        this.description = description\r\n    }\r\n    toHTML() {\r\n        globalThis.__ContainsFormula__ = true\r\n        return el(\"div\", this.content, {\r\n            \"class\": \"math\",\r\n            title: this.description,\r\n        })\r\n    }\r\n\r\n    static pattern = source =>\r\n        source.startsWith(\"$$$\")\r\n}\r\n\r\nexport class IframeBlock extends BaseNode {\r\n    // injected html codes, used to auto darkmode and send height message\r\n    static #injectedCodes = id => `\\\r\n<style>\r\n@media (prefers-color-scheme: dark) {\r\n  :root {\r\n    color: white;\r\n    background-color: #121212;\r\n  }\r\n}\r\n</style>\r\n<script>\r\nwindow.addEventListener(\"load\", (e) => {\r\n  const iframeRootEl = e.target.documentElement\r\n  const parent = window.parent\r\n  const height = parseFloat(getComputedStyle(iframeRootEl).height)\r\n  parent.postMessage({\r\n    height,\r\n    id: \"${id}\"\r\n  }, \"*\")\r\n})\r\n</script>`\r\n\r\n    constructor(content, description) {\r\n        super()\r\n\r\n        globalThis.__IframeCounter__ += 1\r\n        this.id = \"iframe_\" + globalThis.__IframeCounter__\r\n        this.description = description\r\n\r\n        if (typeof window == \"object\") {\r\n            // in browser\r\n            this.content = content + IframeBlock.#injectedCodes(this.id)\r\n        } else {\r\n            // in node.js\r\n            this.content = content\r\n        }\r\n    }\r\n\r\n    toHTML() {\r\n        const iframeEl = el(\"iframe\", this.description, {\r\n            id: this.id,\r\n            title: this.description,\r\n            srcdoc: this.content,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\n// --- --- --- ---\r\n// block nodes end\r\n// --- --- --- ---\r\n","export default function(line) {\r\n    let indentCount = 0\r\n    let spaceCount = 0\r\n\r\n    for (const ch of line) {\r\n        if (ch.match(/[^\\s\\t]/)) {\r\n            break\r\n        }\r\n\r\n        if (ch == \"\\t\") {\r\n            indentCount += 1\r\n            continue\r\n        }\r\n        if (ch == \" \") {\r\n            spaceCount += 1\r\n        }\r\n        if (spaceCount == 2) {\r\n            spaceCount = 0\r\n            indentCount += 1\r\n        }\r\n    }\r\n    return indentCount\r\n}\r\n","import { List } from \"../node.js\"\r\nimport getIndent from \"../utils/getIndent.js\"\r\n\r\nexport default function listResolver(currentLine, lines) {\r\n    const currentIndent = getIndent(currentLine)\r\n    const currentNode = new List(currentLine)\r\n\r\n    while (lines.length && List.isListPattern(lines[0])) {\r\n        const nextLine = lines.shift()\r\n        const nextIndent = getIndent(nextLine)\r\n        const isNextOrdered = List.orderedPattern(nextLine)\r\n\r\n        if (nextIndent > currentIndent) {\r\n            currentNode.push(listResolver(nextLine, lines))\r\n        } else if (nextIndent == currentIndent && isNextOrdered == currentNode.isOrdered) {\r\n            currentNode.push(List.getContent(nextLine, isNextOrdered))\r\n        } else {\r\n            lines.unshift(nextLine)\r\n            break\r\n        }\r\n    }\r\n    return currentNode\r\n}","import mdResolver from \"../index.js\"\r\nimport { Quote } from \"../node.js\"\r\n\r\nexport default function(firstLine, lines) {\r\n    let quotedContent = firstLine.slice(2) + \"\\n\"\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (Quote.pattern(l)) {\r\n            quotedContent += l.slice(2) + \"\\n\"\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n    const children = mdResolver(quotedContent)\r\n    const node = new Quote(children)\r\n    return node\r\n}\r\n","import { Table } from \"../node.js\"\r\n\r\n// input: \"| content | content |\"\"\r\n// output: [\"content\",\"content\"]\r\nfunction tableLineConverter(tableLine) {\r\n    const splited = tableLine.split(\"|\")\r\n    const result = splited\r\n        .filter(item => item.length > 0)\r\n        .map(item => item.trim())\r\n    return result\r\n}\r\n\r\nexport default function(firstLine, lines) {\r\n    const headerText = firstLine\r\n    const contentLines = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (Table.pattern(l)) {\r\n            contentLines.push(l)\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n\r\n    const headerCells = tableLineConverter(headerText)\r\n    const contentRows = contentLines.map(tableLineConverter)\r\n    const tableNode = new Table(headerCells, contentRows)\r\n    return tableNode\r\n}\r\n","import { CodeBlock, DetailsBlock, FormulaBlock, Iframe, IframeBlock } from \"../node.js\"\r\n\r\nfunction blockResolverGenerator(endSign, targetClass) {\r\n    return function(firstLine, lines) {\r\n        const description = firstLine.slice(3)\r\n\r\n        let content = \"\"\r\n        while (lines.length) {\r\n            const l = lines.shift()\r\n\r\n            if (l == endSign) {\r\n                break\r\n            }\r\n\r\n            content += l + \"\\n\"\r\n        }\r\n        return new targetClass(content, description)\r\n    }\r\n}\r\n\r\nexport const codeResolver = blockResolverGenerator(\"```\", CodeBlock)\r\nexport const detailsResolver = blockResolverGenerator(\">>>\", DetailsBlock)\r\nexport const formulaResolver = blockResolverGenerator(\"$$$\", FormulaBlock)\r\nexport function iframeResolver(firstLine, lines) {\r\n    const blockResolver = blockResolverGenerator(\"@@@\", IframeBlock)\r\n\r\n    if (!firstLine.startsWith(\"@@@\")) {\r\n        // link to out resource\r\n        return new Iframe(firstLine)\r\n    }\r\n    return blockResolver(firstLine, lines)\r\n}\r\n","import {\r\n    Headline, Quote, Divider,\r\n    List, Para, Table,\r\n    Image, Audio, Video,\r\n    FormulaBlock, CodeBlock,\r\n    isIframePattern,\r\n    DetailsBlock\r\n} from \"./node.js\"\r\nimport {\r\n    listResolver, quoteResolver, tableResolver,\r\n    codeResolver, formulaResolver, iframeResolver, detailsResolver,\r\n} from \"./resolvers/index.js\"\r\nimport getLines from \"./utils/getLines.js\"\r\n\r\nexport default function mdResolver(source) {\r\n    const lines = getLines(source)\r\n    const nodes = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l.length == 0) {\r\n            continue\r\n        }\r\n\r\n        if (Headline.pattern(l)) {\r\n            nodes.push(new Headline(l))\r\n        } else\r\n        if (Divider.pattern(l)) {\r\n            nodes.push(new Divider)\r\n        } else\r\n        if (Quote.pattern(l)) {\r\n            nodes.push(quoteResolver(l, lines))\r\n        } else\r\n        if (List.isListPattern(l)) {\r\n            nodes.push(listResolver(l, lines))\r\n        } else\r\n        if (Table.pattern(l)) {\r\n            nodes.push(tableResolver(l, lines))\r\n        } else\r\n        if (Image.pattern(l)) {\r\n            nodes.push(new Image(l))\r\n        } else\r\n        if (Audio.pattern(l)) {\r\n            nodes.push(new Audio(l))\r\n        } else\r\n        if (Video.pattern(l)) {\r\n            nodes.push(new Video(l))\r\n        } else\r\n        if (DetailsBlock.pattern(l)) {\r\n            nodes.push(detailsResolver(l, lines))\r\n        } else\r\n        if (FormulaBlock.pattern(l)) {\r\n            nodes.push(formulaResolver(l, lines))\r\n        } else\r\n        if (CodeBlock.pattern(l)) {\r\n            nodes.push(codeResolver(l, lines))\r\n        } else\r\n        if (isIframePattern(l)) {\r\n            nodes.push(iframeResolver(l, lines))\r\n        } else {\r\n            nodes.push(new Para(l))\r\n        }\r\n    }\r\n    return nodes\r\n}","export default function(source) {\r\n    if (source.indexOf(\"\\r\") != -1) {\r\n        return source.split(\"\\r\\n\")\r\n    } else {\r\n        return source.split(\"\\n\")\r\n    }\r\n}","import keydownEvent from \"./keydownEvent.js\"\r\nimport { importHighlighter, importTexRenderer } from \"./importer.js\"\r\nimport el from \"./markdown/utils/el.js\"\r\nimport mdResolver from \"./markdown/index.js\"\r\n\r\nconst articleEl        = document.querySelector(\"article:not(#directory-description)\")\r\nconst mainEl           = document.querySelector(\"main\")\r\nconst dirDescriptionEl = mainEl.querySelector(\"#directory-description\")\r\nconst parentDirBtn     = mainEl.querySelector(\"#previous-dir li\")\r\nconst articleList      = mainEl.querySelector(\"#article-list\")\r\n\r\n// ----------------\r\n// article renderer\r\n// ----------------\r\n\r\narticleEl.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n    if (target.tagName == \"IMG\") {\r\n        window.open(target.src)\r\n    }\r\n})\r\n\r\nfunction mdEntry(mdContent) {\r\n    // language names to import\r\n    globalThis.__LanguageList__ = new Set()\r\n    // to deside whether to import `katex`\r\n    globalThis.__ContainsFormula__ = false\r\n    // used to dynamic generate iframe id\r\n    globalThis.__IframeCounter__ = 0\r\n\r\n    const structure = mdResolver(mdContent)\r\n\r\n    let resultNodes = structure\r\n        .map(node => node.toHTML())\r\n    if (!resultNodes.length) {\r\n        resultNodes = el(\"h1\", \"404 Not Found\")\r\n    }\r\n    return resultNodes\r\n}\r\n\r\nexport function articleRender(articleContent) {\r\n    const resultNodes = mdEntry(articleContent)\r\n    articleEl.innerHTML = \"\"\r\n    resultNodes.forEach(el => articleEl.appendChild(el))\r\n\r\n    mainEl.style.display = \"none\"\r\n    articleEl.style.display = \"block\"\r\n    articleEl.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n    // return to the top\r\n    document.body.scrollTop = 0\r\n    document.documentElement.scrollTop = 0\r\n\r\n    importHighlighter().then(() => globalThis.__LanguageList__ = null)\r\n    importTexRenderer().then(() => globalThis.__ContainsFormula__ = false)\r\n}\r\n\r\n// --------------\r\n// index renderer\r\n// --------------\r\n\r\nparentDirBtn.addEventListener(\"click\", () => {\r\n    const splited = location.hash.split(\"/\")\r\n    globalThis.__CurrentPage__ = 1\r\n    location.hash = splited.slice(0, -2).join(\"/\") + \"/\"\r\n})\r\narticleList.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n\r\n    if (target == articleList) {\r\n        // when click on the `articleList` itself\r\n        // ignore this event.\r\n        return\r\n    }\r\n\r\n    if (!target.getAttribute(\"data-target-blog\")) {\r\n        if (target.innerText.endsWith(\"/\")) {\r\n            // open directory\r\n            globalThis.__CurrentPage__ = 1\r\n        }\r\n        location.hash += target.innerText\r\n    } else {\r\n        // in `newest` page\r\n        globalThis.__CurrentPage__ = 1\r\n        location.hash = target.getAttribute(\"data-target-blog\")\r\n    }\r\n})\r\n\r\nexport function indexRender(indexing, itemResolver) {\r\n    // calculate properties\r\n    const {current, total} = indexing\r\n    let isFirstPage = false\r\n    let isLastPage = false\r\n    let isOnlyPage = false\r\n    if (total == 1) {\r\n        isOnlyPage = true\r\n    } else {\r\n        if (current == 1) {\r\n            isFirstPage = true\r\n        }\r\n        if (current == total) {\r\n            isLastPage = true\r\n        }\r\n    }\r\n    mainEl.setAttribute(\"data-is-first-page\", isFirstPage)\r\n    mainEl.setAttribute(\"data-is-last-page\", isLastPage)\r\n    mainEl.setAttribute(\"data-is-only-page\", isOnlyPage)\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    dirDescriptionEl.innerHTML = \"\"\r\n    if (\"directoryDescription\" in indexing) {\r\n        // render directory description\r\n        const resultNodes = mdEntry(indexing.directoryDescription)\r\n        resultNodes.forEach(el => dirDescriptionEl.appendChild(el))\r\n        dirDescriptionEl.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n            el.onkeydown = keydownEvent(el)\r\n        })\r\n\r\n        importHighlighter().then(() => globalThis.__LanguageList__ = null)\r\n        importTexRenderer().then(() => globalThis.__ContainsFormula__ = false)\r\n    }\r\n\r\n    // reset articleList content\r\n    articleList.innerHTML = \"\"\r\n    indexing.content\r\n        .map(itemResolver)\r\n        .forEach(el =>\r\n            articleList.appendChild(el)\r\n        )\r\n\r\n    // set keyboard event\r\n    articleList.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    articleEl.style.display = \"none\"\r\n    mainEl.style.display = \"block\"\r\n\r\n    // return to the top\r\n    document.body.scrollTop = 0\r\n    document.documentElement.scrollTop = 0\r\n}","import \"./styles/style.css\"\r\nimport \"./libs/katex/katex.css\"\r\n\r\nimport { fetchJSON, fetchMD } from \"./utils/fetchResources.js\"\r\nimport keydownEvent from \"./utils/keydownEvent.js\"\r\nimport el from \"./utils/markdown/utils/el.js\"\r\nimport { articleRender, indexRender } from \"./utils/render.js\"\r\n\r\nglobalThis.__CurrentPage__ = 1\r\nconst indexDirPath = \"./.index/\"\r\n\r\n// ---------------------------\r\n// Buttons event setting start\r\n// ---------------------------\r\n\r\nconst lightBtn = document.querySelector(\"#light-btn\")\r\nconst darkBtn = document.querySelector(\"#dark-btn\")\r\nconst previousBtn = document.querySelector(\"button#previous\")\r\nconst nextBtn = document.querySelector(\"button#next\")\r\n\r\nlightBtn.onkeydown = keydownEvent(lightBtn)\r\ndarkBtn.onkeydown = keydownEvent(darkBtn)\r\npreviousBtn.addEventListener(\"click\", () => {\r\n    if (globalThis.__CurrentPage__ > 0) {\r\n        globalThis.__CurrentPage__ -= 1\r\n        hashEvent()\r\n    }\r\n})\r\nnextBtn.addEventListener(\"click\", () => {\r\n    globalThis.__CurrentPage__ += 1\r\n    hashEvent()\r\n})\r\n\r\n// -------------------------\r\n// Buttons event setting end\r\n// -------------------------\r\n\r\n\r\n// ---------------------\r\n// Hash controller start\r\n// ---------------------\r\n\r\nconst mainEl = document.querySelector(\"main\")\r\n\r\nasync function hashEvent() {\r\n    if (!location.hash) {\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    const hash = location.hash.slice(1) // remove '#'\r\n    mainEl.classList.add(\"disabled\")\r\n\r\n    if (hash == \"newest/\") {\r\n        // open newest page\r\n        const newestIndex = await fetchJSON(indexDirPath + \"newest_\" + globalThis.__CurrentPage__)\r\n        indexRender(newestIndex, item => {\r\n            const createDate = new Date(item.timestamp)\r\n            const formatedDate = new Intl.DateTimeFormat().format(createDate)\r\n            const dateEl  = el(\"code\", formatedDate)\r\n            const titleEl = el(\"span\", item.title)\r\n            return el(\"li\",\r\n                [dateEl, el(\"text\", \": \"), titleEl],\r\n                {\r\n                    tabindex: 0,\r\n                    \"data-target-blog\": item.link\r\n                }\r\n            )\r\n        })\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\"/\")) {\r\n        // open folder\r\n        const splited = hash.split(\"/\").slice(0, -1)\r\n        const indexFilePath = indexDirPath + splited.join(\"+\") + \"_\" + globalThis.__CurrentPage__\r\n        const index = await fetchJSON(indexFilePath)\r\n        indexRender(index, item =>\r\n            el(\"li\", el(\"span\", item), {\r\n                tabindex: 0\r\n            })\r\n        )\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\".md\")) {\r\n        // open article\r\n        const articleContent = await fetchMD(\"./\" + hash)\r\n        articleRender(articleContent)\r\n    } else {\r\n        // the hash \"#static/\" is the homepage\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    // delay this operation\r\n    mainEl.setAttribute(\"data-is-root\", hash == \"static/\")\r\n    mainEl.classList.remove(\"disabled\")\r\n}\r\n\r\nwindow.onload = hashEvent\r\nwindow.addEventListener(\"hashchange\", hashEvent)\r\nwindow.addEventListener(\"message\", (e) => {\r\n    if (e.origin != \"null\") {\r\n        return\r\n    }\r\n    const { id, height } = e.data\r\n    const targetIframeEl = document.getElementById(id)\r\n    targetIframeEl.style.height = height + \"px\"\r\n}, false)\r\n\r\n// -------------------\r\n// Hash controller end\r\n// -------------------"],"names":["async","fetchJSON","path","fetch","then","res","json","catch","err","console","log","error","keydownEvent","el","e","key","click","propToString","props","Object","entries","filter","_","val","undefined","map","toString","replaceAll","htmlValueFormater","join","tagName","content","globalThis","document","createTextNode","targetEl","createElement","setAttribute","propSetter","Array","childEl","appendChild","HTMLElement","Error","textContent","contentSetter","config","homepage","footer","language","enableRSS","value","ignoreDir","enableNewest","pageCapacity","RSSCapacity","previewPort","katexOptions","hljs","katex","importHighlighter","importLangDefs","languageListArr","from","__LanguageList__","langDefImporters","name","getLanguage","lang","__variableDynamicImportRuntime0__","toLowerCase","Promise","all","langDefs","forEach","defModule","index","def","default","registerLanguage","highlightAll","size","import","module","importTexRenderer","renderFormula","querySelectorAll","render","__ContainsFormula__","tasks","cssRes","text","cssText","style","head","getInterval","endSign","includes","intervalText","isEscape","length","ch","slice","substr","KeyToken_TagName_map","Map","PairedParenMap","TextToken","constructor","this","toHTML","KeyToken","tagSign","tag","get","realTagName","className","split","elOption","class","parser","LinkToken","address","displayContent","startsWith","href","target","PhoneticToken","notation","ignoredLeftParenthesis","ignoredRightParenthesis","notationEl","concat","source","getFirstChar","charAt","substring","getSpecialTokenClass","tokenSign","targetTokenType","tokens","textTerm","keyTerm","keyStart","isInKey","has","nextCh","push","specialTokenSign","pairedTokenSign","removedContent","hiddenContent","token","BaseNode","inline","inlineResolver","Headline","super","splited","numberSignStr","numberSignCount","static","match","Para","trimStart","Quote","children","innerNodes","node","Divider","List","isOrdered","Boolean","orderedPattern","getContent","child","childrenHTML","unorderedPattern","line","Table","headerCells","bodyRows","tableHeaderCell","tableBodyCell","tableHeaderRow","row","tableBodyRow","tableHeader","tableBody","MediaNode","description","mdText","containerGenerator","patternGenerator","identifierSign","endsWith","replaceContentGenerator","downloadEl","srcUrlResolver","rawUrl","actualUrl","location","hash","__ResourcePath__","Image","imageEl","src","alt","loading","tabindex","Audio","audioEl","controls","Video","videoEl","isIframePattern","Iframe","iframeEl","title","sandbox","CodeBlock","window","append","isPlaintext","langName","langClass","add","toUpperCase","codeEl","DetailsBlock","summary","mdResolver","summaryEl","detailsEl","childrenEl","FormulaBlock","IframeBlock","id","__IframeCounter__","injectedCodes","srcdoc","getIndent","indentCount","spaceCount","listResolver","currentLine","lines","currentIndent","currentNode","isListPattern","nextLine","shift","nextIndent","isNextOrdered","unshift","quoteResolver","firstLine","quotedContent","l","pattern","tableLineConverter","tableLine","item","trim","tableResolver","headerText","contentLines","contentRows","blockResolverGenerator","targetClass","codeResolver","detailsResolver","formulaResolver","iframeResolver","blockResolver","indexOf","getLines","nodes","articleEl","querySelector","mainEl","dirDescriptionEl","parentDirBtn","articleList","mdEntry","mdContent","Set","resultNodes","indexRender","indexing","itemResolver","current","total","isFirstPage","isLastPage","isOnlyPage","innerHTML","directoryDescription","onkeydown","display","body","scrollTop","documentElement","addEventListener","open","__CurrentPage__","getAttribute","innerText","indexDirPath","lightBtn","darkBtn","previousBtn","nextBtn","hashEvent","classList","createDate","Date","timestamp","dateEl","Intl","DateTimeFormat","format","titleEl","link","indexFilePath","articleContent","articleRender","status","fetchMD","remove","onload","origin","height","data","getElementById"],"mappings":"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"}