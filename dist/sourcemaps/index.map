{"version":3,"file":"index.min.js","sources":["../src/utils/fetchResources.js","../src/utils/keydownEvent.js","../build.config.js","../src/utils/markdown/utils/el.js","../src/utils/markdown/inline.js","../src/utils/markdown/node.js","../src/utils/markdown/utils/getIndent.js","../src/utils/markdown/resolvers/listResolver.js","../src/utils/markdown/resolvers/quoteResolver.js","../src/utils/markdown/resolvers/tableResolver.js","../src/utils/markdown/resolvers/blockResolvers.js","../src/utils/markdown/index.js","../src/utils/markdown/utils/getLines.js","../src/utils/importer.js","../src/utils/render.js","../src/index.js"],"sourcesContent":["export async function fetchJSON(path) {\r\n    return await fetch(path)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            console.log(\"JSON request error: \" + path)\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport async function fetchMD(path) {\r\n    return await fetch(path)\r\n        .then(res => {\r\n            if (res.status != 200) {\r\n                throw res.status\r\n            }\r\n            return res.body\r\n        })\r\n        .then(async body => {\r\n            const reader = body.getReader()\r\n            const decoder = new TextDecoder('utf-8');\r\n            let totalData = \"\";\r\n            const processor = (result) => {\r\n                if (result.done) {\r\n                    return totalData\r\n                }\r\n                totalData += decoder.decode(result.value, { stream: true })\r\n                return reader.read().then(processor);\r\n            }\r\n            const result = await reader.read();\r\n            return processor(result);\r\n        })\r\n        .catch(err => {\r\n            switch (err) {\r\n                // render error code in markdown format\r\n                case 404:\r\n                    return \"# 404 Not Found\"\r\n                case 500:\r\n                    return \"# 500 Internal Server Error\"\r\n                default:\r\n                    console.log(\"Markdown request error: \" + path)\r\n                    console.error(err)\r\n            }\r\n        })\r\n}","export default function(el) {\r\n    return function(e) {\r\n        if (e.key == \"Enter\" || e.key == \" \") {\r\n            el.click()\r\n        }\r\n    }\r\n}\r\n","export default {\r\n    /**\r\n     * homepage: String\r\n     * the URL that this site deployed, is used to generate the rss.xml file\r\n     * 此站点部署的 URL，用于生成 rss.xml 文件\r\n     */\r\n    homepage: \"https://bhznjns.github.io/markdown-blog/\",\r\n\r\n    /**\r\n     * footer: String\r\n     * the footer for this site, can be deleted if you do not need it\r\n     * 站点的脚注，如果你不需要可以删除\r\n     */\r\n    footer: `Powerd by <a href='https://github.com/BHznJNs/markdown-blog'>MarkdownBlog</a>`,\r\n\r\n    /**\r\n     * language: String\r\n     * \"zh\" => Simplified Chinese 简体中文\r\n     * \"en\" => English            英文\r\n     */\r\n    language: \"zh\",\r\n\r\n    /**\r\n     * enableRSS: Boolean | Object<value: Boolean, ignoreDir: [String]>\r\n     * used to enable / disable the RSS function, if you do not want add blogs in some directory to the `rss.xml` , just add it into the `ignoreDir`\r\n     * 用来启用/禁用 RSS 发布功能，如果你不想将某些文件夹的内容添加到 `rss.xml` 中，将其添加到 `ignoreDir` 中\r\n     */\r\n    enableRSS: {\r\n        value: true,\r\n        ignoreDir: [\r\n            // directories in `static`\r\n            \"学习笔记/\"\r\n        ]\r\n    },\r\n\r\n    /**\r\n     * enableNewest: Boolean | Object<value: Boolean, ignoreDir: [String]>\r\n     * used to enable / disable the Newest function, if you do not want add blogs in some directory, just add it into the `ignoreDir`\r\n     * 用来启用/禁用 最新博文 功能，如果你不想将某些文件夹的内容添加到其中，将其添加到 `ignoreDir` 中\r\n     */\r\n    enableNewest: {\r\n        value: true,\r\n        ignoreDir: []\r\n    },\r\n\r\n    /**\r\n     * pageCapacity: Number\r\n     * defined the amount of the items in every page\r\n     * 定义每一页展示的博文数\r\n     */\r\n    pageCapacity: 10,\r\n\r\n    /**\r\n     * RSSCapacity: Number\r\n     * defined the amount of the items in `rss.xml`\r\n     * 定义 `rss.xml` 中包含的博文个数\r\n     */\r\n    RSSCapacity: 16,\r\n\r\n    /**\r\n     * previewPort: Number\r\n     * defined the port id for preview server\r\n     * 为预览服务器定义端口\r\n     */\r\n    previewPort: 3000,\r\n\r\n    /**\r\n     * katexOptions: Object\r\n     * options for katex.js rendering, see here: https://katex.org/docs/options\r\n     * katex.js 用于渲染数学公式的配置项，见此：https://katex.org/docs/options\r\n     */\r\n    katexOptions: null\r\n}\r\n","function propSetter(el, props) {\r\n    if (!props) {\r\n        return\r\n    }\r\n    for (const [key, val] of Object.entries(props)) {\r\n        el.setAttribute(key, val)\r\n    }\r\n}\r\n\r\nfunction contentSetter(el, content) {\r\n    if (content instanceof Array) {\r\n        // array of html element\r\n        for (const childEl of content) {\r\n            el.appendChild(childEl)\r\n        }\r\n    } else if (content instanceof HTMLElement) {\r\n        // single element\r\n        el.appendChild(content)\r\n    } else if (typeof content == \"string\") {\r\n        // common text\r\n        el.textContent = content\r\n    } else {\r\n        throw Error(\"Unexpected element content: \" + content)\r\n    }\r\n}\r\n\r\nexport default function el(tagName, content, props=null) {\r\n    if (\"document\" in globalThis) {\r\n        // in browser\r\n        if (tagName == \"text\") {\r\n            return document.createTextNode(content)\r\n        }\r\n\r\n        const targetEl = document.createElement(tagName)\r\n        propSetter(targetEl, props)\r\n        contentSetter(targetEl, content)\r\n        return targetEl\r\n    } else {\r\n        // in node.js\r\n        function propToString(props) {\r\n            const resultStrArr = []\r\n            for (const [key, val] of Object.entries(props)) {\r\n                const valStr = val.toString().replaceAll(\"\\\"\", \"&quot;\")\r\n                resultStrArr.push(`${key}=\"${valStr}\"`)\r\n            }\r\n            return resultStrArr.join(\" \")\r\n        }\r\n\r\n        if (content instanceof Array) {\r\n            content = content.join(\"\")\r\n        }\r\n        switch (tagName) {\r\n            case \"text\":\r\n                return content\r\n            case \"hr\":\r\n                return \"<hr>\"\r\n            case \"img\":\r\n                return `<img ${props ? \" \" + propToString(props) : \"\"}>`\r\n        }\r\n        return `<${tagName}${props ? \" \" + propToString(props) : \"\"}>${content}</${tagName}>`\r\n    }\r\n}\r\n","import el from \"./utils/el.js\"\r\n\r\n// identifier character array\r\nconst keyTermArray = [\r\n    \"#\",\r\n    \"`\",\r\n    \"_\",\r\n    \"/\",\r\n    \"-\",\r\n    \":\",\r\n    \",\",\r\n    \"'\",\r\n    \"$\",\r\n]\r\n// identifier character to HTML tag\r\nconst KeyToken_TagName_map = new Map([\r\n    [\"##\", \"strong\"],\r\n    [\"``\", \"code\"],\r\n    [\"__\", \"u\"],\r\n    [\"//\", \"i\"],\r\n    [\"--\", \"del\"],\r\n    [\"::\", \"span.dim\"],\r\n    [\",,\", \"sub\"],\r\n    [\"''\", \"sup\"],\r\n    [\"$$\", \"span.math\"],\r\n])\r\n\r\n// --- --- --- --- --- ---\r\n\r\nclass Token {\r\n    constructor(type, content) {\r\n        this.type = type\r\n        this.content = content\r\n    }\r\n\r\n    static key      = Symbol(\"key\")\r\n    static text     = Symbol(\"text\")\r\n    static link     = Symbol(\"link\")\r\n    static phonetic = Symbol(\"phonetic\")\r\n}\r\n\r\nclass LinkToken extends Token {\r\n    constructor(content, address) {\r\n        super()\r\n\r\n        this.type = Token.link\r\n        this.content = content\r\n        this.address = address\r\n    }\r\n\r\n    toHTML() {\r\n        if (this.address.startsWith(\"http\")) {\r\n            // internet links\r\n            return el(\"a\", this.content, {\r\n                href: this.address,\r\n                target: \"_blank\"\r\n            })\r\n        }\r\n\r\n        // static resources or links\r\n        const actualAddress = \"static/\" + this.address\r\n        return el(\"a\", this.content, {\r\n            href: \"#\" + actualAddress\r\n        })\r\n    }\r\n}\r\n\r\nclass PhoneticToken extends Token {\r\n    constructor(content, notation) {\r\n        super()\r\n\r\n        this.type = Token.phonetic\r\n        this.content  = content\r\n        this.notation = notation\r\n    }\r\n    toHTML() {\r\n        const ignoredLeftParenthesis = el(\"rp\", \"(\")\r\n        const ignoredRightParenthesis = el(\"rp\", \")\")\r\n        const cjkNotation = el(\"span\", el(\"span\", this.notation), {\r\n            \"class\": \"cjk-notation-container\"\r\n        })\r\n        const cjkText = el(\"span\", el(\"span\", this.content), {\r\n            \"class\": \"cjk-text-container\"\r\n        })\r\n        const notation = el(\"rt\", this.notation)\r\n\r\n        return el(\"ruby\", [\r\n            cjkNotation,\r\n            cjkText,\r\n            ignoredLeftParenthesis,\r\n            notation,\r\n            ignoredRightParenthesis,\r\n        ])\r\n    }\r\n}\r\n\r\n// --- --- --- --- --- ---\r\n\r\n// (\"abc]\", \"]\") -> \"abc\"\r\nexport function getInterval(text, endSign) {\r\n    let intervalText = \"\"\r\n    let isEscape = false\r\n\r\n    while (text.length) {\r\n        const ch = text.slice(0, 1)\r\n        text = text.substr(1)\r\n\r\n        if (ch == \"\\\\\") {\r\n            isEscape = !isEscape\r\n            continue\r\n        }\r\n        if (ch == endSign && !isEscape) {\r\n            break\r\n        }\r\n        intervalText += ch\r\n        isEscape = false\r\n    }\r\n\r\n    return intervalText\r\n}\r\n\r\nfunction tokenize(text) {\r\n    const tokens = []\r\n    let textTerm = \"\"\r\n    let keyTerm  = \"\"\r\n    let isEscape = false\r\n\r\n    while (text.length) {\r\n        const ch = text.slice(0, 1)\r\n        text = text.substr(1)\r\n\r\n        // link resolve\r\n        if (ch == \"[\" && !isEscape) {\r\n            tokens.push(new Token(Token.text, textTerm))\r\n            textTerm = \"\"\r\n\r\n            const linkDisplay = getInterval(text, \"]\")\r\n            text = text.substr(linkDisplay.length + 1)\r\n\r\n            let ch = text.slice(0, 1)\r\n            text = text.substr(1)\r\n            if (ch == \"(\" && !isEscape) {\r\n                const linkSelf = getInterval(text, \")\")\r\n                text = text.substr(linkSelf.length + 1)\r\n                tokens.push(new LinkToken(linkDisplay, linkSelf))\r\n            }\r\n            continue\r\n        }\r\n\r\n        // phonetic notation resolve 拼音处理\r\n        if (ch == \"{\" && !isEscape) {\r\n            tokens.push(new Token(Token.text, textTerm))\r\n            textTerm = \"\"\r\n\r\n            const textDisplay = getInterval(text, \"}\")\r\n            text = text.substr(textDisplay.length + 1)\r\n\r\n            let ch = text.slice(0, 1)\r\n            text = text.substr(1)\r\n            if (ch == \"(\" && !isEscape) {\r\n                const notation = getInterval(text, \")\")\r\n                text = text.substr(notation.length + 1)\r\n                tokens.push(new PhoneticToken(textDisplay, notation))\r\n            }\r\n            continue\r\n        }\r\n\r\n        if (keyTermArray.includes(ch)) {\r\n            // keyTerm = \"#\" && ch = \"#\"\r\n            if (isEscape) {\r\n                textTerm += ch\r\n                isEscape = false\r\n                continue\r\n            }\r\n\r\n            if (keyTerm.length && keyTerm == ch) {\r\n                tokens.push(new Token(Token.text, textTerm))\r\n                tokens.push(new Token(Token.key , keyTerm + ch))\r\n                keyTerm  = \"\"\r\n                textTerm = \"\"\r\n            } else {\r\n                keyTerm = ch\r\n            }\r\n        } else {\r\n            if (ch == \"\\\\\") {\r\n                isEscape = !isEscape\r\n                continue\r\n            }\r\n            if (keyTerm.length) {\r\n                textTerm += keyTerm\r\n                keyTerm = \"\"\r\n            }\r\n\r\n            if (isEscape) {\r\n                textTerm += \"\\\\\"\r\n                isEscape = false\r\n            }\r\n            textTerm += ch\r\n        }\r\n    }\r\n\r\n    if (textTerm.length) {\r\n        tokens.push(new Token(Token.text, textTerm))\r\n    }\r\n    if (keyTerm.length) {\r\n        tokens.push(new Token(Token.text, keyTerm))\r\n    }\r\n\r\n    return tokens\r\n}\r\n\r\nfunction convert(tokens) {\r\n    let resultHTML = []\r\n    let identifier = \"\"\r\n    let tagContent = \"\"\r\n\r\n    for (const token of tokens) {\r\n        switch (token.type) {\r\n            case Token.key:\r\n                if (!(identifier.length && token.content == identifier)) {\r\n                    identifier = token.content\r\n                    continue\r\n                }\r\n                const tagName = KeyToken_TagName_map.get(identifier)\r\n                if (tagName.includes(\".\")) {\r\n                    const [realTagName, className] = tagName.split(\".\")\r\n                    if (identifier == \"$$\") {\r\n                        // formula sign\r\n                        globalThis.__ContainsFormula__ = true\r\n                    }\r\n                    resultHTML.push(el(realTagName, tagContent, {\r\n                        \"class\": className\r\n                    }))\r\n                } else {\r\n                    resultHTML.push(el(tagName, tagContent))\r\n                }\r\n\r\n                identifier = \"\"\r\n                tagContent = \"\"\r\n                break\r\n            case Token.text:\r\n                if (!identifier.length) {\r\n                    resultHTML.push(el(\"text\", token.content))\r\n                } else {\r\n                    tagContent = token.content\r\n                }\r\n                break\r\n            case Token.link:\r\n            case Token.phonetic:\r\n                resultHTML.push(token.toHTML())\r\n                break\r\n        }\r\n    }\r\n    return resultHTML\r\n}\r\n\r\nexport default function(rawText) {\r\n    const tokens = tokenize(rawText)\r\n    const resultHTML = convert(tokens)\r\n    return resultHTML\r\n}\r\n","import config from \"../../../build.config.js\"\r\nimport mdResolver from \"./index.js\"\r\nimport inlineResolver, { getInterval } from \"./inline.js\"\r\nimport el from \"./utils/el.js\"\r\n\r\nconst { language } = config\r\n\r\nclass BaseNode {\r\n    tagName = \"\"\r\n    content = \"\"\r\n\r\n    toHTML() {\r\n        const inline = inlineResolver(this.content)\r\n        return el(this.tagName, inline)\r\n    }\r\n}\r\n\r\nexport class Headline extends BaseNode {\r\n    constructor(content) {\r\n        super()\r\n\r\n        // \"### test\" -> \"###\"\r\n        const splited = content.split(\" \")\r\n        const numberSignStr = splited[0]\r\n        let numberSignCount = 0\r\n        for (const ch of numberSignStr) {\r\n            if (ch == '#') {\r\n                numberSignCount += 1\r\n            }\r\n        }\r\n\r\n        if (numberSignCount > 6) {\r\n            numberSignCount = 0\r\n        }\r\n\r\n        this.tagName = \"h\" + numberSignCount\r\n        this.content = splited.slice(1).join(\" \")\r\n    }\r\n\r\n    static pattern = source => source.match(/^(#+ )/)\r\n}\r\n\r\nexport class Para extends BaseNode {\r\n    tagName = \"p\"\r\n\r\n    constructor(content) {\r\n        super()\r\n        this.content = content.trimStart()\r\n    }\r\n}\r\n\r\nexport class Quote extends BaseNode {\r\n    tagName = \"blockquote\"\r\n    children = []\r\n\r\n    constructor(children) {\r\n        super()\r\n        this.children = children\r\n    }\r\n    toHTML() {\r\n        const innerNodes = this.children\r\n            .map(node => node.toHTML())\r\n        return el(this.tagName, innerNodes)\r\n    }\r\n\r\n    static pattern = source =>\r\n        (source == \">\") || source.startsWith(\"> \")\r\n}\r\n\r\nexport class Divider extends BaseNode {\r\n    toHTML = () => el(\"hr\", [])\r\n    static pattern = source =>\r\n        source.match(/(-\\s*-\\s*-)|(\\*\\s*\\*\\s*\\*)/) && !source.match(/[a-zA-Z0-9]/)\r\n}\r\n\r\nexport class List extends BaseNode {\r\n    children = []\r\n\r\n    constructor(content) {\r\n        super()\r\n\r\n        this.isOrdered = Boolean(List.orderedPattern(content))\r\n        this.tagName   = (this.isOrdered) ? \"ol\" : \"ul\"\r\n        this.children  = [List.getContent(content, this.isOrdered)]\r\n    }\r\n\r\n    push = child => this.children.push(child)\r\n\r\n    toHTML() {\r\n        const childrenHTML = []\r\n        for (const child of this.children) {\r\n            if (typeof child == \"string\") {\r\n                const inline = inlineResolver(child)\r\n                childrenHTML.push(el(\"li\", inline))\r\n            } else {\r\n                childrenHTML.push(child.toHTML())\r\n            }\r\n        }\r\n        return el(this.tagName, childrenHTML)\r\n    }\r\n\r\n    static unorderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[+-]+ )/))\r\n    static orderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[0-9]+. )/))\r\n\r\n    static isListPattern = (source) =>\r\n        List.orderedPattern(source) || List.unorderedPattern(source)\r\n\r\n    static getContent(line, isOrdered) {\r\n        if (isOrdered) {\r\n            // \"1. ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[0-9]+. )).+$/g)[0]\r\n        } else {\r\n            // \"- ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[+-]+ )).+$/g)[0]\r\n        }\r\n    }\r\n}\r\n\r\nexport class Table extends BaseNode {\r\n    headerCells = [\"\"]   // [string]\r\n    bodyRows    = [[\"\"]] // [[string]]\r\n\r\n    constructor(headerCells, bodyRows) {\r\n        super()\r\n\r\n        this.headerCells = headerCells\r\n        this.bodyRows    = bodyRows\r\n    }\r\n\r\n    #tableHeaderCell = content => el(\"th\", content)\r\n    #tableBodyCell   = content => el(\"td\", inlineResolver(content))\r\n    #tableHeaderRow  = row => el(\"tr\", row.map(this.#tableHeaderCell))\r\n    #tableBodyRow    = row => el(\"tr\", row.map(this.#tableBodyCell))\r\n\r\n    toHTML() {\r\n        const tableHeader = el(\r\n            \"thead\",\r\n            this.#tableHeaderRow(this.headerCells)\r\n        )\r\n        const tableBody = el(\r\n            \"tbody\",\r\n            this.bodyRows\r\n                .map(this.#tableBodyRow)\r\n        )\r\n        return el(\"table\", [tableHeader, tableBody])\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"| \")\r\n}\r\n\r\n// --- --- --- --- -\r\n// media nodes start\r\n// --- --- --- --- -\r\n\r\nclass MediaNode extends BaseNode {\r\n    source = \"\"\r\n    description = \"\"    \r\n    constructor(mdText) {\r\n        super()\r\n\r\n        mdText = mdText.substr(2)\r\n        this.description = getInterval(mdText, \"]\")\r\n        mdText = mdText.substr(this.description.length + 2)\r\n        this.source = getInterval(mdText, \")\")\r\n    }\r\n\r\n    static containerGenerator(content) {\r\n        return el(\"div\", content, {\r\n            \"class\": \"media-container\"\r\n        })\r\n    }\r\n\r\n    static patternGenerator(identifierSign) {\r\n        return (source) =>\r\n            source.startsWith(identifierSign + \"[\") && source.endsWith(\")\")\r\n    }\r\n\r\n    static replaceContentGenerator(href, description) {\r\n        let downloadEl\r\n        if (language == \"cn\") {\r\n            downloadEl = el(\"a\", \"从这里下载！\", { href })\r\n        } else if (language == \"en\") {\r\n            downloadEl = el(\"a\", \"Download this!\", { href })\r\n        }\r\n        const replaceContent = `${description}<br>${downloadEl}`\r\n        return replaceContent\r\n    }\r\n\r\n    static srcUrlResolver(rawUrl) {\r\n        let actualUrl\r\n        if (rawUrl.startsWith(\"http\")) {\r\n            actualUrl = rawUrl\r\n        } else {\r\n            if (\"location\" in globalThis) {\r\n                // in browser\r\n                const hash = location.hash.slice(1)\r\n                // get the parent directory path\r\n                const currentPath = hash.split(\"/\").slice(0, -1).join(\"/\")\r\n                actualUrl = currentPath + \"/\" + rawUrl\r\n            } else {\r\n                // in nodejs\r\n                const path = globalThis.__ResourcePath__\r\n                actualUrl = path + \"/\" + rawUrl\r\n            }\r\n        }\r\n        return actualUrl\r\n    }\r\n}\r\n\r\nexport class Image extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"!\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const imageEl = el(\"img\", [], {\r\n            src: actualUrl,\r\n            alt: this.description,\r\n            loading: \"lazy\",\r\n            tabindex: 0,\r\n        })\r\n        return MediaNode.containerGenerator(imageEl)\r\n    }\r\n}\r\n\r\nexport class Audio extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\":\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const audioEl = el(\"audio\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: true,\r\n        })\r\n        return MediaNode.containerGenerator(audioEl)\r\n    }\r\n}\r\n\r\nexport class Video extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"?\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const videoEl = el(\"video\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: \"true\",\r\n        })\r\n        return MediaNode.containerGenerator(videoEl)\r\n    }\r\n}\r\n\r\nexport const isIframePattern = (source) =>\r\n    MediaNode.patternGenerator(\"@\")(source)\r\n    || source.startsWith(\"@@@\")\r\n\r\nexport class Iframe extends MediaNode {\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const iframeEl = el(\"iframe\", this.description, {\r\n            src: actualUrl,\r\n            title: this.description,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\n// --- --- --- ---\r\n// media nodes end\r\n// --- --- --- ---\r\n\r\n// --- --- --- --- -\r\n// block nodes start\r\n// --- --- --- --- -\r\n\r\nexport class CodeBlock extends BaseNode {\r\n    constructor(content, lang) {\r\n        super()\r\n\r\n        this.lang = lang\r\n        if (typeof window == \"object\") {\r\n            // in browser\r\n            this.content = content\r\n        } else {\r\n            // in node.js\r\n            this.content = content\r\n                .replaceAll(\"<\", \"&lt;\")\r\n                .replaceAll(\">\", \"&gt;\")\r\n        }\r\n    }\r\n    append(content) {\r\n        this.content += content\r\n    }\r\n    toHTML() {\r\n        if (typeof window == \"object\") {\r\n            globalThis.__LanguageList__.add(this.lang)\r\n        }\r\n        const codeEl = el(\r\n            \"code\",\r\n            this.content,\r\n            {\r\n                \"class\": `language-${this.lang}`,\r\n                \"data-language\": this.lang.toUpperCase(),\r\n            }\r\n        )\r\n        return el(\"pre\", codeEl)\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"```\")\r\n}\r\n\r\nexport class DetailsBlock extends BaseNode {\r\n    summary = \"\"\r\n    content = \"\"\r\n\r\n    constructor(content, summary) {\r\n        super()\r\n        \r\n        this.summary = summary\r\n        this.content = mdResolver(content)\r\n    }\r\n    toHTML() {\r\n        const summaryEl = el(\"summary\", this.summary)\r\n        const detailsEl = el(\"details\", summaryEl)\r\n\r\n        const innerNodes = this.content\r\n            .map(node => node.toHTML())\r\n        const childrenEl = el(\"div\", el(\"div\", innerNodes), {\r\n            \"class\": \"details-children\"\r\n        })\r\n        return el(\"div\", [detailsEl, childrenEl], {\r\n            \"class\": \"details\"\r\n        })\r\n    }\r\n\r\n    static pattern = source =>\r\n        source.startsWith(\">>>\")\r\n}\r\n\r\nexport class FormulaBlock extends BaseNode {\r\n    content = \"\"\r\n    description = \"\"\r\n\r\n    constructor(content, description) {\r\n        super()\r\n\r\n        this.content = content\r\n        this.description = description\r\n    }\r\n    toHTML() {\r\n        globalThis.__ContainsFormula__ = true\r\n        return el(\"div\", this.content, {\r\n            \"class\": \"math\",\r\n            title: this.description,\r\n        })\r\n    }\r\n\r\n    static pattern = source =>\r\n        source.startsWith(\"$$$\")\r\n}\r\n\r\nexport class IframeBlock extends BaseNode {\r\n    // injected html codes, used to auto darkmode and send height message\r\n    static #injectedCodes = id => `\\\r\n<style>\r\n@media (prefers-color-scheme: dark) {\r\n  :root {\r\n    color: white;\r\n    background-color: #121212;\r\n  }\r\n}\r\n</style>\r\n<script>\r\nwindow.addEventListener(\"load\", (e) => {\r\n  const iframeRootEl = e.target.documentElement\r\n  const parent = window.parent\r\n  const height = parseFloat(getComputedStyle(iframeRootEl).height)\r\n  parent.postMessage({\r\n    height,\r\n    id: \"${id}\"\r\n  }, \"*\")\r\n})\r\n</script>`\r\n\r\n    constructor(content, description) {\r\n        super()\r\n\r\n        globalThis.__IframeCounter__ += 1\r\n        this.id = \"iframe_\" + globalThis.__IframeCounter__\r\n        this.description = description\r\n\r\n        if (typeof window == \"object\") {\r\n            // in browser\r\n            this.content = content + IframeBlock.#injectedCodes(this.id)\r\n        } else {\r\n            // in node.js\r\n            this.content = content\r\n        }\r\n    }\r\n\r\n    toHTML() {\r\n        const iframeEl = el(\"iframe\", this.description, {\r\n            id: this.id,\r\n            title: this.description,\r\n            srcdoc: this.content,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\n// --- --- --- ---\r\n// block nodes end\r\n// --- --- --- ---\r\n","export default function(line) {\r\n    let indentCount = 0\r\n    let spaceCount = 0\r\n\r\n    for (const ch of line) {\r\n        if (ch.match(/[^\\s\\t]/)) {\r\n            break\r\n        }\r\n\r\n        if (ch == \"\\t\") {\r\n            indentCount += 1\r\n            continue\r\n        }\r\n        if (ch == \" \") {\r\n            spaceCount += 1\r\n        }\r\n        if (spaceCount == 2) {\r\n            spaceCount = 0\r\n            indentCount += 1\r\n        }\r\n    }\r\n    return indentCount\r\n}\r\n","import { List } from \"../node.js\"\r\nimport getIndent from \"../utils/getIndent.js\"\r\n\r\nexport default function listResolver(currentLine, lines) {\r\n    const currentIndent = getIndent(currentLine)\r\n    const currentNode = new List(currentLine)\r\n\r\n    while (lines.length && List.isListPattern(lines[0])) {\r\n        const nextLine = lines.shift()\r\n        const nextIndent = getIndent(nextLine)\r\n        const isNextOrdered = List.orderedPattern(nextLine)\r\n\r\n        if (nextIndent > currentIndent) {\r\n            currentNode.push(listResolver(nextLine, lines))\r\n        } else if (nextIndent == currentIndent && isNextOrdered == currentNode.isOrdered) {\r\n            currentNode.push(List.getContent(nextLine, isNextOrdered))\r\n        } else {\r\n            lines.unshift(nextLine)\r\n            break\r\n        }\r\n    }\r\n    return currentNode\r\n}","import mdResolver from \"../index.js\"\r\nimport { Quote } from \"../node.js\"\r\n\r\nexport default function(firstLine, lines) {\r\n    let quotedContent = firstLine.slice(2) + \"\\n\"\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (Quote.pattern(l)) {\r\n            quotedContent += l.slice(2) + \"\\n\"\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n    const children = mdResolver(quotedContent)\r\n    const node = new Quote(children)\r\n    return node\r\n}\r\n","import { Table } from \"../node.js\"\r\n\r\n// input: \"| content | content |\"\"\r\n// output: [\"content\",\"content\"]\r\nfunction tableLineConverter(tableLine) {\r\n    const splited = tableLine.split(\"|\")\r\n    const result = splited\r\n        .filter(item => item.length > 0)\r\n        .map(item => item.trim())\r\n    return result\r\n}\r\n\r\nexport default function(firstLine, lines) {\r\n    const headerText = firstLine\r\n    const contentLines = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (Table.pattern(l)) {\r\n            contentLines.push(l)\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n\r\n    const headerCells = tableLineConverter(headerText)\r\n    const contentRows = contentLines.map(tableLineConverter)\r\n    const tableNode = new Table(headerCells, contentRows)\r\n    return tableNode\r\n}\r\n","import { CodeBlock, DetailsBlock, FormulaBlock, Iframe, IframeBlock } from \"../node.js\"\r\n\r\nfunction blockResolverGenerator(endSign, targetClass) {\r\n    return function(firstLine, lines) {\r\n        const description = firstLine.slice(3)\r\n\r\n        let content = \"\"\r\n        while (lines.length) {\r\n            const l = lines.shift()\r\n\r\n            if (l == endSign) {\r\n                break\r\n            }\r\n\r\n            content += l + \"\\n\"\r\n        }\r\n        return new targetClass(content, description)\r\n    }\r\n}\r\n\r\nexport const codeResolver = blockResolverGenerator(\"```\", CodeBlock)\r\nexport const detailsResolver = blockResolverGenerator(\">>>\", DetailsBlock)\r\nexport const formulaResolver = blockResolverGenerator(\"$$$\", FormulaBlock)\r\nexport function iframeResolver(firstLine, lines) {\r\n    const blockResolver = blockResolverGenerator(\"@@@\", IframeBlock)\r\n\r\n    if (!firstLine.startsWith(\"@@@\")) {\r\n        // link to out resource\r\n        return new Iframe(firstLine)\r\n    }\r\n    return blockResolver(firstLine, lines)\r\n}\r\n","import {\r\n    Headline, Quote, Divider,\r\n    List, Para, Table,\r\n    Image, Audio, Video,\r\n    FormulaBlock, CodeBlock,\r\n    isIframePattern,\r\n    DetailsBlock\r\n} from \"./node.js\"\r\nimport {\r\n    listResolver, quoteResolver, tableResolver,\r\n    codeResolver, formulaResolver, iframeResolver, detailsResolver,\r\n} from \"./resolvers/index.js\"\r\nimport getLines from \"./utils/getLines.js\"\r\n\r\nexport default function mdResolver(source) {\r\n    const lines = getLines(source)\r\n    const nodes = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l.length == 0) {\r\n            continue\r\n        }\r\n\r\n        if (Headline.pattern(l)) {\r\n            nodes.push(new Headline(l))\r\n        } else\r\n        if (Divider.pattern(l)) {\r\n            nodes.push(new Divider)\r\n        } else\r\n        if (Quote.pattern(l)) {\r\n            nodes.push(quoteResolver(l, lines))\r\n        } else\r\n        if (List.isListPattern(l)) {\r\n            nodes.push(listResolver(l, lines))\r\n        } else\r\n        if (Table.pattern(l)) {\r\n            nodes.push(tableResolver(l, lines))\r\n        } else\r\n        if (Image.pattern(l)) {\r\n            nodes.push(new Image(l))\r\n        } else\r\n        if (Audio.pattern(l)) {\r\n            nodes.push(new Audio(l))\r\n        } else\r\n        if (Video.pattern(l)) {\r\n            nodes.push(new Video(l))\r\n        } else\r\n        if (DetailsBlock.pattern(l)) {\r\n            nodes.push(detailsResolver(l, lines))\r\n        } else\r\n        if (FormulaBlock.pattern(l)) {\r\n            nodes.push(formulaResolver(l, lines))\r\n        } else\r\n        if (CodeBlock.pattern(l)) {\r\n            nodes.push(codeResolver(l, lines))\r\n        } else\r\n        if (isIframePattern(l)) {\r\n            nodes.push(iframeResolver(l, lines))\r\n        } else {\r\n            nodes.push(new Para(l))\r\n        }\r\n    }\r\n    return nodes\r\n}","export default function(source) {\r\n    if (source.indexOf(\"\\r\") != -1) {\r\n        return source.split(\"\\r\\n\")\r\n    } else {\r\n        return source.split(\"\\n\")\r\n    }\r\n}","import config from \"../../build.config.js\"\r\n\r\nconst { katexOptions } = config\r\n\r\nlet hljs  = null\r\nlet katex = null\r\n\r\nexport async function importHighlighter() {\r\n    function importLangDefs() {\r\n        // dynamically import language definitions\r\n        const languageListArr = Array.from(globalThis.__LanguageList__)\r\n        const langDefImporters = languageListArr\r\n            .filter(name => !hljs.getLanguage(name))\r\n            .map(lang => import(`../libs/highlight-es/languages/${lang.toLowerCase()}.js`))\r\n\r\n        Promise.all(langDefImporters)\r\n            .then(langDefs => langDefs.forEach((defModule, index) => {\r\n                const name = languageListArr[index]\r\n                const def  = defModule.default\r\n                hljs.registerLanguage(name, def)\r\n            }))\r\n            .then(() => hljs.highlightAll())\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    if (globalThis.__LanguageList__.size == 0) {\r\n        // no code blocks\r\n        return\r\n    }\r\n    if (hljs) {\r\n        importLangDefs()\r\n        return\r\n    }\r\n\r\n    // import highlight.js itself\r\n    await import(\"../libs/highlight-es/highlight.js\")\r\n        .then(module => hljs = module.default)\r\n        .then(importLangDefs)\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport async function importTexRenderer() {\r\n    function renderFormula() {\r\n        // render all formula element\r\n        document.querySelectorAll(\".math\")\r\n            .forEach(el => katex.render(el.textContent, el, katexOptions))\r\n    }\r\n\r\n    if (!globalThis.__ContainsFormula__) {\r\n        // no formula\r\n        return\r\n    }\r\n    if (katex) {\r\n        renderFormula()\r\n        return\r\n    }\r\n\r\n    const tasks = [import(\"../libs/katex/katex.js\"), fetch(\"dist/katex.min.css\")]\r\n    await Promise.all(tasks)\r\n        .then(([module, cssRes]) => {\r\n            // set katex js module & render\r\n            katex = module.default\r\n            renderFormula()\r\n            return cssRes.text()\r\n        })\r\n        .then(cssText => {\r\n            // set katex css\r\n            const style = document.createElement(\"style\")\r\n            style.textContent = cssText\r\n            document.head.appendChild(style)\r\n        })\r\n        .catch(err => console.error(err))\r\n}","import keydownEvent from \"./keydownEvent.js\"\r\nimport { importHighlighter, importTexRenderer } from \"./importer.js\"\r\nimport el from \"./markdown/utils/el.js\"\r\nimport mdResolver from \"./markdown/index.js\"\r\n\r\nconst articleEl        = document.querySelector(\"article:not(#directory-description)\")\r\nconst mainEl           = document.querySelector(\"main\")\r\nconst dirDescriptionEl = mainEl.querySelector(\"#directory-description\")\r\nconst parentDirBtn     = mainEl.querySelector(\"#previous-dir li\")\r\nconst articleList      = mainEl.querySelector(\"#article-list\")\r\n\r\n// ----------------\r\n// article renderer\r\n// ----------------\r\n\r\narticleEl.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n    if (target.tagName == \"IMG\") {\r\n        window.open(target.src)\r\n    }\r\n})\r\n\r\nfunction mdEntry(mdContent) {\r\n    // language names to import\r\n    globalThis.__LanguageList__ = new Set()\r\n    // to deside whether to import `katex`\r\n    globalThis.__ContainsFormula__ = false\r\n    // used to dynamic generate iframe id\r\n    globalThis.__IframeCounter__ = 0\r\n\r\n    const structure = mdResolver(mdContent)\r\n\r\n    let resultNodes = structure\r\n        .map(node => node.toHTML())\r\n    if (!resultNodes.length) {\r\n        resultNodes = el(\"h1\", \"404 Not Found\")\r\n    }\r\n    return resultNodes\r\n}\r\n\r\nexport function articleRender(articleContent) {\r\n    const resultNodes = mdEntry(articleContent)\r\n    articleEl.innerHTML = \"\"\r\n    resultNodes.forEach(el => articleEl.appendChild(el))\r\n\r\n    mainEl.style.display = \"none\"\r\n    articleEl.style.display = \"block\"\r\n    articleEl.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n    // return to the top\r\n    document.body.scrollTop = 0\r\n    document.documentElement.scrollTop = 0\r\n\r\n    importHighlighter().then(() => globalThis.__LanguageList__ = null)\r\n    importTexRenderer().then(() => globalThis.__ContainsFormula__ = false)\r\n}\r\n\r\n// --------------\r\n// index renderer\r\n// --------------\r\n\r\nparentDirBtn.addEventListener(\"click\", () => {\r\n    const splited = location.hash.split(\"/\")\r\n    globalThis.__CurrentPage__ = 1\r\n    location.hash = splited.slice(0, -2).join(\"/\") + \"/\"\r\n})\r\narticleList.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n\r\n    if (target == articleList) {\r\n        // when click on the `articleList` itself\r\n        // ignore this event.\r\n        return\r\n    }\r\n\r\n    if (!target.getAttribute(\"data-target-blog\")) {\r\n        if (target.innerText.endsWith(\"/\")) {\r\n            // open directory\r\n            globalThis.__CurrentPage__ = 1\r\n        }\r\n        location.hash += target.innerText\r\n    } else {\r\n        // in `newest` page\r\n        globalThis.__CurrentPage__ = 1\r\n        location.hash = target.getAttribute(\"data-target-blog\")\r\n    }\r\n})\r\n\r\nexport function indexRender(indexing, itemResolver) {\r\n    // calculate properties\r\n    const {current, total} = indexing\r\n    let isFirstPage = false\r\n    let isLastPage = false\r\n    let isOnlyPage = false\r\n    if (total == 1) {\r\n        isOnlyPage = true\r\n    } else {\r\n        if (current == 1) {\r\n            isFirstPage = true\r\n        }\r\n        if (current == total) {\r\n            isLastPage = true\r\n        }\r\n    }\r\n    mainEl.setAttribute(\"data-is-first-page\", isFirstPage)\r\n    mainEl.setAttribute(\"data-is-last-page\", isLastPage)\r\n    mainEl.setAttribute(\"data-is-only-page\", isOnlyPage)\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    dirDescriptionEl.innerHTML = \"\"\r\n    if (\"directoryDescription\" in indexing) {\r\n        // render directory description\r\n        const resultNodes = mdEntry(indexing.directoryDescription)\r\n        resultNodes.forEach(el => dirDescriptionEl.appendChild(el))\r\n        dirDescriptionEl.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n            el.onkeydown = keydownEvent(el)\r\n        })\r\n\r\n        importHighlighter().then(() => globalThis.__LanguageList__ = null)\r\n        importTexRenderer().then(() => globalThis.__ContainsFormula__ = false)\r\n    }\r\n\r\n    // reset articleList content\r\n    articleList.innerHTML = \"\"\r\n    indexing.content\r\n        .map(itemResolver)\r\n        .forEach(el =>\r\n            articleList.appendChild(el)\r\n        )\r\n\r\n    // set keyboard event\r\n    articleList.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    articleEl.style.display = \"none\"\r\n    mainEl.style.display = \"block\"\r\n\r\n    // return to the top\r\n    document.body.scrollTop = 0\r\n    document.documentElement.scrollTop = 0\r\n}","import \"./styles/style.css\"\r\nimport \"./libs/katex/katex.css\"\r\n\r\nimport { fetchJSON, fetchMD } from \"./utils/fetchResources.js\"\r\nimport keydownEvent from \"./utils/keydownEvent.js\"\r\nimport mdResolver from \"./utils/markdown/index.js\"\r\nimport el from \"./utils/markdown/utils/el.js\"\r\nimport { articleRender, indexRender } from \"./utils/render.js\"\r\n\r\nglobalThis.__CurrentPage__ = 1\r\nconst indexDirPath = \"./.index/\"\r\n\r\n// ---------------------------\r\n// Buttons event setting start\r\n// ---------------------------\r\n\r\nconst lightBtn = document.querySelector(\"#light-btn\")\r\nconst darkBtn = document.querySelector(\"#dark-btn\")\r\nconst previousBtn = document.querySelector(\"button#previous\")\r\nconst nextBtn = document.querySelector(\"button#next\")\r\n\r\nlightBtn.onkeydown = keydownEvent(lightBtn)\r\ndarkBtn.onkeydown = keydownEvent(darkBtn)\r\npreviousBtn.addEventListener(\"click\", () => {\r\n    if (globalThis.__CurrentPage__ > 0) {\r\n        globalThis.__CurrentPage__ -= 1\r\n        hashEvent()\r\n    }\r\n})\r\nnextBtn.addEventListener(\"click\", () => {\r\n    globalThis.__CurrentPage__ += 1\r\n    hashEvent()\r\n})\r\n\r\n// -------------------------\r\n// Buttons event setting end\r\n// -------------------------\r\n\r\n\r\n// ---------------------\r\n// Hash controller start\r\n// ---------------------\r\n\r\nconst mainEl = document.querySelector(\"main\")\r\nconst articleList = document.getElementById(\"article-list\")\r\n\r\nasync function hashEvent() {\r\n    if (!location.hash) {\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    const hash = location.hash.slice(1) // remove '#'\r\n    articleList.classList.add(\"disabled\")\r\n\r\n    if (hash == \"newest/\") {\r\n        // open newest page\r\n        const newestIndex = await fetchJSON(indexDirPath + \"newest_\" + globalThis.__CurrentPage__)\r\n        indexRender(newestIndex, item => {\r\n            const dateEl  = el(\"code\", item.date)\r\n            const titleEl = el(\"span\", item.title)\r\n            return el(\"li\",\r\n                [dateEl, el(\"text\", \": \"), titleEl],\r\n                {\r\n                    tabindex: 0,\r\n                    \"data-target-blog\": item.link\r\n                }\r\n            )\r\n        })\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\"/\")) {\r\n        // open folder\r\n        const splited = hash.split(\"/\").slice(0, -1)\r\n        const indexFilePath = indexDirPath + splited.join(\"+\") + \"_\" + globalThis.__CurrentPage__\r\n        const index = await fetchJSON(indexFilePath)\r\n        indexRender(index, item =>\r\n            el(\"li\", el(\"span\", item), {\r\n                tabindex: 0\r\n            })\r\n        )\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\".md\")) {\r\n        // open article\r\n        const articleContent = await fetchMD(\"./\" + hash)\r\n        articleRender(articleContent)\r\n    } else {\r\n        // the hash \"#static/\" is the homepage\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    // delay this operation\r\n    mainEl.setAttribute(\"data-is-root\", hash == \"static/\")\r\n    articleList.classList.remove(\"disabled\")\r\n}\r\n\r\nwindow.onload = hashEvent\r\nwindow.addEventListener(\"hashchange\", hashEvent)\r\nwindow.addEventListener(\"message\", (e) => {\r\n    if (e.origin != \"null\") {\r\n        return\r\n    }\r\n    const { id, height } = e.data\r\n    const targetIframeEl = document.getElementById(id)\r\n    targetIframeEl.style.height = height + \"px\"\r\n}, false)\r\n\r\n// -------------------\r\n// Hash controller end\r\n// -------------------"],"names":["async","fetchJSON","path","fetch","then","res","json","catch","err","console","log","error","keydownEvent","el","e","key","click","config","homepage","footer","language","enableRSS","value","ignoreDir","enableNewest","pageCapacity","RSSCapacity","previewPort","katexOptions","tagName","content","props","globalThis","document","createTextNode","targetEl","createElement","val","Object","entries","setAttribute","propSetter","Array","childEl","appendChild","HTMLElement","Error","textContent","contentSetter","propToString","resultStrArr","valStr","toString","replaceAll","push","join","keyTermArray","KeyToken_TagName_map","Map","Token","constructor","type","this","static","Symbol","LinkToken","address","super","link","toHTML","startsWith","href","target","actualAddress","PhoneticToken","notation","phonetic","ignoredLeftParenthesis","ignoredRightParenthesis","cjkNotation","class","cjkText","getInterval","text","endSign","intervalText","isEscape","length","ch","slice","substr","inlineResolver","rawText","resultHTML","tokens","identifier","tagContent","token","get","includes","realTagName","className","split","__ContainsFormula__","convert","textTerm","keyTerm","textDisplay","linkDisplay","linkSelf","tokenize","BaseNode","inline","Headline","splited","numberSignStr","numberSignCount","source","match","Para","trimStart","Quote","children","innerNodes","map","node","Divider","List","isOrdered","Boolean","orderedPattern","getContent","child","childrenHTML","unorderedPattern","line","Table","headerCells","bodyRows","tableHeaderCell","tableBodyCell","tableHeaderRow","row","tableBodyRow","tableHeader","tableBody","MediaNode","description","mdText","containerGenerator","patternGenerator","identifierSign","endsWith","replaceContentGenerator","downloadEl","srcUrlResolver","rawUrl","actualUrl","location","hash","__ResourcePath__","Image","imageEl","src","alt","loading","tabindex","Audio","audioEl","controls","Video","videoEl","isIframePattern","Iframe","iframeEl","title","sandbox","CodeBlock","lang","window","append","__LanguageList__","add","codeEl","toUpperCase","DetailsBlock","summary","mdResolver","summaryEl","detailsEl","childrenEl","FormulaBlock","IframeBlock","id","__IframeCounter__","injectedCodes","srcdoc","getIndent","indentCount","spaceCount","listResolver","currentLine","lines","currentIndent","currentNode","isListPattern","nextLine","shift","nextIndent","isNextOrdered","unshift","quoteResolver","firstLine","quotedContent","l","pattern","tableLineConverter","tableLine","filter","item","trim","tableResolver","headerText","contentLines","contentRows","blockResolverGenerator","targetClass","codeResolver","detailsResolver","formulaResolver","iframeResolver","blockResolver","indexOf","getLines","nodes","hljs","katex","importHighlighter","importLangDefs","languageListArr","from","langDefImporters","name","getLanguage","__variableDynamicImportRuntime0__","toLowerCase","Promise","all","langDefs","forEach","defModule","index","def","default","registerLanguage","highlightAll","size","import","module","importTexRenderer","renderFormula","querySelectorAll","render","tasks","cssRes","cssText","style","head","articleEl","querySelector","mainEl","dirDescriptionEl","parentDirBtn","articleList","mdEntry","mdContent","Set","resultNodes","indexRender","indexing","itemResolver","current","total","isFirstPage","isLastPage","isOnlyPage","innerHTML","directoryDescription","onkeydown","display","body","scrollTop","documentElement","addEventListener","open","__CurrentPage__","getAttribute","innerText","indexDirPath","lightBtn","darkBtn","previousBtn","nextBtn","hashEvent","getElementById","classList","dateEl","date","titleEl","indexFilePath","articleContent","articleRender","status","reader","getReader","decoder","TextDecoder","totalData","processor","result","done","decode","stream","read","fetchMD","remove","onload","origin","height","data"],"mappings":"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"}