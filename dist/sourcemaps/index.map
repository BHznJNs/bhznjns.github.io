{"version":3,"file":"index.min.js","sources":["../src/utils/fetchResources.js","../src/utils/keydownEvent.js","../src/utils/markdown/utils/el.js","../src/utils/markdown/inline.js","../src/utils/markdown/node.js","../src/utils/markdown/resolvers/codeResolver.js","../src/utils/markdown/utils/getIndent.js","../src/utils/markdown/resolvers/listResolver.js","../src/utils/markdown/resolvers/quoteResolver.js","../src/utils/markdown/resolvers/tableResolver.js","../src/utils/markdown/resolvers/formulaResolver.js","../src/utils/markdown/resolvers/iframeResolver.js","../src/utils/markdown/index.js","../src/utils/markdown/utils/getLines.js","../src/utils/importer.js","../src/utils/render.js","../src/index.js"],"sourcesContent":["export async function fetchJSON(path) {\r\n    return await fetch(path)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            console.log(\"JSON request error: \" + path)\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport async function fetchMD(path) {\r\n    return await fetch(path)\r\n        .then(res => res.body)\r\n        .then(async body => {\r\n            const reader = body.getReader()\r\n            const decoder = new TextDecoder('utf-8');\r\n            let totalData = \"\";\r\n            const processor = (result) => {\r\n                if (result.done) {\r\n                    return totalData\r\n                }\r\n                totalData += decoder.decode(result.value, { stream: true })\r\n                return reader.read().then(processor);\r\n            }\r\n            const result = await reader.read();\r\n            return processor(result);\r\n        })\r\n        .catch(err => {\r\n            console.log(\"Markdown request error: \" + path)\r\n            console.error(err)\r\n        })\r\n}","export default function(el) {\r\n    return function(e) {\r\n        if (e.key == \"Enter\" || e.key == \" \") {\r\n            el.click()\r\n        }\r\n    }\r\n}\r\n","function propToString(props) {\r\n    const resultStrArr = []\r\n    for (const [key, val] of Object.entries(props)) {\r\n        resultStrArr.push(`${key}=\"${val.toString()}\"`)\r\n    }\r\n    return resultStrArr.join(\" \")\r\n}\r\n\r\nexport default (tagName, content, props) =>\r\n    `<${tagName}${props ? \" \" + propToString(props) : \"\"}>${content}</${tagName}>`\r\n","import el from \"./utils/el.js\"\r\n\r\n// identifier character array\r\nconst keyTermArray = [\r\n    \"#\",\r\n    \"`\",\r\n    \"_\",\r\n    \"/\",\r\n    \"-\",\r\n    \":\",\r\n    \",\",\r\n    \"'\",\r\n    \"$\",\r\n]\r\n// identifier character to HTML tag\r\nconst KeyToken_TagName_map = new Map([\r\n    [\"##\", \"strong\"],\r\n    [\"``\", \"code\"],\r\n    [\"__\", \"u\"],\r\n    [\"//\", \"i\"],\r\n    [\"--\", \"del\"],\r\n    [\"::\", \"span.dim\"],\r\n    [\",,\", \"sub\"],\r\n    [\"''\", \"sup\"],\r\n    [\"$$\", \"span.math\"],\r\n])\r\n\r\n// --- --- --- --- --- ---\r\n\r\nclass Token {\r\n    constructor(type, content) {\r\n        this.type = type\r\n        this.content = content\r\n    }\r\n\r\n    static key  = Symbol(\"key\")\r\n    static link = Symbol(\"link\")\r\n    static text = Symbol(\"text\")\r\n}\r\n\r\nclass LinkToken extends Token {\r\n    constructor(content, address) {\r\n        super()\r\n\r\n        this.type = Token.link\r\n        this.content = content\r\n        this.address = address\r\n    }\r\n\r\n    toHTML() {\r\n        if (this.address.startsWith(\"http\")) {\r\n            // internet links\r\n            return `<a href=\"${this.address}\" target=\"_blank\">${this.content}</a>`\r\n        }\r\n\r\n        // static resources or links\r\n        const actualAddress = \"static/\" + this.address\r\n        return `<a href=\"#${actualAddress}\">${this.content}</a>`    \r\n    }\r\n}\r\n\r\n// --- --- --- --- --- ---\r\n\r\n// (\"abc]\", \"]\") -> \"abc\"\r\nexport function getInterval(text, endSign) {\r\n    let intervalText = \"\"\r\n    let isEscape = false\r\n\r\n    while (text.length) {\r\n        const ch = text.slice(0, 1)\r\n        text = text.substr(1)\r\n\r\n        if (ch == \"\\\\\") {\r\n            isEscape = !isEscape\r\n            continue\r\n        }\r\n        if (ch == endSign && !isEscape) {\r\n            break\r\n        }\r\n        intervalText += ch\r\n        isEscape = false\r\n    }\r\n\r\n    return intervalText\r\n}\r\n\r\nfunction tokenize(text) {\r\n    const tokens = []\r\n    let textTerm = \"\"\r\n    let keyTerm  = \"\"\r\n    let isEscape = false\r\n\r\n    while (text.length) {\r\n        const ch = text.slice(0, 1)\r\n        text = text.substr(1)\r\n\r\n        // link resolve\r\n        if (ch == \"[\" && !isEscape) {\r\n            tokens.push(new Token(Token.text, textTerm))\r\n            textTerm = \"\"\r\n\r\n            const linkDisplay = getInterval(text, \"]\")\r\n            text = text.substr(linkDisplay.length + 1)\r\n\r\n            let ch = text.slice(0, 1)\r\n            text = text.substr(1)\r\n            if (ch == \"(\" && !isEscape) {\r\n                const linkSelf = getInterval(text, \")\")\r\n                text = text.substr(linkSelf.length + 1)\r\n                tokens.push(new LinkToken(linkDisplay, linkSelf))\r\n            }\r\n            continue\r\n        }\r\n\r\n        if (keyTermArray.includes(ch) && !isEscape) {\r\n            // keyTerm = \"#\" && ch = \"#\"\r\n            if (keyTerm.length && keyTerm == ch) {\r\n                tokens.push(new Token(Token.text, textTerm))\r\n                tokens.push(new Token(Token.key , keyTerm + ch))\r\n                keyTerm  = \"\"\r\n                textTerm = \"\"\r\n            } else {\r\n                keyTerm = ch\r\n            }\r\n        } else {\r\n            if (ch == \"\\\\\") {\r\n                isEscape = !isEscape\r\n                continue\r\n            }\r\n            if (keyTerm.length) {\r\n                textTerm += keyTerm\r\n                keyTerm = \"\"\r\n            }\r\n            isEscape = false\r\n            textTerm += ch\r\n        }\r\n    }\r\n\r\n    if (textTerm.length) {\r\n        tokens.push(new Token(Token.text, textTerm))\r\n    }\r\n    if (keyTerm.length) {\r\n        tokens.push(new Token(Token.text, keyTerm))\r\n    }\r\n\r\n    return tokens\r\n}\r\n\r\nfunction convert(tokens) {\r\n    let resultHTML = \"\"\r\n    let identifier = \"\"\r\n    let tagContent = \"\"\r\n\r\n    for (const token of tokens) {\r\n        switch (token.type) {\r\n            case Token.key:\r\n                if (identifier.length && token.content == identifier) {\r\n                    const tagName = KeyToken_TagName_map.get(identifier)\r\n                    if (tagName.includes(\".\")) {\r\n                        const [realTagName, className] = tagName.split(\".\")\r\n                        if (identifier == \"$$\") {\r\n                            // formula sign\r\n                            globalThis.__ContainsFormula__ = true\r\n                        }\r\n                        resultHTML += el(realTagName, tagContent, {\r\n                            \"class\": className\r\n                        })\r\n                    } else {\r\n                        resultHTML += el(tagName, tagContent)\r\n                    }\r\n\r\n                    identifier = \"\"\r\n                    tagContent = \"\"\r\n                } else {\r\n                    identifier = token.content\r\n                }\r\n                break\r\n            case Token.text:\r\n                if (!identifier.length) {\r\n                    resultHTML += token.content\r\n                } else {\r\n                    tagContent = token.content\r\n                }\r\n                break\r\n            case Token.link:\r\n                resultHTML += token.toHTML()\r\n                break\r\n        }\r\n    }\r\n    return resultHTML\r\n}\r\n\r\nexport default function(rawText) {\r\n    const tokens = tokenize(rawText)\r\n    const resultHTML = convert(tokens)\r\n    return resultHTML\r\n}\r\n","import inlineResolver, { getInterval } from \"./inline.js\"\r\nimport el from \"./utils/el.js\"\r\n\r\nclass BaseNode {\r\n    tagName = \"\"\r\n    content = \"\"\r\n\r\n    toHTML() {\r\n        const inline = inlineResolver(this.content)\r\n        return el(this.tagName, inline)\r\n    }\r\n}\r\n\r\nexport class Headline extends BaseNode {\r\n    constructor(content) {\r\n        super()\r\n\r\n        // \"### test\" -> \"###\"\r\n        const splited = content.split(\" \")\r\n        const numberSignStr = splited[0]\r\n        let numberSignCount = 0\r\n        for (const ch of numberSignStr) {\r\n            if (ch == '#') {\r\n                numberSignCount += 1\r\n            }\r\n        }\r\n\r\n        if (numberSignCount > 6) {\r\n            numberSignCount = 0\r\n        }\r\n\r\n        this.tagName = \"h\" + numberSignCount\r\n        this.content = splited.slice(1).join(\" \")\r\n    }\r\n\r\n    static pattern = source => source.match(/^(#+ )/)\r\n}\r\n\r\nexport class Para extends BaseNode {\r\n    tagName = \"p\"\r\n\r\n    constructor(content) {\r\n        super()\r\n        this.content = content.trimStart()\r\n    }\r\n}\r\n\r\nexport class Quote extends BaseNode {\r\n    tagName = \"blockquote\"\r\n    children = []\r\n\r\n    constructor(children) {\r\n        super()\r\n        this.children = children\r\n    }\r\n    toHTML() {\r\n        const innerHTML = this.children\r\n            .map(node =>\r\n                node.toHTML()\r\n            ).join(\"\")\r\n        return el(this.tagName, innerHTML)\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"> \")\r\n}\r\n\r\nexport class Divider extends BaseNode {\r\n    toHTML = () => \"<hr>\"\r\n    static pattern = source =>\r\n        source.match(/(-\\s*-\\s*-)|(\\*\\s*\\*\\s*\\*)/) && !source.match(/[a-zA-Z0-9]/)\r\n}\r\n\r\nexport class List extends BaseNode {\r\n    children = []\r\n\r\n    constructor(content) {\r\n        super()\r\n\r\n        this.isOrdered = Boolean(List.orderedPattern(content))\r\n        this.tagName   = (this.isOrdered) ? \"ol\" : \"ul\"\r\n        this.children  = [List.getContent(content, this.isOrdered)]\r\n    }\r\n\r\n    push = child => this.children.push(child)\r\n\r\n    toHTML() {\r\n        const childrenHTML = []\r\n        for (const child of this.children) {\r\n            if (typeof child == \"string\") {\r\n                const inline = inlineResolver(child)\r\n                childrenHTML.push(`<li>${inline}</li>`)\r\n            } else {\r\n                childrenHTML.push(child.toHTML())\r\n            }\r\n        }\r\n        const innerHTML = childrenHTML.join(\"\")\r\n        return el(this.tagName, innerHTML)\r\n    }\r\n\r\n    static unorderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[+-]+ )/))\r\n    static orderedPattern = (source) => Boolean(source.match(/^([\\s\\t]*[0-9]+. )/))\r\n\r\n    static isListPattern = (source) =>\r\n        List.orderedPattern(source) || List.unorderedPattern(source)\r\n\r\n    static getContent(line, isOrdered) {\r\n        if (isOrdered) {\r\n            // \"1. ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[0-9]+. )).+$/g)[0]\r\n        } else {\r\n            // \"- ...\" => \"...\"\r\n            return line.match(/(?<=^([\\s\\t]*[+-]+ )).+$/g)[0]\r\n        }\r\n    }\r\n}\r\n\r\nexport class TableBlock extends BaseNode {\r\n    headerCells = [\"\"]   // [string]\r\n    bodyRows    = [[\"\"]] // [[string]]\r\n\r\n    constructor(headerCells, bodyRows) {\r\n        super()\r\n\r\n        this.headerCells = headerCells\r\n        this.bodyRows    = bodyRows\r\n    }\r\n\r\n    #tableHeaderCell = content => el(\"th\", content)\r\n    #tableBodyCell   = content => el(\"td\", inlineResolver(content))\r\n    #tableHeaderRow  = row => el(\"tr\", row.map(this.#tableHeaderCell).join(\"\"))\r\n    #tableBodyRow    = row => el(\"tr\", row.map(this.#tableBodyCell).join(\"\"))\r\n\r\n    toHTML() {\r\n        const tableHeader = el(\r\n            \"thead\",\r\n            this.#tableHeaderRow(this.headerCells)\r\n        )\r\n        const tableBody = el(\r\n            \"tbody\",\r\n            this.bodyRows\r\n                .map(this.#tableBodyRow)\r\n                .join(\"\")\r\n        )\r\n        return el(\"table\", tableHeader + tableBody)\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"| \")\r\n}\r\n\r\nexport class CodeBlock extends BaseNode {\r\n    constructor(content, lang) {\r\n        super()\r\n\r\n        this.lang = lang\r\n        this.content = content\r\n            .replaceAll(\"<\", \"&lt;\")\r\n            .replaceAll(\">\", \"&gt;\")\r\n    }\r\n    append(content) {\r\n        this.content += content\r\n    }\r\n    toHTML() {\r\n        if (typeof window == \"object\") {\r\n            globalThis.__LanguageList__.add(this.lang)\r\n        }\r\n        const codeEl = el(\r\n            \"code\",\r\n            this.content,\r\n            {\r\n                \"class\": `language-${this.lang}`,\r\n                \"data-language\": this.lang.toUpperCase(),\r\n            }\r\n        )\r\n        return el(\"pre\", codeEl)\r\n    }\r\n\r\n    static pattern = source => source.startsWith(\"```\")\r\n}\r\n\r\nexport class FormulaBlock extends BaseNode {\r\n    tagName = \"div\"\r\n    content = \"\"\r\n\r\n    constructor(content) {\r\n        super()\r\n\r\n        this.content = content\r\n        globalThis.__ContainsFormula__ = true\r\n    }\r\n    toHTML = () => el(this.tagName, this.content, {\r\n        \"class\": \"math\"\r\n    })\r\n\r\n    static pattern = source =>\r\n        source.startsWith(\"$$$\")\r\n}\r\n\r\n// --- --- --- --- -\r\n// media nodes start\r\n// --- --- --- --- -\r\n\r\nclass MediaNode extends BaseNode {\r\n    source = \"\"\r\n    description = \"\"    \r\n    constructor(mdText) {\r\n        super()\r\n\r\n        mdText = mdText.substr(2)\r\n        this.description = getInterval(mdText, \"]\")\r\n        mdText = mdText.substr(this.description.length + 2)\r\n        this.source = getInterval(mdText, \")\")\r\n    }\r\n\r\n    static containerGenerator(content) {\r\n        return el(\"div\", content, {\r\n            \"class\": \"media-container\"\r\n        })\r\n    }\r\n\r\n    static patternGenerator(identifierSign) {\r\n        return (source) =>\r\n            source.startsWith(identifierSign + \"[\") && source.endsWith(\")\")\r\n    }\r\n\r\n    static replaceContentGenerator(href, description) {\r\n        const downloadElCN = el(\"a\", \"从这里下载！\", { href })\r\n        const downloadElEN = el(\"a\", \"Download this!\", { href })\r\n        const replaceContent = `${description}<br>${downloadElCN}<br>${downloadElEN}`\r\n        return replaceContent\r\n    }\r\n\r\n    static srcUrlResolver(rawUrl) {\r\n        let actualUrl\r\n        if (rawUrl.startsWith(\"http\")) {\r\n            actualUrl = rawUrl\r\n        } else {\r\n            if (\"location\" in globalThis) {\r\n                // in browser\r\n                const hash = location.hash.slice(1)\r\n                // get the parent directory path\r\n                const currentPath = hash.split(\"/\").slice(0, -1).join(\"/\")\r\n                actualUrl = currentPath + \"/\" + rawUrl\r\n            } else {\r\n                // in nodejs\r\n                const path = globalThis.__ResourcePath__\r\n                actualUrl = path + \"/\" + rawUrl\r\n            }\r\n        }\r\n        return actualUrl\r\n    }\r\n}\r\n\r\nexport class ImageBlock extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"!\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const imageEl = `<img src=\"${actualUrl}\" alt=\"${this.description}\" loading=\"lazy\" tabindex=\"0\">`\r\n        return MediaNode.containerGenerator(imageEl)\r\n    }\r\n}\r\n\r\nexport class AudioBlock extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\":\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const audioEl = el(\"audio\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: true,\r\n        })\r\n        return MediaNode.containerGenerator(audioEl)\r\n    }\r\n}\r\n\r\nexport class VideoBlock extends MediaNode {\r\n    static pattern = MediaNode.patternGenerator(\"?\")\r\n\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const replaceContent = MediaNode.replaceContentGenerator(actualUrl, this.description)\r\n        const videoEl = el(\"video\", replaceContent, {\r\n            src: actualUrl,\r\n            controls: \"true\",\r\n        })\r\n        return MediaNode.containerGenerator(videoEl)\r\n    }\r\n}\r\n\r\nexport const isIframePattern = (source) =>\r\n    MediaNode.patternGenerator(\"@\")(source)\r\n    || source.startsWith(\"@@@\")\r\n\r\nexport class IframeInline extends BaseNode {\r\n    tagName = \"iframe\"\r\n\r\n    constructor(content, description) {\r\n        super()\r\n\r\n        this.content = content\r\n        this.description = description\r\n    }\r\n\r\n    toHTML() {\r\n        const iframeEl = el(this.tagName, this.description, {\r\n            title: this.description,\r\n            srcdoc: this.content,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\nexport class IframeBlock extends MediaNode {\r\n    toHTML() {\r\n        const actualUrl = MediaNode.srcUrlResolver(this.source)\r\n        const iframeEl = el(\"iframe\", this.description, {\r\n            src: actualUrl,\r\n            title: this.description,\r\n            sandbox: \"allow-scripts\",\r\n        })\r\n        return MediaNode.containerGenerator(iframeEl)\r\n    }\r\n}\r\n\r\n// --- --- --- ---\r\n// media nodes end\r\n// --- --- --- ---\r\n","import { CodeBlock } from \"../node.js\"\r\n\r\nexport default function(firstLine, lines) {\r\n    const lang = firstLine.slice(3)\r\n    let codeContent = \"\"\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l == \"```\") {\r\n            break\r\n        }\r\n\r\n        codeContent += l + \"\\n\"\r\n    }\r\n    return new CodeBlock(codeContent, lang)\r\n}","export default function(line) {\r\n    let indentCount = 0\r\n    let spaceCount = 0\r\n\r\n    for (const ch of line) {\r\n        if (ch.match(/[^\\s\\t]/)) {\r\n            break\r\n        }\r\n\r\n        if (ch == \"\\t\") {\r\n            indentCount += 1\r\n            continue\r\n        }\r\n        if (ch == \" \") {\r\n            spaceCount += 1\r\n        }\r\n        if (spaceCount == 2) {\r\n            spaceCount = 0\r\n            indentCount += 1\r\n        }\r\n    }\r\n    return indentCount\r\n}\r\n","import { List } from \"../node.js\"\r\nimport getIndent from \"../utils/getIndent.js\"\r\n\r\nexport default function listResolver(currentLine, lines) {\r\n    const currentIndent = getIndent(currentLine)\r\n    const currentNode = new List(currentLine)\r\n\r\n    while (lines.length && List.isListPattern(lines[0])) {\r\n        const nextLine = lines.shift()\r\n        const nextIndent = getIndent(nextLine)\r\n        const isNextOrdered = List.orderedPattern(nextLine)\r\n\r\n        if (nextIndent > currentIndent) {\r\n            currentNode.push(listResolver(nextLine, lines))\r\n        } else if (nextIndent == currentIndent && isNextOrdered == currentNode.isOrdered) {\r\n            currentNode.push(List.getContent(nextLine, isNextOrdered))\r\n        } else {\r\n            lines.unshift(nextLine)\r\n            break\r\n        }\r\n    }\r\n    return currentNode\r\n}","import mdResolver from \"../index.js\"\r\nimport { Quote } from \"../node.js\"\r\n\r\nexport default function(firstLine, lines) {\r\n    let quotedContent = firstLine.slice(2) + \"\\n\"\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (Quote.pattern(l)) {\r\n            quotedContent += l.slice(2) + \"\\n\"\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n    const children = mdResolver(quotedContent)\r\n    const node = new Quote(children)\r\n    return node\r\n}","import { TableBlock } from \"../node.js\"\r\n\r\n// input: \"| content | content |\"\"\r\n// output: [\"content\",\"content\"]\r\nfunction tableLineConverter(tableLine) {\r\n    const splited = tableLine.split(\"|\")\r\n    const result = splited\r\n        .filter(item => item.length > 0)\r\n        .map(item => item.trim())\r\n    return result\r\n}\r\n\r\nexport default function(firstLine, lines) {\r\n    const headerText = firstLine\r\n    const contentLines = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (TableBlock.pattern(l)) {\r\n            contentLines.push(l)\r\n        } else {\r\n            lines.unshift(l)\r\n            break\r\n        }\r\n    }\r\n\r\n    const headerCells = tableLineConverter(headerText)\r\n    const contentRows = contentLines.map(tableLineConverter)\r\n    const tableNode = new TableBlock(headerCells, contentRows)\r\n    return tableNode\r\n}\r\n","import { FormulaBlock } from \"../node.js\"\r\n\r\nexport default function(_, lines) {\r\n    let formulaContent = \"\"\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l == \"$$$\") {\r\n            break\r\n        }\r\n\r\n        formulaContent += l + \"\\n\"\r\n    }\r\n    return new FormulaBlock(formulaContent)\r\n}\r\n","import { IframeBlock, IframeInline } from \"../node.js\"\r\n\r\nexport default function(firstLine, lines) {\r\n    if (!firstLine.startsWith(\"@@@\")) {\r\n        // link to out resource\r\n        return new IframeBlock(firstLine)\r\n    }\r\n\r\n    // inline HTML\r\n    const description = firstLine.slice(3)\r\n    let iframeContent = \"\"\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l == \"@@@\") {\r\n            break\r\n        }\r\n\r\n        iframeContent += l + \"\\n\"\r\n    }\r\n    return new IframeInline(iframeContent, description)\r\n}","import {\r\n    Headline, Quote, Divider,\r\n    List, CodeBlock, Para,\r\n    TableBlock, FormulaBlock,\r\n    ImageBlock, AudioBlock, VideoBlock, isIframePattern\r\n} from \"./node.js\"\r\nimport {\r\n    codeResolver,\r\n    listResolver,\r\n    quoteResolver,\r\n    tableResolver,\r\n    formulaResolver,\r\n    iframeResolver\r\n} from \"./resolvers/index.js\"\r\nimport getLines from \"./utils/getLines.js\"\r\n\r\nexport default function mdResolver(source) {\r\n    const lines = getLines(source)\r\n    const nodes = []\r\n\r\n    while (lines.length) {\r\n        const l = lines.shift()\r\n\r\n        if (l.length == 0) {\r\n            continue\r\n        }\r\n\r\n        if (Headline.pattern(l)) {\r\n            nodes.push(new Headline(l))\r\n        } else\r\n        if (Divider.pattern(l)) {\r\n            nodes.push(new Divider)\r\n        } else\r\n        if (Quote.pattern(l)) {\r\n            nodes.push(quoteResolver(l, lines))\r\n        } else\r\n        if (List.isListPattern(l)) {\r\n            nodes.push(listResolver(l, lines))\r\n        } else\r\n        if (CodeBlock.pattern(l)) {\r\n            nodes.push(codeResolver(l, lines))\r\n        } else \r\n        if (TableBlock.pattern(l)) {\r\n            nodes.push(tableResolver(l, lines))\r\n        } else\r\n        if (FormulaBlock.pattern(l)) {\r\n            nodes.push(formulaResolver(l, lines))\r\n        } else\r\n        if (ImageBlock.pattern(l)) {\r\n            nodes.push(new ImageBlock(l))\r\n        } else\r\n        if (AudioBlock.pattern(l)) {\r\n            nodes.push(new AudioBlock(l))\r\n        } else\r\n        if (VideoBlock.pattern(l)) {\r\n            nodes.push(new VideoBlock(l))\r\n        } else\r\n        if (isIframePattern(l)) {\r\n            nodes.push(iframeResolver(l, lines))\r\n        } else {\r\n            nodes.push(new Para(l))\r\n        }\r\n    }\r\n    return nodes\r\n}","export default function(source) {\r\n    if (source.indexOf(\"\\r\") != -1) {\r\n        return source.split(\"\\r\\n\")\r\n    } else {\r\n        return source.split(\"\\n\")\r\n    }\r\n}","let hljs  = null\r\nlet katex = null\r\n\r\nexport async function importHighlighter() {\r\n    function importLangDefs() {\r\n        // dynamically import language definitions\r\n        const languageListArr = Array.from(globalThis.__LanguageList__)\r\n        const langDefImporters = languageListArr\r\n            .filter(name => !hljs.getLanguage(name))\r\n            .map(lang => import(`../libs/highlight-es/languages/${lang.toLowerCase()}.js`))\r\n\r\n        Promise.all(langDefImporters)\r\n            .then(langDefs => langDefs.forEach((defModule, index) => {\r\n                const name = languageListArr[index]\r\n                const def  = defModule.default\r\n                hljs.registerLanguage(name, def)\r\n            }))\r\n            .then(() => hljs.highlightAll())\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    if (globalThis.__LanguageList__.size == 0) {\r\n        // no code blocks\r\n        return\r\n    }\r\n\r\n    if (hljs) {\r\n        importLangDefs()\r\n        return\r\n    }\r\n\r\n    // import highlight.js itself\r\n    await import(\"../libs/highlight-es/highlight.js\")\r\n        .then(module => hljs = module.default)\r\n        .then(importLangDefs)\r\n        .catch(err => console.error(err))\r\n}\r\n\r\nexport async function importTexRenderer() {\r\n    function renderFormula() {\r\n        // render all formula element\r\n        document.querySelectorAll(\".math\")\r\n            .forEach(el => katex.render(el.textContent, el))\r\n    }\r\n\r\n    if (!globalThis.__ContainsFormula__) {\r\n        return\r\n    }\r\n    if (katex) {\r\n        renderFormula()\r\n        return\r\n    }\r\n\r\n    const tasks = [import(\"../libs/katex/katex.js\"), fetch(\"dist/katex.min.css\")]\r\n    await Promise.all(tasks)\r\n        .then(([module, cssRes]) => {\r\n            // set katex js module & render\r\n            katex = module.default\r\n            renderFormula()\r\n            return cssRes.text()\r\n        })\r\n        .then(cssText => {\r\n            // set katex css\r\n            const style = document.createElement(\"style\")\r\n            style.textContent = cssText\r\n            document.head.appendChild(style)\r\n        })\r\n        .catch(err => console.error(err))\r\n}","import keydownEvent from \"./keydownEvent.js\"\r\nimport { importHighlighter, importTexRenderer } from \"./importer.js\"\r\n\r\nconst articleEl    = document.querySelector(\"article\")\r\nconst mainEl       = document.querySelector(\"main\")\r\nconst parentDirBtn = mainEl.querySelector(\"#previous-dir li\")\r\nconst articleList  = mainEl.querySelector(\"#article-list\")\r\n\r\n// ----------------\r\n// article renderer\r\n// ----------------\r\n\r\narticleEl.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n    if (target.tagName == \"IMG\") {\r\n        window.open(target.src)\r\n    }\r\n})\r\n\r\nexport function mdRender(structure) {\r\n    // language names to import\r\n    globalThis.__LanguageList__ = new Set()\r\n    // to deside whether to import `katex`\r\n    globalThis.__ContainsFormula__ = false\r\n\r\n    let resultHTML = structure\r\n        .map(node => node.toHTML())\r\n        .join(\"\")\r\n    if (!resultHTML.length) {\r\n        resultHTML = \"<h1>空文章</h1>\"\r\n    }\r\n\r\n    mainEl.style.display = \"none\"\r\n    articleEl.style.display = \"block\"\r\n    articleEl.innerHTML = resultHTML\r\n\r\n    articleEl.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n\r\n    importHighlighter().then(() => globalThis.__LanguageList__ = null)\r\n    importTexRenderer().then(() => globalThis.__ContainsFormula__ = false)\r\n}\r\n\r\n// --------------\r\n// index renderer\r\n// --------------\r\n\r\nparentDirBtn.addEventListener(\"click\", () => {\r\n    const splited = location.hash.split(\"/\")\r\n    globalThis.__CurrentPage__ = 1\r\n    location.hash = splited.slice(0, -2).join(\"/\") + \"/\"\r\n})\r\narticleList.addEventListener(\"click\", (e) => {\r\n    const target = e.target\r\n\r\n    if (!target.getAttribute(\"data-target-blog\")) {\r\n        if (target.innerText.endsWith(\"/\")) {\r\n            globalThis.__CurrentPage__ = 1\r\n        }\r\n        location.hash += target.innerText\r\n    } else {\r\n        globalThis.__CurrentPage__ = 1\r\n        location.hash = target.getAttribute(\"data-target-blog\")\r\n    }\r\n})\r\n\r\nexport function indexRender(indexing, itemResolver) {\r\n    // calculate properties\r\n    const {current, total} = indexing\r\n    let isFirstPage = false\r\n    let isLastPage = false\r\n    let isOnlyPage = false\r\n    if (total == 1) {\r\n        isOnlyPage = true\r\n    } else {\r\n        if (current == 1) {\r\n            isFirstPage = true\r\n        }\r\n        if (current == total) {\r\n            isLastPage = true\r\n        }\r\n    }\r\n    mainEl.setAttribute(\"data-is-first-page\", isFirstPage)\r\n    mainEl.setAttribute(\"data-is-last-page\", isLastPage)\r\n    mainEl.setAttribute(\"data-is-only-page\", isOnlyPage)\r\n\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    // reset HTML content\r\n    articleList.innerHTML = indexing\r\n        .content\r\n        .map(itemResolver)\r\n        .join(\"\")\r\n    // set keyboard event\r\n    articleList.querySelectorAll(\"[tabindex='0']\").forEach((el) => {\r\n        el.onkeydown = keydownEvent(el)\r\n    })\r\n\r\n    // --- --- --- --- --- ---\r\n\r\n    articleEl.style.display = \"none\"\r\n    mainEl.style.display = \"block\"\r\n}","import \"./styles/style.css\"\r\nimport \"./libs/katex/katex.css\"\r\n\r\nimport { fetchJSON, fetchMD } from \"./utils/fetchResources.js\"\r\nimport keydownEvent from \"./utils/keydownEvent.js\"\r\nimport mdResolver from \"./utils/markdown/index.js\"\r\nimport el from \"./utils/markdown/utils/el.js\"\r\nimport { mdRender, indexRender } from \"./utils/render.js\"\r\n\r\nglobalThis.__CurrentPage__ = 1\r\nconst indexDirPath = \"./.index/\"\r\n\r\n// ---------------------------\r\n// Buttons event setting start\r\n// ---------------------------\r\n\r\nconst lightBtn = document.querySelector(\"#light-btn\")\r\nconst darkBtn = document.querySelector(\"#dark-btn\")\r\nconst previousBtn = document.querySelector(\"button#previous\")\r\nconst nextBtn = document.querySelector(\"button#next\")\r\n\r\nlightBtn.onkeydown = keydownEvent(lightBtn)\r\ndarkBtn.onkeydown = keydownEvent(darkBtn)\r\npreviousBtn.addEventListener(\"click\", () => {\r\n    if (globalThis.__CurrentPage__ > 0) {\r\n        globalThis.__CurrentPage__ -= 1\r\n        hashEvent()\r\n    }\r\n})\r\nnextBtn.addEventListener(\"click\", () => {\r\n    globalThis.__CurrentPage__ += 1\r\n    hashEvent()\r\n})\r\n\r\n// -------------------------\r\n// Buttons event setting end\r\n// -------------------------\r\n\r\n\r\n// ---------------------\r\n// Hash controller start\r\n// ---------------------\r\n\r\nconst mainEl = document.querySelector(\"main\")\r\nconst articleList = document.getElementById(\"article-list\")\r\n\r\nasync function hashEvent() {\r\n    if (!location.hash) {\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    const hash = location.hash.slice(1) // remove '#'\r\n    articleList.classList.add(\"disabled\")\r\n\r\n    if (hash == \"newest/\") {\r\n        // open newest page\r\n        const newestIndex = await fetchJSON(indexDirPath + \"newest_\" + globalThis.__CurrentPage__)\r\n        indexRender(newestIndex, item => {\r\n            const dateEl  = el(\"code\", item.date)\r\n            const titleEl = el(\"span\", item.title)\r\n            return el(\r\n                \"li\",\r\n                `${dateEl}: ${titleEl}`,\r\n                {\r\n                    tabindex: 0,\r\n                    \"data-target-blog\": item.link\r\n                }\r\n            )\r\n        })\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\"/\")) {\r\n        // open folder\r\n        const splited = hash.split(\"/\").slice(0, -1)\r\n        const indexFilePath = indexDirPath + splited.join(\"+\") + \"_\" + globalThis.__CurrentPage__\r\n        const index = await fetchJSON(indexFilePath)\r\n        indexRender(index, item =>\r\n            el(\"li\", el(\"span\", item), {\r\n                tabindex: 0\r\n            })\r\n        )\r\n    } else\r\n    if (hash.startsWith(\"static\") && hash.endsWith(\".md\")) {\r\n        // open article\r\n        const articleContent = await fetchMD(\"./\" + hash)\r\n        const structure = mdResolver(articleContent)\r\n        mdRender(structure)\r\n    } else {\r\n        location.hash = \"static/\"\r\n        return\r\n    }\r\n\r\n    // delay this operation\r\n    mainEl.setAttribute(\"data-is-root\", hash == \"static/\")\r\n    articleList.classList.remove(\"disabled\")\r\n}\r\n\r\nwindow.onload = hashEvent\r\nwindow.addEventListener(\"hashchange\", hashEvent)\r\n\r\n// -------------------\r\n// Hash controller end\r\n// -------------------"],"names":["async","fetchJSON","path","fetch","then","res","json","catch","err","console","log","error","keydownEvent","el","e","key","click","tagName","content","props","resultStrArr","val","Object","entries","push","toString","join","propToString","keyTermArray","KeyToken_TagName_map","Map","Token","constructor","type","this","static","Symbol","LinkToken","address","super","link","toHTML","startsWith","getInterval","text","endSign","intervalText","isEscape","length","ch","slice","substr","inlineResolver","rawText","resultHTML","tokens","identifier","tagContent","token","get","includes","realTagName","className","split","globalThis","__ContainsFormula__","class","convert","textTerm","keyTerm","linkDisplay","linkSelf","tokenize","BaseNode","inline","Headline","splited","numberSignStr","numberSignCount","source","match","Para","trimStart","Quote","children","innerHTML","map","node","Divider","List","isOrdered","Boolean","orderedPattern","getContent","child","childrenHTML","unorderedPattern","line","TableBlock","headerCells","bodyRows","tableHeaderCell","tableBodyCell","tableHeaderRow","row","tableBodyRow","tableHeader","tableBody","CodeBlock","lang","replaceAll","append","window","__LanguageList__","add","codeEl","toUpperCase","FormulaBlock","MediaNode","description","mdText","containerGenerator","patternGenerator","identifierSign","endsWith","replaceContentGenerator","href","srcUrlResolver","rawUrl","actualUrl","location","hash","__ResourcePath__","ImageBlock","imageEl","AudioBlock","replaceContent","audioEl","src","controls","VideoBlock","videoEl","isIframePattern","IframeInline","iframeEl","title","srcdoc","sandbox","IframeBlock","codeResolver","firstLine","lines","codeContent","l","shift","getIndent","indentCount","spaceCount","listResolver","currentLine","currentIndent","currentNode","isListPattern","nextLine","nextIndent","isNextOrdered","unshift","quoteResolver","quotedContent","pattern","mdResolver","tableLineConverter","tableLine","filter","item","trim","tableResolver","headerText","contentLines","contentRows","formulaResolver","_","formulaContent","iframeResolver","iframeContent","indexOf","getLines","nodes","hljs","katex","importHighlighter","importLangDefs","languageListArr","Array","from","langDefImporters","name","getLanguage","__variableDynamicImportRuntime0__","toLowerCase","Promise","all","langDefs","forEach","defModule","index","def","default","registerLanguage","highlightAll","size","import","module","articleEl","document","querySelector","mainEl","parentDirBtn","articleList","mdRender","structure","Set","style","display","querySelectorAll","onkeydown","renderFormula","render","textContent","tasks","cssRes","cssText","createElement","head","appendChild","importTexRenderer","indexRender","indexing","itemResolver","current","total","isFirstPage","isLastPage","isOnlyPage","setAttribute","addEventListener","target","open","__CurrentPage__","getAttribute","innerText","indexDirPath","lightBtn","darkBtn","previousBtn","nextBtn","hashEvent","getElementById","classList","dateEl","date","titleEl","tabindex","indexFilePath","body","reader","getReader","decoder","TextDecoder","totalData","processor","result","done","decode","value","stream","read","fetchMD","remove","onload"],"mappings":"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"}