{"version":3,"file":"perl.min.js","sources":["../../src/libs/highlight-es/languages/perl.js"],"sourcesContent":["/*\r\nLanguage: Perl\r\nAuthor: Peter Leonov <gojpeg@yandex.ru>\r\nWebsite: https://www.perl.org\r\nCategory: common\r\n*/\r\n\r\n/** @type LanguageFn */\r\nexport default function(hljs) {\r\n  const regex = hljs.regex;\r\n  const KEYWORDS = [\r\n    'abs',\r\n    'accept',\r\n    'alarm',\r\n    'and',\r\n    'atan2',\r\n    'bind',\r\n    'binmode',\r\n    'bless',\r\n    'break',\r\n    'caller',\r\n    'chdir',\r\n    'chmod',\r\n    'chomp',\r\n    'chop',\r\n    'chown',\r\n    'chr',\r\n    'chroot',\r\n    'class',\r\n    'close',\r\n    'closedir',\r\n    'connect',\r\n    'continue',\r\n    'cos',\r\n    'crypt',\r\n    'dbmclose',\r\n    'dbmopen',\r\n    'defined',\r\n    'delete',\r\n    'die',\r\n    'do',\r\n    'dump',\r\n    'each',\r\n    'else',\r\n    'elsif',\r\n    'endgrent',\r\n    'endhostent',\r\n    'endnetent',\r\n    'endprotoent',\r\n    'endpwent',\r\n    'endservent',\r\n    'eof',\r\n    'eval',\r\n    'exec',\r\n    'exists',\r\n    'exit',\r\n    'exp',\r\n    'fcntl',\r\n    'field',\r\n    'fileno',\r\n    'flock',\r\n    'for',\r\n    'foreach',\r\n    'fork',\r\n    'format',\r\n    'formline',\r\n    'getc',\r\n    'getgrent',\r\n    'getgrgid',\r\n    'getgrnam',\r\n    'gethostbyaddr',\r\n    'gethostbyname',\r\n    'gethostent',\r\n    'getlogin',\r\n    'getnetbyaddr',\r\n    'getnetbyname',\r\n    'getnetent',\r\n    'getpeername',\r\n    'getpgrp',\r\n    'getpriority',\r\n    'getprotobyname',\r\n    'getprotobynumber',\r\n    'getprotoent',\r\n    'getpwent',\r\n    'getpwnam',\r\n    'getpwuid',\r\n    'getservbyname',\r\n    'getservbyport',\r\n    'getservent',\r\n    'getsockname',\r\n    'getsockopt',\r\n    'given',\r\n    'glob',\r\n    'gmtime',\r\n    'goto',\r\n    'grep',\r\n    'gt',\r\n    'hex',\r\n    'if',\r\n    'index',\r\n    'int',\r\n    'ioctl',\r\n    'join',\r\n    'keys',\r\n    'kill',\r\n    'last',\r\n    'lc',\r\n    'lcfirst',\r\n    'length',\r\n    'link',\r\n    'listen',\r\n    'local',\r\n    'localtime',\r\n    'log',\r\n    'lstat',\r\n    'lt',\r\n    'ma',\r\n    'map',\r\n    'method',\r\n    'mkdir',\r\n    'msgctl',\r\n    'msgget',\r\n    'msgrcv',\r\n    'msgsnd',\r\n    'my',\r\n    'ne',\r\n    'next',\r\n    'no',\r\n    'not',\r\n    'oct',\r\n    'open',\r\n    'opendir',\r\n    'or',\r\n    'ord',\r\n    'our',\r\n    'pack',\r\n    'package',\r\n    'pipe',\r\n    'pop',\r\n    'pos',\r\n    'print',\r\n    'printf',\r\n    'prototype',\r\n    'push',\r\n    'q|0',\r\n    'qq',\r\n    'quotemeta',\r\n    'qw',\r\n    'qx',\r\n    'rand',\r\n    'read',\r\n    'readdir',\r\n    'readline',\r\n    'readlink',\r\n    'readpipe',\r\n    'recv',\r\n    'redo',\r\n    'ref',\r\n    'rename',\r\n    'require',\r\n    'reset',\r\n    'return',\r\n    'reverse',\r\n    'rewinddir',\r\n    'rindex',\r\n    'rmdir',\r\n    'say',\r\n    'scalar',\r\n    'seek',\r\n    'seekdir',\r\n    'select',\r\n    'semctl',\r\n    'semget',\r\n    'semop',\r\n    'send',\r\n    'setgrent',\r\n    'sethostent',\r\n    'setnetent',\r\n    'setpgrp',\r\n    'setpriority',\r\n    'setprotoent',\r\n    'setpwent',\r\n    'setservent',\r\n    'setsockopt',\r\n    'shift',\r\n    'shmctl',\r\n    'shmget',\r\n    'shmread',\r\n    'shmwrite',\r\n    'shutdown',\r\n    'sin',\r\n    'sleep',\r\n    'socket',\r\n    'socketpair',\r\n    'sort',\r\n    'splice',\r\n    'split',\r\n    'sprintf',\r\n    'sqrt',\r\n    'srand',\r\n    'stat',\r\n    'state',\r\n    'study',\r\n    'sub',\r\n    'substr',\r\n    'symlink',\r\n    'syscall',\r\n    'sysopen',\r\n    'sysread',\r\n    'sysseek',\r\n    'system',\r\n    'syswrite',\r\n    'tell',\r\n    'telldir',\r\n    'tie',\r\n    'tied',\r\n    'time',\r\n    'times',\r\n    'tr',\r\n    'truncate',\r\n    'uc',\r\n    'ucfirst',\r\n    'umask',\r\n    'undef',\r\n    'unless',\r\n    'unlink',\r\n    'unpack',\r\n    'unshift',\r\n    'untie',\r\n    'until',\r\n    'use',\r\n    'utime',\r\n    'values',\r\n    'vec',\r\n    'wait',\r\n    'waitpid',\r\n    'wantarray',\r\n    'warn',\r\n    'when',\r\n    'while',\r\n    'write',\r\n    'x|0',\r\n    'xor',\r\n    'y|0'\r\n  ];\r\n\r\n  // https://perldoc.perl.org/perlre#Modifiers\r\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\r\n  const PERL_KEYWORDS = {\r\n    $pattern: /[\\w.]+/,\r\n    keyword: KEYWORDS.join(\" \")\r\n  };\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: '[$@]\\\\{',\r\n    end: '\\\\}',\r\n    keywords: PERL_KEYWORDS\r\n  };\r\n  const METHOD = {\r\n    begin: /->\\{/,\r\n    end: /\\}/\r\n    // contains defined later\r\n  };\r\n  const ATTR = {\r\n    scope: 'attr',\r\n    match: /\\s+:\\s*\\w+(\\s*\\(.*?\\))?/,\r\n  };\r\n  const VAR = {\r\n    scope: 'variable',\r\n    variants: [\r\n      { begin: /\\$\\d/ },\r\n      { begin: regex.concat(\r\n        /[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\r\n        // negative look-ahead tries to avoid matching patterns that are not\r\n        // Perl at all like $ident$, @ident@, etc.\r\n        `(?![A-Za-z])(?![@$%])`\r\n        )\r\n      },\r\n      {\r\n        // Only $= is a special Perl variable and one can't declare @= or %=.\r\n        begin: /[$%@][^\\s\\w{=]|\\$=/,\r\n        relevance: 0\r\n      }\r\n    ],\r\n    contains: [ ATTR ],\r\n  };\r\n  const NUMBER = {\r\n    className: 'number',\r\n    variants: [\r\n      // decimal numbers:\r\n      // include the case where a number starts with a dot (eg. .9), and\r\n      // the leading 0? avoids mixing the first and second match on 0.x cases\r\n      { match: /0?\\.[0-9][0-9_]+\\b/ },\r\n      // include the special versioned number (eg. v5.38)\r\n      { match: /\\bv?(0|[1-9][0-9_]*(\\.[0-9_]+)?|[1-9][0-9_]*)\\b/ },\r\n      // non-decimal numbers:\r\n      { match: /\\b0[0-7][0-7_]*\\b/ },\r\n      { match: /\\b0x[0-9a-fA-F][0-9a-fA-F_]*\\b/ },\r\n      { match: /\\b0b[0-1][0-1_]*\\b/ },\r\n    ],\r\n    relevance: 0\r\n  }\r\n  const STRING_CONTAINS = [\r\n    hljs.BACKSLASH_ESCAPE,\r\n    SUBST,\r\n    VAR\r\n  ];\r\n  const REGEX_DELIMS = [\r\n    /!/,\r\n    /\\//,\r\n    /\\|/,\r\n    /\\?/,\r\n    /'/,\r\n    /\"/, // valid but infrequent and weird\r\n    /#/ // valid but infrequent and weird\r\n  ];\r\n  /**\r\n   * @param {string|RegExp} prefix\r\n   * @param {string|RegExp} open\r\n   * @param {string|RegExp} close\r\n   */\r\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\r\n    const middle = (close === '\\\\1')\r\n      ? close\r\n      : regex.concat(close, open);\r\n    return regex.concat(\r\n      regex.concat(\"(?:\", prefix, \")\"),\r\n      open,\r\n      /(?:\\\\.|[^\\\\\\/])*?/,\r\n      middle,\r\n      /(?:\\\\.|[^\\\\\\/])*?/,\r\n      close,\r\n      REGEX_MODIFIERS\r\n    );\r\n  };\r\n  /**\r\n   * @param {string|RegExp} prefix\r\n   * @param {string|RegExp} open\r\n   * @param {string|RegExp} close\r\n   */\r\n  const PAIRED_RE = (prefix, open, close) => {\r\n    return regex.concat(\r\n      regex.concat(\"(?:\", prefix, \")\"),\r\n      open,\r\n      /(?:\\\\.|[^\\\\\\/])*?/,\r\n      close,\r\n      REGEX_MODIFIERS\r\n    );\r\n  };\r\n  const PERL_DEFAULT_CONTAINS = [\r\n    VAR,\r\n    hljs.HASH_COMMENT_MODE,\r\n    hljs.COMMENT(\r\n      /^=\\w/,\r\n      /=cut/,\r\n      { endsWithParent: true }\r\n    ),\r\n    METHOD,\r\n    {\r\n      className: 'string',\r\n      contains: STRING_CONTAINS,\r\n      variants: [\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\(',\r\n          end: '\\\\)',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\[',\r\n          end: '\\\\]',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\{',\r\n          end: '\\\\}',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*\\\\|',\r\n          end: '\\\\|',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'q[qwxr]?\\\\s*<',\r\n          end: '>',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: 'qw\\\\s+q',\r\n          end: 'q',\r\n          relevance: 5\r\n        },\r\n        {\r\n          begin: '\\'',\r\n          end: '\\'',\r\n          contains: [ hljs.BACKSLASH_ESCAPE ]\r\n        },\r\n        {\r\n          begin: '\"',\r\n          end: '\"'\r\n        },\r\n        {\r\n          begin: '`',\r\n          end: '`',\r\n          contains: [ hljs.BACKSLASH_ESCAPE ]\r\n        },\r\n        {\r\n          begin: /\\{\\w+\\}/,\r\n          relevance: 0\r\n        },\r\n        {\r\n          begin: '-?\\\\w+\\\\s*=>',\r\n          relevance: 0\r\n        }\r\n      ]\r\n    },\r\n    NUMBER,\r\n    { // regexp container\r\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\r\n      keywords: 'split return print reverse grep',\r\n      relevance: 0,\r\n      contains: [\r\n        hljs.HASH_COMMENT_MODE,\r\n        {\r\n          className: 'regexp',\r\n          variants: [\r\n            // allow matching common delimiters\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", regex.either(...REGEX_DELIMS, { capture: true })) },\r\n            // and then paired delmis\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\") },\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\") },\r\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\") }\r\n          ],\r\n          relevance: 2\r\n        },\r\n        {\r\n          className: 'regexp',\r\n          variants: [\r\n            {\r\n              // could be a comment in many languages so do not count\r\n              // as relevant\r\n              begin: /(m|qr)\\/\\//,\r\n              relevance: 0\r\n            },\r\n            // prefix is optional with /regex/\r\n            { begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//) },\r\n            // allow matching common delimiters\r\n            { begin: PAIRED_RE(\"m|qr\", regex.either(...REGEX_DELIMS, { capture: true }), /\\1/) },\r\n            // allow common paired delmins\r\n            { begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/) },\r\n            { begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/) },\r\n            { begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/) }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      className: 'function',\r\n      beginKeywords: 'sub method',\r\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\r\n      excludeEnd: true,\r\n      relevance: 5,\r\n      contains: [ hljs.TITLE_MODE, ATTR ]\r\n    },\r\n    {\r\n      className: 'class',\r\n      beginKeywords: 'class',\r\n      end: '[;{]',\r\n      excludeEnd: true,\r\n      relevance: 5,\r\n      contains: [ hljs.TITLE_MODE, ATTR, NUMBER ]\r\n    },\r\n    {\r\n      begin: '-\\\\w\\\\b',\r\n      relevance: 0\r\n    },\r\n    {\r\n      begin: \"^__DATA__$\",\r\n      end: \"^__END__$\",\r\n      subLanguage: 'mojolicious',\r\n      contains: [\r\n        {\r\n          begin: \"^@@.*\",\r\n          end: \"$\",\r\n          className: \"comment\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\r\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\r\n\r\n  return {\r\n    name: 'Perl',\r\n    aliases: [\r\n      'pl',\r\n      'pm'\r\n    ],\r\n    keywords: PERL_KEYWORDS,\r\n    contains: PERL_DEFAULT_CONTAINS\r\n  };\r\n}\r\n"],"names":["perl","hljs","regex","REGEX_MODIFIERS","PERL_KEYWORDS","$pattern","keyword","join","SUBST","className","begin","end","keywords","METHOD","ATTR","scope","match","VAR","variants","concat","relevance","contains","NUMBER","STRING_CONTAINS","BACKSLASH_ESCAPE","REGEX_DELIMS","PAIRED_DOUBLE_RE","prefix","open","close","middle","PAIRED_RE","PERL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","COMMENT","endsWithParent","RE_STARTERS_RE","either","capture","beginKeywords","excludeEnd","TITLE_MODE","subLanguage","name","aliases"],"mappings":"AAQe,SAAQA,EAACC,GACtB,MAAMC,EAAQD,EAAKC,MA8ObC,EAAkB,uBAClBC,EAAgB,CACpBC,SAAU,SACVC,QAhPe,CACf,MACA,SACA,QACA,MACA,QACA,OACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,MACA,SACA,QACA,QACA,WACA,UACA,WACA,MACA,QACA,WACA,UACA,UACA,SACA,MACA,KACA,OACA,OACA,OACA,QACA,WACA,aACA,YACA,cACA,WACA,aACA,MACA,OACA,OACA,SACA,OACA,MACA,QACA,QACA,SACA,QACA,MACA,UACA,OACA,SACA,WACA,OACA,WACA,WACA,WACA,gBACA,gBACA,aACA,WACA,eACA,eACA,YACA,cACA,UACA,cACA,iBACA,mBACA,cACA,WACA,WACA,WACA,gBACA,gBACA,aACA,cACA,aACA,QACA,OACA,SACA,OACA,OACA,KACA,MACA,KACA,QACA,MACA,QACA,OACA,OACA,OACA,OACA,KACA,UACA,SACA,OACA,SACA,QACA,YACA,MACA,QACA,KACA,KACA,MACA,SACA,QACA,SACA,SACA,SACA,SACA,KACA,KACA,OACA,KACA,MACA,MACA,OACA,UACA,KACA,MACA,MACA,OACA,UACA,OACA,MACA,MACA,QACA,SACA,YACA,OACA,MACA,KACA,YACA,KACA,KACA,OACA,OACA,UACA,WACA,WACA,WACA,OACA,OACA,MACA,SACA,UACA,QACA,SACA,UACA,YACA,SACA,QACA,MACA,SACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,WACA,aACA,YACA,UACA,cACA,cACA,WACA,aACA,aACA,QACA,SACA,SACA,UACA,WACA,WACA,MACA,QACA,SACA,aACA,OACA,SACA,QACA,UACA,OACA,QACA,OACA,QACA,QACA,MACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,OACA,UACA,MACA,OACA,OACA,QACA,KACA,WACA,KACA,UACA,QACA,QACA,SACA,SACA,SACA,UACA,QACA,QACA,MA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"}