{"version":3,"file":"ruby.min.js","sources":["../../src/libs/highlight-es/languages/ruby.js"],"sourcesContent":["/*\r\nLanguage: Ruby\r\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\r\nWebsite: https://www.ruby-lang.org/\r\nAuthor: Anton Kovalyov <anton@kovalyov.net>\r\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\r\nCategory: common, scripting\r\n*/\r\n\r\nexport default function(hljs) {\r\n  const regex = hljs.regex;\r\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\r\n  // TODO: move concepts like CAMEL_CASE into `modes.js`\r\n  const CLASS_NAME_RE = regex.either(\r\n    /\\b([A-Z]+[a-z0-9]+)+/,\r\n    // ends in caps\r\n    /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/,\r\n  )\r\n  ;\r\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\w+)*/)\r\n  // very popular ruby built-ins that one might even assume\r\n  // are actual keywords (despite that not being the case)\r\n  const PSEUDO_KWS = [\r\n    \"include\",\r\n    \"extend\",\r\n    \"prepend\",\r\n    \"public\",\r\n    \"private\",\r\n    \"protected\",\r\n    \"raise\",\r\n    \"throw\"\r\n  ];\r\n  const RUBY_KEYWORDS = {\r\n    \"variable.constant\": [\r\n      \"__FILE__\",\r\n      \"__LINE__\",\r\n      \"__ENCODING__\"\r\n    ],\r\n    \"variable.language\": [\r\n      \"self\",\r\n      \"super\",\r\n    ],\r\n    keyword: [\r\n      \"alias\",\r\n      \"and\",\r\n      \"begin\",\r\n      \"BEGIN\",\r\n      \"break\",\r\n      \"case\",\r\n      \"class\",\r\n      \"defined\",\r\n      \"do\",\r\n      \"else\",\r\n      \"elsif\",\r\n      \"end\",\r\n      \"END\",\r\n      \"ensure\",\r\n      \"for\",\r\n      \"if\",\r\n      \"in\",\r\n      \"module\",\r\n      \"next\",\r\n      \"not\",\r\n      \"or\",\r\n      \"redo\",\r\n      \"require\",\r\n      \"rescue\",\r\n      \"retry\",\r\n      \"return\",\r\n      \"then\",\r\n      \"undef\",\r\n      \"unless\",\r\n      \"until\",\r\n      \"when\",\r\n      \"while\",\r\n      \"yield\",\r\n      ...PSEUDO_KWS\r\n    ],\r\n    built_in: [\r\n      \"proc\",\r\n      \"lambda\",\r\n      \"attr_accessor\",\r\n      \"attr_reader\",\r\n      \"attr_writer\",\r\n      \"define_method\",\r\n      \"private_constant\",\r\n      \"module_function\"\r\n    ],\r\n    literal: [\r\n      \"true\",\r\n      \"false\",\r\n      \"nil\"\r\n    ]\r\n  };\r\n  const YARDOCTAG = {\r\n    className: 'doctag',\r\n    begin: '@[A-Za-z]+'\r\n  };\r\n  const IRB_OBJECT = {\r\n    begin: '#<',\r\n    end: '>'\r\n  };\r\n  const COMMENT_MODES = [\r\n    hljs.COMMENT(\r\n      '#',\r\n      '$',\r\n      { contains: [ YARDOCTAG ] }\r\n    ),\r\n    hljs.COMMENT(\r\n      '^=begin',\r\n      '^=end',\r\n      {\r\n        contains: [ YARDOCTAG ],\r\n        relevance: 10\r\n      }\r\n    ),\r\n    hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)\r\n  ];\r\n  const SUBST = {\r\n    className: 'subst',\r\n    begin: /#\\{/,\r\n    end: /\\}/,\r\n    keywords: RUBY_KEYWORDS\r\n  };\r\n  const STRING = {\r\n    className: 'string',\r\n    contains: [\r\n      hljs.BACKSLASH_ESCAPE,\r\n      SUBST\r\n    ],\r\n    variants: [\r\n      {\r\n        begin: /'/,\r\n        end: /'/\r\n      },\r\n      {\r\n        begin: /\"/,\r\n        end: /\"/\r\n      },\r\n      {\r\n        begin: /`/,\r\n        end: /`/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?\\(/,\r\n        end: /\\)/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?\\[/,\r\n        end: /\\]/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?\\{/,\r\n        end: /\\}/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?</,\r\n        end: />/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?\\//,\r\n        end: /\\//\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?%/,\r\n        end: /%/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?-/,\r\n        end: /-/\r\n      },\r\n      {\r\n        begin: /%[qQwWx]?\\|/,\r\n        end: /\\|/\r\n      },\r\n      // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\r\n      // where ? is the last character of a preceding identifier, as in: `func?4`\r\n      { begin: /\\B\\?(\\\\\\d{1,3})/ },\r\n      { begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/ },\r\n      { begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/ },\r\n      { begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/ },\r\n      { begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/ },\r\n      { begin: /\\B\\?\\\\?\\S/ },\r\n      // heredocs\r\n      {\r\n        // this guard makes sure that we have an entire heredoc and not a false\r\n        // positive (auto-detect, etc.)\r\n        begin: regex.concat(\r\n          /<<[-~]?'?/,\r\n          regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)\r\n        ),\r\n        contains: [\r\n          hljs.END_SAME_AS_BEGIN({\r\n            begin: /(\\w+)/,\r\n            end: /(\\w+)/,\r\n            contains: [\r\n              hljs.BACKSLASH_ESCAPE,\r\n              SUBST\r\n            ]\r\n          })\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\r\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\r\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\r\n  const decimal = '[1-9](_?[0-9])*|0';\r\n  const digits = '[0-9](_?[0-9])*';\r\n  const NUMBER = {\r\n    className: 'number',\r\n    relevance: 0,\r\n    variants: [\r\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\r\n      { begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b` },\r\n\r\n      // explicit decimal/binary/octal/hexadecimal integer,\r\n      // optionally rational and/or imaginary\r\n      { begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\" },\r\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\" },\r\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\" },\r\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\" },\r\n\r\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\r\n      { begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\" }\r\n    ]\r\n  };\r\n\r\n  const PARAMS = {\r\n    variants: [\r\n      {\r\n        match: /\\(\\)/,\r\n      },\r\n      {\r\n        className: 'params',\r\n        begin: /\\(/,\r\n        end: /(?=\\))/,\r\n        excludeBegin: true,\r\n        endsParent: true,\r\n        keywords: RUBY_KEYWORDS,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const INCLUDE_EXTEND = {\r\n    match: [\r\n      /(include|extend)\\s+/,\r\n      CLASS_NAME_WITH_NAMESPACE_RE\r\n    ],\r\n    scope: {\r\n      2: \"title.class\"\r\n    },\r\n    keywords: RUBY_KEYWORDS\r\n  };\r\n\r\n  const CLASS_DEFINITION = {\r\n    variants: [\r\n      {\r\n        match: [\r\n          /class\\s+/,\r\n          CLASS_NAME_WITH_NAMESPACE_RE,\r\n          /\\s+<\\s+/,\r\n          CLASS_NAME_WITH_NAMESPACE_RE\r\n        ]\r\n      },\r\n      {\r\n        match: [\r\n          /\\b(class|module)\\s+/,\r\n          CLASS_NAME_WITH_NAMESPACE_RE\r\n        ]\r\n      }\r\n    ],\r\n    scope: {\r\n      2: \"title.class\",\r\n      4: \"title.class.inherited\"\r\n    },\r\n    keywords: RUBY_KEYWORDS\r\n  };\r\n\r\n  const UPPER_CASE_CONSTANT = {\r\n    relevance: 0,\r\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\r\n    className: \"variable.constant\"\r\n  };\r\n\r\n  const METHOD_DEFINITION = {\r\n    match: [\r\n      /def/, /\\s+/,\r\n      RUBY_METHOD_RE\r\n    ],\r\n    scope: {\r\n      1: \"keyword\",\r\n      3: \"title.function\"\r\n    },\r\n    contains: [\r\n      PARAMS\r\n    ]\r\n  };\r\n\r\n  const OBJECT_CREATION = {\r\n    relevance: 0,\r\n    match: [\r\n      CLASS_NAME_WITH_NAMESPACE_RE,\r\n      /\\.new[. (]/\r\n    ],\r\n    scope: {\r\n      1: \"title.class\"\r\n    }\r\n  };\r\n\r\n  // CamelCase\r\n  const CLASS_REFERENCE = {\r\n    relevance: 0,\r\n    match: CLASS_NAME_RE,\r\n    scope: \"title.class\"\r\n  };\r\n\r\n  const RUBY_DEFAULT_CONTAINS = [\r\n    STRING,\r\n    CLASS_DEFINITION,\r\n    INCLUDE_EXTEND,\r\n    OBJECT_CREATION,\r\n    UPPER_CASE_CONSTANT,\r\n    CLASS_REFERENCE,\r\n    METHOD_DEFINITION,\r\n    {\r\n      // swallow namespace qualifiers before symbols\r\n      begin: hljs.IDENT_RE + '::' },\r\n    {\r\n      className: 'symbol',\r\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\r\n      relevance: 0\r\n    },\r\n    {\r\n      className: 'symbol',\r\n      begin: ':(?!\\\\s)',\r\n      contains: [\r\n        STRING,\r\n        { begin: RUBY_METHOD_RE }\r\n      ],\r\n      relevance: 0\r\n    },\r\n    NUMBER,\r\n    {\r\n      // negative-look forward attempts to prevent false matches like:\r\n      // @ident@ or $ident$ that might indicate this is not ruby at all\r\n      className: \"variable\",\r\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\r\n    },\r\n    {\r\n      className: 'params',\r\n      begin: /\\|/,\r\n      end: /\\|/,\r\n      excludeBegin: true,\r\n      excludeEnd: true,\r\n      relevance: 0, // this could be a lot of things (in other languages) other than params\r\n      keywords: RUBY_KEYWORDS\r\n    },\r\n    { // regexp container\r\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\r\n      keywords: 'unless',\r\n      contains: [\r\n        {\r\n          className: 'regexp',\r\n          contains: [\r\n            hljs.BACKSLASH_ESCAPE,\r\n            SUBST\r\n          ],\r\n          illegal: /\\n/,\r\n          variants: [\r\n            {\r\n              begin: '/',\r\n              end: '/[a-z]*'\r\n            },\r\n            {\r\n              begin: /%r\\{/,\r\n              end: /\\}[a-z]*/\r\n            },\r\n            {\r\n              begin: '%r\\\\(',\r\n              end: '\\\\)[a-z]*'\r\n            },\r\n            {\r\n              begin: '%r!',\r\n              end: '![a-z]*'\r\n            },\r\n            {\r\n              begin: '%r\\\\[',\r\n              end: '\\\\][a-z]*'\r\n            }\r\n          ]\r\n        }\r\n      ].concat(IRB_OBJECT, COMMENT_MODES),\r\n      relevance: 0\r\n    }\r\n  ].concat(IRB_OBJECT, COMMENT_MODES);\r\n\r\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\r\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\r\n\r\n  // >>\r\n  // ?>\r\n  const SIMPLE_PROMPT = \"[>?]>\";\r\n  // irb(main):001:0>\r\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]\";\r\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\r\n\r\n  const IRB_DEFAULT = [\r\n    {\r\n      begin: /^\\s*=>/,\r\n      starts: {\r\n        end: '$',\r\n        contains: RUBY_DEFAULT_CONTAINS\r\n      }\r\n    },\r\n    {\r\n      className: 'meta.prompt',\r\n      begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\r\n      starts: {\r\n        end: '$',\r\n        keywords: RUBY_KEYWORDS,\r\n        contains: RUBY_DEFAULT_CONTAINS\r\n      }\r\n    }\r\n  ];\r\n\r\n  COMMENT_MODES.unshift(IRB_OBJECT);\r\n\r\n  return {\r\n    name: 'Ruby',\r\n    aliases: [\r\n      'rb',\r\n      'gemspec',\r\n      'podspec',\r\n      'thor',\r\n      'irb'\r\n    ],\r\n    keywords: RUBY_KEYWORDS,\r\n    illegal: /\\/\\*/,\r\n    contains: [ hljs.SHEBANG({ binary: \"ruby\" }) ]\r\n      .concat(IRB_DEFAULT)\r\n      .concat(COMMENT_MODES)\r\n      .concat(RUBY_DEFAULT_CONTAINS)\r\n  };\r\n}\r\n"],"names":["ruby","hljs","regex","RUBY_METHOD_RE","CLASS_NAME_RE","either","CLASS_NAME_WITH_NAMESPACE_RE","concat","RUBY_KEYWORDS","keyword","built_in","literal","YARDOCTAG","className","begin","IRB_OBJECT","end","COMMENT_MODES","COMMENT","contains","relevance","MATCH_NOTHING_RE","SUBST","keywords","STRING","BACKSLASH_ESCAPE","variants","lookahead","END_SAME_AS_BEGIN","digits","NUMBER","PARAMS","match","excludeBegin","endsParent","RUBY_DEFAULT_CONTAINS","scope","IDENT_RE","UNDERSCORE_IDENT_RE","excludeEnd","RE_STARTERS_RE","illegal","IRB_DEFAULT","starts","unshift","name","aliases","SHEBANG","binary"],"mappings":"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"}