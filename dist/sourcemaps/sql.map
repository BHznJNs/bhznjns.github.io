{"version":3,"file":"sql.min.js","sources":["../../src/libs/highlight-es/languages/sql.js"],"sourcesContent":["/*\r\n Language: SQL\r\n Website: https://en.wikipedia.org/wiki/SQL\r\n Category: common, database\r\n */\r\n\r\n/*\r\n\r\nGoals:\r\n\r\nSQL is intended to highlight basic/common SQL keywords and expressions\r\n\r\n- If pretty much every single SQL server includes supports, then it's a canidate.\r\n- It is NOT intended to include tons of vendor specific keywords (Oracle, MySQL,\r\n  PostgreSQL) although the list of data types is purposely a bit more expansive.\r\n- For more specific SQL grammars please see:\r\n  - PostgreSQL and PL/pgSQL - core\r\n  - T-SQL - https://github.com/highlightjs/highlightjs-tsql\r\n  - sql_more (core)\r\n\r\n */\r\n\r\nexport default function(hljs) {\r\n  const regex = hljs.regex;\r\n  const COMMENT_MODE = hljs.COMMENT('--', '$');\r\n  const STRING = {\r\n    className: 'string',\r\n    variants: [\r\n      {\r\n        begin: /'/,\r\n        end: /'/,\r\n        contains: [ { begin: /''/ } ]\r\n      }\r\n    ]\r\n  };\r\n  const QUOTED_IDENTIFIER = {\r\n    begin: /\"/,\r\n    end: /\"/,\r\n    contains: [ { begin: /\"\"/ } ]\r\n  };\r\n\r\n  const LITERALS = [\r\n    \"true\",\r\n    \"false\",\r\n    // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\r\n    // \"null\",\r\n    \"unknown\"\r\n  ];\r\n\r\n  const MULTI_WORD_TYPES = [\r\n    \"double precision\",\r\n    \"large object\",\r\n    \"with timezone\",\r\n    \"without timezone\"\r\n  ];\r\n\r\n  const TYPES = [\r\n    'bigint',\r\n    'binary',\r\n    'blob',\r\n    'boolean',\r\n    'char',\r\n    'character',\r\n    'clob',\r\n    'date',\r\n    'dec',\r\n    'decfloat',\r\n    'decimal',\r\n    'float',\r\n    'int',\r\n    'integer',\r\n    'interval',\r\n    'nchar',\r\n    'nclob',\r\n    'national',\r\n    'numeric',\r\n    'real',\r\n    'row',\r\n    'smallint',\r\n    'time',\r\n    'timestamp',\r\n    'varchar',\r\n    'varying', // modifier (character varying)\r\n    'varbinary'\r\n  ];\r\n\r\n  const NON_RESERVED_WORDS = [\r\n    \"add\",\r\n    \"asc\",\r\n    \"collation\",\r\n    \"desc\",\r\n    \"final\",\r\n    \"first\",\r\n    \"last\",\r\n    \"view\"\r\n  ];\r\n\r\n  // https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html#reserved-word\r\n  const RESERVED_WORDS = [\r\n    \"abs\",\r\n    \"acos\",\r\n    \"all\",\r\n    \"allocate\",\r\n    \"alter\",\r\n    \"and\",\r\n    \"any\",\r\n    \"are\",\r\n    \"array\",\r\n    \"array_agg\",\r\n    \"array_max_cardinality\",\r\n    \"as\",\r\n    \"asensitive\",\r\n    \"asin\",\r\n    \"asymmetric\",\r\n    \"at\",\r\n    \"atan\",\r\n    \"atomic\",\r\n    \"authorization\",\r\n    \"avg\",\r\n    \"begin\",\r\n    \"begin_frame\",\r\n    \"begin_partition\",\r\n    \"between\",\r\n    \"bigint\",\r\n    \"binary\",\r\n    \"blob\",\r\n    \"boolean\",\r\n    \"both\",\r\n    \"by\",\r\n    \"call\",\r\n    \"called\",\r\n    \"cardinality\",\r\n    \"cascaded\",\r\n    \"case\",\r\n    \"cast\",\r\n    \"ceil\",\r\n    \"ceiling\",\r\n    \"char\",\r\n    \"char_length\",\r\n    \"character\",\r\n    \"character_length\",\r\n    \"check\",\r\n    \"classifier\",\r\n    \"clob\",\r\n    \"close\",\r\n    \"coalesce\",\r\n    \"collate\",\r\n    \"collect\",\r\n    \"column\",\r\n    \"commit\",\r\n    \"condition\",\r\n    \"connect\",\r\n    \"constraint\",\r\n    \"contains\",\r\n    \"convert\",\r\n    \"copy\",\r\n    \"corr\",\r\n    \"corresponding\",\r\n    \"cos\",\r\n    \"cosh\",\r\n    \"count\",\r\n    \"covar_pop\",\r\n    \"covar_samp\",\r\n    \"create\",\r\n    \"cross\",\r\n    \"cube\",\r\n    \"cume_dist\",\r\n    \"current\",\r\n    \"current_catalog\",\r\n    \"current_date\",\r\n    \"current_default_transform_group\",\r\n    \"current_path\",\r\n    \"current_role\",\r\n    \"current_row\",\r\n    \"current_schema\",\r\n    \"current_time\",\r\n    \"current_timestamp\",\r\n    \"current_path\",\r\n    \"current_role\",\r\n    \"current_transform_group_for_type\",\r\n    \"current_user\",\r\n    \"cursor\",\r\n    \"cycle\",\r\n    \"date\",\r\n    \"day\",\r\n    \"deallocate\",\r\n    \"dec\",\r\n    \"decimal\",\r\n    \"decfloat\",\r\n    \"declare\",\r\n    \"default\",\r\n    \"define\",\r\n    \"delete\",\r\n    \"dense_rank\",\r\n    \"deref\",\r\n    \"describe\",\r\n    \"deterministic\",\r\n    \"disconnect\",\r\n    \"distinct\",\r\n    \"double\",\r\n    \"drop\",\r\n    \"dynamic\",\r\n    \"each\",\r\n    \"element\",\r\n    \"else\",\r\n    \"empty\",\r\n    \"end\",\r\n    \"end_frame\",\r\n    \"end_partition\",\r\n    \"end-exec\",\r\n    \"equals\",\r\n    \"escape\",\r\n    \"every\",\r\n    \"except\",\r\n    \"exec\",\r\n    \"execute\",\r\n    \"exists\",\r\n    \"exp\",\r\n    \"external\",\r\n    \"extract\",\r\n    \"false\",\r\n    \"fetch\",\r\n    \"filter\",\r\n    \"first_value\",\r\n    \"float\",\r\n    \"floor\",\r\n    \"for\",\r\n    \"foreign\",\r\n    \"frame_row\",\r\n    \"free\",\r\n    \"from\",\r\n    \"full\",\r\n    \"function\",\r\n    \"fusion\",\r\n    \"get\",\r\n    \"global\",\r\n    \"grant\",\r\n    \"group\",\r\n    \"grouping\",\r\n    \"groups\",\r\n    \"having\",\r\n    \"hold\",\r\n    \"hour\",\r\n    \"identity\",\r\n    \"in\",\r\n    \"indicator\",\r\n    \"initial\",\r\n    \"inner\",\r\n    \"inout\",\r\n    \"insensitive\",\r\n    \"insert\",\r\n    \"int\",\r\n    \"integer\",\r\n    \"intersect\",\r\n    \"intersection\",\r\n    \"interval\",\r\n    \"into\",\r\n    \"is\",\r\n    \"join\",\r\n    \"json_array\",\r\n    \"json_arrayagg\",\r\n    \"json_exists\",\r\n    \"json_object\",\r\n    \"json_objectagg\",\r\n    \"json_query\",\r\n    \"json_table\",\r\n    \"json_table_primitive\",\r\n    \"json_value\",\r\n    \"lag\",\r\n    \"language\",\r\n    \"large\",\r\n    \"last_value\",\r\n    \"lateral\",\r\n    \"lead\",\r\n    \"leading\",\r\n    \"left\",\r\n    \"like\",\r\n    \"like_regex\",\r\n    \"listagg\",\r\n    \"ln\",\r\n    \"local\",\r\n    \"localtime\",\r\n    \"localtimestamp\",\r\n    \"log\",\r\n    \"log10\",\r\n    \"lower\",\r\n    \"match\",\r\n    \"match_number\",\r\n    \"match_recognize\",\r\n    \"matches\",\r\n    \"max\",\r\n    \"member\",\r\n    \"merge\",\r\n    \"method\",\r\n    \"min\",\r\n    \"minute\",\r\n    \"mod\",\r\n    \"modifies\",\r\n    \"module\",\r\n    \"month\",\r\n    \"multiset\",\r\n    \"national\",\r\n    \"natural\",\r\n    \"nchar\",\r\n    \"nclob\",\r\n    \"new\",\r\n    \"no\",\r\n    \"none\",\r\n    \"normalize\",\r\n    \"not\",\r\n    \"nth_value\",\r\n    \"ntile\",\r\n    \"null\",\r\n    \"nullif\",\r\n    \"numeric\",\r\n    \"octet_length\",\r\n    \"occurrences_regex\",\r\n    \"of\",\r\n    \"offset\",\r\n    \"old\",\r\n    \"omit\",\r\n    \"on\",\r\n    \"one\",\r\n    \"only\",\r\n    \"open\",\r\n    \"or\",\r\n    \"order\",\r\n    \"out\",\r\n    \"outer\",\r\n    \"over\",\r\n    \"overlaps\",\r\n    \"overlay\",\r\n    \"parameter\",\r\n    \"partition\",\r\n    \"pattern\",\r\n    \"per\",\r\n    \"percent\",\r\n    \"percent_rank\",\r\n    \"percentile_cont\",\r\n    \"percentile_disc\",\r\n    \"period\",\r\n    \"portion\",\r\n    \"position\",\r\n    \"position_regex\",\r\n    \"power\",\r\n    \"precedes\",\r\n    \"precision\",\r\n    \"prepare\",\r\n    \"primary\",\r\n    \"procedure\",\r\n    \"ptf\",\r\n    \"range\",\r\n    \"rank\",\r\n    \"reads\",\r\n    \"real\",\r\n    \"recursive\",\r\n    \"ref\",\r\n    \"references\",\r\n    \"referencing\",\r\n    \"regr_avgx\",\r\n    \"regr_avgy\",\r\n    \"regr_count\",\r\n    \"regr_intercept\",\r\n    \"regr_r2\",\r\n    \"regr_slope\",\r\n    \"regr_sxx\",\r\n    \"regr_sxy\",\r\n    \"regr_syy\",\r\n    \"release\",\r\n    \"result\",\r\n    \"return\",\r\n    \"returns\",\r\n    \"revoke\",\r\n    \"right\",\r\n    \"rollback\",\r\n    \"rollup\",\r\n    \"row\",\r\n    \"row_number\",\r\n    \"rows\",\r\n    \"running\",\r\n    \"savepoint\",\r\n    \"scope\",\r\n    \"scroll\",\r\n    \"search\",\r\n    \"second\",\r\n    \"seek\",\r\n    \"select\",\r\n    \"sensitive\",\r\n    \"session_user\",\r\n    \"set\",\r\n    \"show\",\r\n    \"similar\",\r\n    \"sin\",\r\n    \"sinh\",\r\n    \"skip\",\r\n    \"smallint\",\r\n    \"some\",\r\n    \"specific\",\r\n    \"specifictype\",\r\n    \"sql\",\r\n    \"sqlexception\",\r\n    \"sqlstate\",\r\n    \"sqlwarning\",\r\n    \"sqrt\",\r\n    \"start\",\r\n    \"static\",\r\n    \"stddev_pop\",\r\n    \"stddev_samp\",\r\n    \"submultiset\",\r\n    \"subset\",\r\n    \"substring\",\r\n    \"substring_regex\",\r\n    \"succeeds\",\r\n    \"sum\",\r\n    \"symmetric\",\r\n    \"system\",\r\n    \"system_time\",\r\n    \"system_user\",\r\n    \"table\",\r\n    \"tablesample\",\r\n    \"tan\",\r\n    \"tanh\",\r\n    \"then\",\r\n    \"time\",\r\n    \"timestamp\",\r\n    \"timezone_hour\",\r\n    \"timezone_minute\",\r\n    \"to\",\r\n    \"trailing\",\r\n    \"translate\",\r\n    \"translate_regex\",\r\n    \"translation\",\r\n    \"treat\",\r\n    \"trigger\",\r\n    \"trim\",\r\n    \"trim_array\",\r\n    \"true\",\r\n    \"truncate\",\r\n    \"uescape\",\r\n    \"union\",\r\n    \"unique\",\r\n    \"unknown\",\r\n    \"unnest\",\r\n    \"update\",\r\n    \"upper\",\r\n    \"user\",\r\n    \"using\",\r\n    \"value\",\r\n    \"values\",\r\n    \"value_of\",\r\n    \"var_pop\",\r\n    \"var_samp\",\r\n    \"varbinary\",\r\n    \"varchar\",\r\n    \"varying\",\r\n    \"versioning\",\r\n    \"when\",\r\n    \"whenever\",\r\n    \"where\",\r\n    \"width_bucket\",\r\n    \"window\",\r\n    \"with\",\r\n    \"within\",\r\n    \"without\",\r\n    \"year\",\r\n  ];\r\n\r\n  // these are reserved words we have identified to be functions\r\n  // and should only be highlighted in a dispatch-like context\r\n  // ie, array_agg(...), etc.\r\n  const RESERVED_FUNCTIONS = [\r\n    \"abs\",\r\n    \"acos\",\r\n    \"array_agg\",\r\n    \"asin\",\r\n    \"atan\",\r\n    \"avg\",\r\n    \"cast\",\r\n    \"ceil\",\r\n    \"ceiling\",\r\n    \"coalesce\",\r\n    \"corr\",\r\n    \"cos\",\r\n    \"cosh\",\r\n    \"count\",\r\n    \"covar_pop\",\r\n    \"covar_samp\",\r\n    \"cume_dist\",\r\n    \"dense_rank\",\r\n    \"deref\",\r\n    \"element\",\r\n    \"exp\",\r\n    \"extract\",\r\n    \"first_value\",\r\n    \"floor\",\r\n    \"json_array\",\r\n    \"json_arrayagg\",\r\n    \"json_exists\",\r\n    \"json_object\",\r\n    \"json_objectagg\",\r\n    \"json_query\",\r\n    \"json_table\",\r\n    \"json_table_primitive\",\r\n    \"json_value\",\r\n    \"lag\",\r\n    \"last_value\",\r\n    \"lead\",\r\n    \"listagg\",\r\n    \"ln\",\r\n    \"log\",\r\n    \"log10\",\r\n    \"lower\",\r\n    \"max\",\r\n    \"min\",\r\n    \"mod\",\r\n    \"nth_value\",\r\n    \"ntile\",\r\n    \"nullif\",\r\n    \"percent_rank\",\r\n    \"percentile_cont\",\r\n    \"percentile_disc\",\r\n    \"position\",\r\n    \"position_regex\",\r\n    \"power\",\r\n    \"rank\",\r\n    \"regr_avgx\",\r\n    \"regr_avgy\",\r\n    \"regr_count\",\r\n    \"regr_intercept\",\r\n    \"regr_r2\",\r\n    \"regr_slope\",\r\n    \"regr_sxx\",\r\n    \"regr_sxy\",\r\n    \"regr_syy\",\r\n    \"row_number\",\r\n    \"sin\",\r\n    \"sinh\",\r\n    \"sqrt\",\r\n    \"stddev_pop\",\r\n    \"stddev_samp\",\r\n    \"substring\",\r\n    \"substring_regex\",\r\n    \"sum\",\r\n    \"tan\",\r\n    \"tanh\",\r\n    \"translate\",\r\n    \"translate_regex\",\r\n    \"treat\",\r\n    \"trim\",\r\n    \"trim_array\",\r\n    \"unnest\",\r\n    \"upper\",\r\n    \"value_of\",\r\n    \"var_pop\",\r\n    \"var_samp\",\r\n    \"width_bucket\",\r\n  ];\r\n\r\n  // these functions can\r\n  const POSSIBLE_WITHOUT_PARENS = [\r\n    \"current_catalog\",\r\n    \"current_date\",\r\n    \"current_default_transform_group\",\r\n    \"current_path\",\r\n    \"current_role\",\r\n    \"current_schema\",\r\n    \"current_transform_group_for_type\",\r\n    \"current_user\",\r\n    \"session_user\",\r\n    \"system_time\",\r\n    \"system_user\",\r\n    \"current_time\",\r\n    \"localtime\",\r\n    \"current_timestamp\",\r\n    \"localtimestamp\"\r\n  ];\r\n\r\n  // those exist to boost relevance making these very\r\n  // \"SQL like\" keyword combos worth +1 extra relevance\r\n  const COMBOS = [\r\n    \"create table\",\r\n    \"insert into\",\r\n    \"primary key\",\r\n    \"foreign key\",\r\n    \"not null\",\r\n    \"alter table\",\r\n    \"add constraint\",\r\n    \"grouping sets\",\r\n    \"on overflow\",\r\n    \"character set\",\r\n    \"respect nulls\",\r\n    \"ignore nulls\",\r\n    \"nulls first\",\r\n    \"nulls last\",\r\n    \"depth first\",\r\n    \"breadth first\"\r\n  ];\r\n\r\n  const FUNCTIONS = RESERVED_FUNCTIONS;\r\n\r\n  const KEYWORDS = [\r\n    ...RESERVED_WORDS,\r\n    ...NON_RESERVED_WORDS\r\n  ].filter((keyword) => {\r\n    return !RESERVED_FUNCTIONS.includes(keyword);\r\n  });\r\n\r\n  const VARIABLE = {\r\n    className: \"variable\",\r\n    begin: /@[a-z0-9][a-z0-9_]*/,\r\n  };\r\n\r\n  const OPERATOR = {\r\n    className: \"operator\",\r\n    begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\r\n    relevance: 0,\r\n  };\r\n\r\n  const FUNCTION_CALL = {\r\n    begin: regex.concat(/\\b/, regex.either(...FUNCTIONS), /\\s*\\(/),\r\n    relevance: 0,\r\n    keywords: { built_in: FUNCTIONS }\r\n  };\r\n\r\n  // keywords with less than 3 letters are reduced in relevancy\r\n  function reduceRelevancy(list, {\r\n    exceptions, when\r\n  } = {}) {\r\n    const qualifyFn = when;\r\n    exceptions = exceptions || [];\r\n    return list.map((item) => {\r\n      if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\r\n        return item;\r\n      } else if (qualifyFn(item)) {\r\n        return `${item}|0`;\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    name: 'SQL',\r\n    case_insensitive: true,\r\n    // does not include {} or HTML tags `</`\r\n    illegal: /[{}]|<\\//,\r\n    keywords: {\r\n      $pattern: /\\b[\\w\\.]+/,\r\n      keyword:\r\n        reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),\r\n      literal: LITERALS,\r\n      type: TYPES,\r\n      built_in: POSSIBLE_WITHOUT_PARENS\r\n    },\r\n    contains: [\r\n      {\r\n        begin: regex.either(...COMBOS),\r\n        relevance: 0,\r\n        keywords: {\r\n          $pattern: /[\\w\\.]+/,\r\n          keyword: KEYWORDS.concat(COMBOS),\r\n          literal: LITERALS,\r\n          type: TYPES\r\n        },\r\n      },\r\n      {\r\n        className: \"type\",\r\n        begin: regex.either(...MULTI_WORD_TYPES)\r\n      },\r\n      FUNCTION_CALL,\r\n      VARIABLE,\r\n      STRING,\r\n      QUOTED_IDENTIFIER,\r\n      hljs.C_NUMBER_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      COMMENT_MODE,\r\n      OPERATOR\r\n    ]\r\n  };\r\n}\r\n"],"names":["sql","hljs","regex","COMMENT_MODE","COMMENT","LITERALS","TYPES","RESERVED_FUNCTIONS","COMBOS","FUNCTIONS","KEYWORDS","filter","keyword","includes","FUNCTION_CALL","begin","concat","either","relevance","keywords","built_in","name","case_insensitive","illegal","$pattern","list","exceptions","when","qualifyFn","map","item","match","reduceRelevancy","x","length","literal","type","contains","className","variants","end","C_NUMBER_MODE","C_BLOCK_COMMENT_MODE"],"mappings":"AAsBe,SAAQA,EAACC,GACtB,MAAMC,EAAQD,EAAKC,MACbC,EAAeF,EAAKG,QAAQ,KAAM,KAiBlCC,EAAW,CACf,OACA,QAGA,WAUIC,EAAQ,CACZ,SACA,SACA,OACA,UACA,OACA,YACA,OACA,OACA,MACA,WACA,UACA,QACA,MACA,UACA,WACA,QACA,QACA,WACA,UACA,OACA,MACA,WACA,OACA,YACA,UACA,UACA,aAmYIC,EAAqB,CACzB,MACA,OACA,YACA,OACA,OACA,MACA,OACA,OACA,UACA,WACA,OACA,MACA,OACA,QACA,YACA,aACA,YACA,aACA,QACA,UACA,MACA,UACA,cACA,QACA,aACA,gBACA,cACA,cACA,iBACA,aACA,aACA,uBACA,aACA,MACA,aACA,OACA,UACA,KACA,MACA,QACA,QACA,MACA,MACA,MACA,YACA,QACA,SACA,eACA,kBACA,kBACA,WACA,iBACA,QACA,OACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,aACA,MACA,OACA,OACA,aACA,cACA,YACA,kBACA,MACA,MACA,OACA,YACA,kBACA,QACA,OACA,aACA,SACA,QACA,WACA,UACA,WACA,gBAwBIC,EAAS,CACb,eACA,cACA,cACA,cACA,WACA,cACA,iBACA,gBACA,cACA,gBACA,gBACA,eACA,cACA,aACA,cACA,iBAGIC,EAAYF,EAEZG,EAAW,CArff,MACA,OACA,MACA,WACA,QACA,MACA,MACA,MACA,QACA,YACA,wBACA,KACA,aACA,OACA,aACA,KACA,OACA,SACA,gBACA,MACA,QACA,cACA,kBACA,UACA,SACA,SACA,OACA,UACA,OACA,KACA,OACA,SACA,cACA,WACA,OACA,OACA,OACA,UACA,OACA,cACA,YACA,mBACA,QACA,aACA,OACA,QACA,WACA,UACA,UACA,SACA,SACA,YACA,UACA,aACA,WACA,UACA,OACA,OACA,gBACA,MACA,OACA,QACA,YACA,aACA,SACA,QACA,OACA,YACA,UACA,kBACA,eACA,kCACA,eACA,eACA,cACA,iBACA,eACA,oBACA,eACA,eACA,mCACA,eACA,SACA,QACA,OACA,MACA,aACA,MACA,UACA,WACA,UACA,UACA,SACA,SACA,aACA,QACA,WACA,gBACA,aACA,WACA,SACA,OACA,UACA,OACA,UACA,OACA,QACA,MACA,YACA,gBACA,WACA,SACA,SACA,QACA,SACA,OACA,UACA,SACA,MACA,WACA,UACA,QACA,QACA,SACA,cACA,QACA,QACA,MACA,UACA,YACA,OACA,OACA,OACA,WACA,SACA,MACA,SACA,QACA,QACA,WACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,UACA,QACA,QACA,cACA,SACA,MACA,UACA,YACA,eACA,WACA,OACA,KACA,OACA,aACA,gBACA,cACA,cACA,iBACA,aACA,aACA,uBACA,aACA,MACA,WACA,QACA,aACA,UACA,OACA,UACA,OACA,OACA,aACA,UACA,KACA,QACA,YACA,iBACA,MACA,QACA,QACA,QACA,eACA,kBACA,UACA,MACA,SACA,QACA,SACA,MACA,SACA,MACA,WACA,SACA,QACA,WACA,WACA,UACA,QACA,QACA,MACA,KACA,OACA,YACA,MACA,YACA,QACA,OACA,SACA,UACA,eACA,oBACA,KACA,SACA,MACA,OACA,KACA,MACA,OACA,OACA,KACA,QACA,MACA,QACA,OACA,WACA,UACA,YACA,YACA,UACA,MACA,UACA,eACA,kBACA,kBACA,SACA,UACA,WACA,iBACA,QACA,WACA,YACA,UACA,UACA,YACA,MACA,QACA,OACA,QACA,OACA,YACA,MACA,aACA,cACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,UACA,SACA,SACA,UACA,SACA,QACA,WACA,SACA,MACA,aACA,OACA,UACA,YACA,QACA,SACA,SACA,SACA,OACA,SACA,YACA,eACA,MACA,OACA,UACA,MACA,OACA,OACA,WACA,OACA,WACA,eACA,MACA,eACA,WACA,aACA,OACA,QACA,SACA,aACA,cACA,cACA,SACA,YACA,kBACA,WACA,MACA,YACA,SACA,cACA,cACA,QACA,cACA,MACA,OACA,OACA,OACA,YACA,gBACA,kBACA,KACA,WACA,YACA,kBACA,cACA,QACA,UACA,OACA,aACA,OACA,WACA,UACA,QACA,SACA,UACA,SACA,SACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YACA,UACA,UACA,aACA,OACA,WACA,QACA,eACA,SACA,OACA,SACA,UACA,OAzXA,MACA,MACA,YACA,OACA,QACA,QACA,OACA,QA6fAC,QAAQC,IACAL,EAAmBM,SAASD,KAchCE,EAAgB,CACpBC,MAAOb,EAAMc,OAAO,KAAMd,EAAMe,UAAUR,GAAY,SACtDS,UAAW,EACXC,SAAU,CAAEC,SAAUX,IAoBxB,MAAO,CACLY,KAAM,MACNC,kBAAkB,EAElBC,QAAS,WACTJ,SAAU,CACRK,SAAU,YACVZ,QAvBJ,SAAyBa,GAAMC,WAC7BA,EAAUC,KAAEA,GACV,IACF,MAAMC,EAAYD,EAElB,OADAD,EAAaA,GAAc,GACpBD,EAAKI,KAAKC,GACXA,EAAKC,MAAM,WAAaL,EAAWb,SAASiB,GACvCA,EACEF,EAAUE,GACZ,GAAGA,MAEHA,GAGZ,CAUKE,CAAgBtB,EAAU,CAAEiB,KAAOM,GAAMA,EAAEC,OAAS,IACtDC,QAAS9B,EACT+B,KAAM9B,EACNc,SA7F4B,CAC9B,kBACA,eACA,kCACA,eACA,eACA,iBACA,mCACA,eACA,eACA,cACA,cACA,eACA,YACA,oBACA,mBAgFAiB,SAAU,CACR,CACEtB,MAAOb,EAAMe,UAAUT,GACvBU,UAAW,EACXC,SAAU,CACRK,SAAU,UACVZ,QAASF,EAASM,OAAOR,GACzB2B,QAAS9B,EACT+B,KAAM9B,IAGV,CACEgC,UAAW,OACXvB,MAAOb,EAAMe,OAzmBjB,mBACA,eACA,gBACA,qBAwmBEH,EA9Da,CACfwB,UAAW,WACXvB,MAAO,uBAxkBM,CACbuB,UAAW,SACXC,SAAU,CACR,CACExB,MAAO,IACPyB,IAAK,IACLH,SAAU,CAAE,CAAEtB,MAAO,UAID,CACxBA,MAAO,IACPyB,IAAK,IACLH,SAAU,CAAE,CAAEtB,MAAO,QA2nBnBd,EAAKwC,cACLxC,EAAKyC,qBACLvC,EA/Da,CACfmC,UAAW,WACXvB,MAAO,gDACPG,UAAW,IAgEf"}