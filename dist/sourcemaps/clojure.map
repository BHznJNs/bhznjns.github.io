{"version":3,"file":"clojure.min.js","sources":["../../src/libs/highlight-es/languages/clojure.js"],"sourcesContent":["/*\r\nLanguage: Clojure\r\nDescription: Clojure syntax (based on lisp.js)\r\nAuthor: mfornos\r\nWebsite: https://clojure.org\r\nCategory: lisp\r\n*/\r\n\r\n/** @type LanguageFn */\r\nexport default function(hljs) {\r\n  const SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&\\'';\r\n  const SYMBOL_RE = '[#]?[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:$#]*';\r\n  const globals = 'def defonce defprotocol defstruct defmulti defmethod defn- defn defmacro deftype defrecord';\r\n  const keywords = {\r\n    $pattern: SYMBOL_RE,\r\n    built_in:\r\n      // Clojure keywords\r\n      globals + ' '\r\n      + 'cond apply if-not if-let if not not= =|0 <|0 >|0 <=|0 >=|0 ==|0 +|0 /|0 *|0 -|0 rem '\r\n      + 'quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? '\r\n      + 'set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? '\r\n      + 'class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? '\r\n      + 'string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . '\r\n      + 'inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last '\r\n      + 'drop-while while intern condp case reduced cycle split-at split-with repeat replicate '\r\n      + 'iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext '\r\n      + 'nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends '\r\n      + 'add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler '\r\n      + 'set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter '\r\n      + 'monitor-exit macroexpand macroexpand-1 for dosync and or '\r\n      + 'when when-not when-let comp juxt partial sequence memoize constantly complement identity assert '\r\n      + 'peek pop doto proxy first rest cons cast coll last butlast '\r\n      + 'sigs reify second ffirst fnext nfirst nnext meta with-meta ns in-ns create-ns import '\r\n      + 'refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! '\r\n      + 'assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger '\r\n      + 'bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline '\r\n      + 'flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking '\r\n      + 'assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! '\r\n      + 'reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! '\r\n      + 'new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty '\r\n      + 'hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list '\r\n      + 'disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer '\r\n      + 'chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate '\r\n      + 'unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta '\r\n      + 'lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize'\r\n  };\r\n\r\n  const SYMBOL = {\r\n    begin: SYMBOL_RE,\r\n    relevance: 0\r\n  };\r\n  const NUMBER = {\r\n    scope: 'number',\r\n    relevance: 0,\r\n    variants: [\r\n      { match: /[-+]?0[xX][0-9a-fA-F]+N?/ }, // hexadecimal                 // 0x2a\r\n      { match: /[-+]?0[0-7]+N?/ }, // octal                       // 052\r\n      { match: /[-+]?[1-9][0-9]?[rR][0-9a-zA-Z]+N?/ }, // variable radix from 2 to 36 // 2r101010, 8r52, 36r16\r\n      { match: /[-+]?[0-9]+\\/[0-9]+N?/ }, // ratio                       // 1/2\r\n      { match: /[-+]?[0-9]+((\\.[0-9]*([eE][+-]?[0-9]+)?M?)|([eE][+-]?[0-9]+M?|M))/ }, // float        // 0.42 4.2E-1M 42E1 42M\r\n      { match: /[-+]?([1-9][0-9]*|0)N?/ }, // int (don't match leading 0) // 42 42N\r\n    ]\r\n  };\r\n  const CHARACTER = {\r\n    scope: 'character',\r\n    variants: [\r\n      { match: /\\\\o[0-3]?[0-7]{1,2}/ }, // Unicode Octal 0 - 377\r\n      { match: /\\\\u[0-9a-fA-F]{4}/ }, // Unicode Hex 0000 - FFFF\r\n      { match: /\\\\(newline|space|tab|formfeed|backspace|return)/ }, // special characters\r\n      {\r\n        match: /\\\\\\S/,\r\n        relevance: 0\r\n      } // any non-whitespace char\r\n    ]\r\n  };\r\n  const REGEX = {\r\n    scope: 'regex',\r\n    begin: /#\"/,\r\n    end: /\"/,\r\n    contains: [ hljs.BACKSLASH_ESCAPE ]\r\n  };\r\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\r\n  const COMMA = {\r\n    scope: 'punctuation',\r\n    match: /,/,\r\n    relevance: 0\r\n  };\r\n  const COMMENT = hljs.COMMENT(\r\n    ';',\r\n    '$',\r\n    { relevance: 0 }\r\n  );\r\n  const LITERAL = {\r\n    className: 'literal',\r\n    begin: /\\b(true|false|nil)\\b/\r\n  };\r\n  const COLLECTION = {\r\n    begin: \"\\\\[|(#::?\" + SYMBOL_RE + \")?\\\\{\",\r\n    end: '[\\\\]\\\\}]',\r\n    relevance: 0\r\n  };\r\n  const KEY = {\r\n    className: 'symbol',\r\n    begin: '[:]{1,2}' + SYMBOL_RE\r\n  };\r\n  const LIST = {\r\n    begin: '\\\\(',\r\n    end: '\\\\)'\r\n  };\r\n  const BODY = {\r\n    endsWithParent: true,\r\n    relevance: 0\r\n  };\r\n  const NAME = {\r\n    keywords: keywords,\r\n    className: 'name',\r\n    begin: SYMBOL_RE,\r\n    relevance: 0,\r\n    starts: BODY\r\n  };\r\n  const DEFAULT_CONTAINS = [\r\n    COMMA,\r\n    LIST,\r\n    CHARACTER,\r\n    REGEX,\r\n    STRING,\r\n    COMMENT,\r\n    KEY,\r\n    COLLECTION,\r\n    NUMBER,\r\n    LITERAL,\r\n    SYMBOL\r\n  ];\r\n\r\n  const GLOBAL = {\r\n    beginKeywords: globals,\r\n    keywords: {\r\n      $pattern: SYMBOL_RE,\r\n      keyword: globals\r\n    },\r\n    end: '(\\\\[|#|\\\\d|\"|:|\\\\{|\\\\)|\\\\(|$)',\r\n    contains: [\r\n      {\r\n        className: 'title',\r\n        begin: SYMBOL_RE,\r\n        relevance: 0,\r\n        excludeEnd: true,\r\n        // we can only have a single title\r\n        endsParent: true\r\n      }\r\n    ].concat(DEFAULT_CONTAINS)\r\n  };\r\n\r\n  LIST.contains = [\r\n    GLOBAL,\r\n    NAME,\r\n    BODY\r\n  ];\r\n  BODY.contains = DEFAULT_CONTAINS;\r\n  COLLECTION.contains = DEFAULT_CONTAINS;\r\n\r\n  return {\r\n    name: 'Clojure',\r\n    aliases: [\r\n      'clj',\r\n      'edn'\r\n    ],\r\n    illegal: /\\S/,\r\n    contains: [\r\n      COMMA,\r\n      LIST,\r\n      CHARACTER,\r\n      REGEX,\r\n      STRING,\r\n      COMMENT,\r\n      KEY,\r\n      COLLECTION,\r\n      NUMBER,\r\n      LITERAL\r\n    ]\r\n  };\r\n}\r\n"],"names":["clojure","hljs","SYMBOLSTART","SYMBOL_RE","globals","keywords","$pattern","built_in","SYMBOL","begin","relevance","NUMBER","scope","variants","match","CHARACTER","REGEX","end","contains","BACKSLASH_ESCAPE","STRING","inherit","QUOTE_STRING_MODE","illegal","COMMA","COMMENT","LITERAL","className","COLLECTION","KEY","LIST","BODY","endsWithParent","NAME","starts","DEFAULT_CONTAINS","GLOBAL","beginKeywords","keyword","excludeEnd","endsParent","concat","name","aliases"],"mappings":"AASe,SAAQA,EAACC,GACtB,MAAMC,EAAc,uBACdC,EAAY,QAAUD,EAAc,KAAOA,EAAc,aACzDE,EAAU,6FACVC,EAAW,CACfC,SAAUH,EACVI,SAEEH,++EA8BEI,EAAS,CACbC,MAAON,EACPO,UAAW,GAEPC,EAAS,CACbC,MAAO,SACPF,UAAW,EACXG,SAAU,CACR,CAAEC,MAAO,4BACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,sCACT,CAAEA,MAAO,yBACT,CAAEA,MAAO,qEACT,CAAEA,MAAO,4BAGPC,EAAY,CAChBH,MAAO,YACPC,SAAU,CACR,CAAEC,MAAO,uBACT,CAAEA,MAAO,qBACT,CAAEA,MAAO,mDACT,CACEA,MAAO,OACPJ,UAAW,KAIXM,EAAQ,CACZJ,MAAO,QACPH,MAAO,KACPQ,IAAK,IACLC,SAAU,CAAEjB,EAAKkB,mBAEbC,EAASnB,EAAKoB,QAAQpB,EAAKqB,kBAAmB,CAAEC,QAAS,OACzDC,EAAQ,CACZZ,MAAO,cACPE,MAAO,IACPJ,UAAW,GAEPe,EAAUxB,EAAKwB,QACnB,IACA,IACA,CAAEf,UAAW,IAETgB,EAAU,CACdC,UAAW,UACXlB,MAAO,wBAEHmB,EAAa,CACjBnB,MAAO,YAAcN,EAAY,QACjCc,IAAK,WACLP,UAAW,GAEPmB,EAAM,CACVF,UAAW,SACXlB,MAAO,WAAaN,GAEhB2B,EAAO,CACXrB,MAAO,MACPQ,IAAK,OAEDc,EAAO,CACXC,gBAAgB,EAChBtB,UAAW,GAEPuB,EAAO,CACX5B,SAAUA,EACVsB,UAAW,OACXlB,MAAON,EACPO,UAAW,EACXwB,OAAQH,GAEJI,EAAmB,CACvBX,EACAM,EACAf,EACAC,EACAI,EACAK,EACAI,EACAD,EACAjB,EACAe,EACAlB,GAGI4B,EAAS,CACbC,cAAejC,EACfC,SAAU,CACRC,SAAUH,EACVmC,QAASlC,GAEXa,IAAK,gCACLC,SAAU,CACR,CACES,UAAW,QACXlB,MAAON,EACPO,UAAW,EACX6B,YAAY,EAEZC,YAAY,IAEdC,OAAON,IAWX,OARAL,EAAKZ,SAAW,CACdkB,EACAH,EACAF,GAEFA,EAAKb,SAAWiB,EAChBP,EAAWV,SAAWiB,EAEf,CACLO,KAAM,UACNC,QAAS,CACP,MACA,OAEFpB,QAAS,KACTL,SAAU,CACRM,EACAM,EACAf,EACAC,EACAI,EACAK,EACAI,EACAD,EACAjB,EACAe,GAGN"}