const e=["./katex.min.css","./chunks/katex.min.js","./imgs/sun.svg","./imgs/moon.svg","./imgs/rss.svg","./imgs/homepage.svg","./imgs/broken.svg","./imgs/favicon.png","./fonts/KaTeX_Math-Italic.woff2","./fonts/KaTeX_Main-Regular.woff2","./fonts/KaTeX_Size4-Regular.woff2","./fonts/KaTeX_Size1-Regular.woff2","./fonts/KaTeX_AMS-Regular.woff2"];self.addEventListener("install",(o=>{console.log("[Service Worker] Installing..."),o.waitUntil((async()=>{const o=await caches.open("MarkdownBlog");console.log("[Service Worker] Caching all: app shell and content");for(const s of e)try{await o.add(s)}catch(e){console.log("[Service Worker] Cache error when requesting resource "+s),console.error(e)}})())})),self.addEventListener("activate",(e=>{console.log("[Service Worker] Activated")})),self.addEventListener("fetch",(e=>{const o=e.request;caches.match(o)?(e.respondWith(caches.match(o)),console.log(`[Service Worker] Used cached ${o.url} to response request`)):(e.respondWith(fetch(o)),console.log(`[Service Worker] Fetching ${o.url}`))}));
//# sourceMappingURL=./sourcemaps/sw.map
