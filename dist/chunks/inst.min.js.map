{"version":3,"file":"inst.min.js","sources":["../../src/utils/eventbus/inst.js","../../src/utils/eventbus/index.js"],"sourcesContent":["import EventBus from \"./index.js\"\r\nconst eventbus = new EventBus()\r\nexport default eventbus\r\n","export default class EventBus {\r\n    // A map used to store events and handlers for events\r\n    events = new Map()\r\n\r\n    /**\r\n     * @name emit\r\n     * @description to trigger the handlers for the given event name\r\n     * @param { String | Symbol } name event name\r\n     * @param { Array<any> }      args use `...` to support multi-arg\r\n     */\r\n    emit(name, ...args) {\r\n        const targetEvent = this.events.get(name)\r\n\r\n        if (targetEvent) {\r\n            targetEvent.forEach((handler) => {\r\n                handler.apply(null, args)\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name on\r\n     * @description to add event listener & register the given event handler\r\n     * @param { String | Symbol } name event name\r\n     * @param { EventHandler } handler given handler to given event\r\n     */\r\n    on(name, handler) {\r\n        const targetEvent = this.events.get(name)\r\n\r\n        if (targetEvent) {\r\n            targetEvent.push(handler)\r\n        } else {\r\n            this.events.set(name, [handler])\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name off\r\n     * @description remove the given handler to the given event\r\n     * @param { String | Symbol } name event name\r\n     * @param { EventHandler } handler given handler to given event\r\n     */\r\n    off(name, handler) {\r\n        const targetEvent = this.events.get(name)\r\n\r\n        if (targetEvent) {\r\n            if (targetEvent.length === 1) {\r\n                this.events.delete(name)\r\n            } else {\r\n                const handlerIndex = targetEvent.indexOf(handler)\r\n                targetEvent.splice(handlerIndex, 1)\r\n            }\r\n        }\r\n    }\r\n}"],"names":["eventbus","events","Map","emit","name","args","targetEvent","this","get","forEach","handler","apply","on","push","set","off","length","delete","handlerIndex","indexOf","splice"],"mappings":"AACK,MAACA,EAAW,ICDF,MAEXC,OAAS,IAAIC,IAQb,IAAAC,CAAKC,KAASC,GACV,MAAMC,EAAcC,KAAKN,OAAOO,IAAIJ,GAEhCE,GACAA,EAAYG,SAASC,IACjBA,EAAQC,MAAM,KAAMN,EAAK,GAGpC,CAQD,EAAAO,CAAGR,EAAMM,GACL,MAAMJ,EAAcC,KAAKN,OAAOO,IAAIJ,GAEhCE,EACAA,EAAYO,KAAKH,GAEjBH,KAAKN,OAAOa,IAAIV,EAAM,CAACM,GAE9B,CAQD,GAAAK,CAAIX,EAAMM,GACN,MAAMJ,EAAcC,KAAKN,OAAOO,IAAIJ,GAEpC,GAAIE,EACA,GAA2B,IAAvBA,EAAYU,OACZT,KAAKN,OAAOgB,OAAOb,OAChB,CACH,MAAMc,EAAeZ,EAAYa,QAAQT,GACzCJ,EAAYc,OAAOF,EAAc,EACpC,CAER"}